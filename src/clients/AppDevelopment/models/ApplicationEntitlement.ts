/* tslint:disable */
/* eslint-disable */
/**
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApplicationTransaction } from './ApplicationTransaction';
import {
    ApplicationTransactionFromJSON,
    ApplicationTransactionFromJSONTyped,
    ApplicationTransactionToJSON,
} from './ApplicationTransaction';

/**
 * 
 * @export
 * @interface ApplicationEntitlement
 */
export interface ApplicationEntitlement {
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    appKey?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ApplicationEntitlement
     */
    applicationEntitlementId?: number;
    /**
     * 
     * @type {number}
     * @memberof ApplicationEntitlement
     */
    packageId?: number;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    applicationLicenseType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    entitlementStatus?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ApplicationEntitlement
     */
    tenantId?: number;
    /**
     * 
     * @type {number}
     * @memberof ApplicationEntitlement
     */
    siteId?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof ApplicationEntitlement
     */
    effectiveStartDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ApplicationEntitlement
     */
    effectiveEndDate?: Date | null;
    /**
     * 
     * @type {Array<ApplicationTransaction>}
     * @memberof ApplicationEntitlement
     */
    applicationTransactions?: Array<ApplicationTransaction> | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    applicationName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    applicationVersion?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    installedByFirstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    installedByLastName?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ApplicationEntitlement
     */
    installedDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    packageName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    tenantName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    applicationStatusId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ApplicationEntitlement
     */
    applicationId?: number;
    /**
     * Denotes which DevAccountId is the application installed in
     * @type {number}
     * @memberof ApplicationEntitlement
     */
    devAccountId?: number;
    /**
     * 
     * @type {string}
     * @memberof ApplicationEntitlement
     */
    installedAppsApplicationId?: string | null;
    /**
     * Denotes the application owner dev account id
     * @type {number}
     * @memberof ApplicationEntitlement
     */
    appOwnerDevAccountId?: number;
}

/**
 * Check if a given object implements the ApplicationEntitlement interface.
 */
export function instanceOfApplicationEntitlement(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApplicationEntitlementFromJSON(json: any): ApplicationEntitlement {
    return ApplicationEntitlementFromJSONTyped(json, false);
}

export function ApplicationEntitlementFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationEntitlement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appKey': !exists(json, 'appKey') ? undefined : json['appKey'],
        'applicationEntitlementId': !exists(json, 'applicationEntitlementId') ? undefined : json['applicationEntitlementId'],
        'packageId': !exists(json, 'packageId') ? undefined : json['packageId'],
        'applicationLicenseType': !exists(json, 'applicationLicenseType') ? undefined : json['applicationLicenseType'],
        'entitlementStatus': !exists(json, 'entitlementStatus') ? undefined : json['entitlementStatus'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'siteId': !exists(json, 'siteId') ? undefined : json['siteId'],
        'effectiveStartDate': !exists(json, 'effectiveStartDate') ? undefined : (json['effectiveStartDate'] === null ? null : new Date(json['effectiveStartDate'])),
        'effectiveEndDate': !exists(json, 'effectiveEndDate') ? undefined : (json['effectiveEndDate'] === null ? null : new Date(json['effectiveEndDate'])),
        'applicationTransactions': !exists(json, 'applicationTransactions') ? undefined : (json['applicationTransactions'] === null ? null : (json['applicationTransactions'] as Array<any>).map(ApplicationTransactionFromJSON)),
        'applicationName': !exists(json, 'applicationName') ? undefined : json['applicationName'],
        'applicationVersion': !exists(json, 'applicationVersion') ? undefined : json['applicationVersion'],
        'installedByFirstName': !exists(json, 'installedByFirstName') ? undefined : json['installedByFirstName'],
        'installedByLastName': !exists(json, 'installedByLastName') ? undefined : json['installedByLastName'],
        'installedDate': !exists(json, 'installedDate') ? undefined : (new Date(json['installedDate'])),
        'packageName': !exists(json, 'packageName') ? undefined : json['packageName'],
        'tenantName': !exists(json, 'tenantName') ? undefined : json['tenantName'],
        'applicationStatusId': !exists(json, 'applicationStatusId') ? undefined : json['applicationStatusId'],
        'applicationId': !exists(json, 'applicationId') ? undefined : json['applicationId'],
        'devAccountId': !exists(json, 'devAccountId') ? undefined : json['devAccountId'],
        'installedAppsApplicationId': !exists(json, 'installedAppsApplicationId') ? undefined : json['installedAppsApplicationId'],
        'appOwnerDevAccountId': !exists(json, 'appOwnerDevAccountId') ? undefined : json['appOwnerDevAccountId'],
    };
}

export function ApplicationEntitlementToJSON(value?: ApplicationEntitlement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'appKey': value.appKey,
        'applicationEntitlementId': value.applicationEntitlementId,
        'packageId': value.packageId,
        'applicationLicenseType': value.applicationLicenseType,
        'entitlementStatus': value.entitlementStatus,
        'tenantId': value.tenantId,
        'siteId': value.siteId,
        'effectiveStartDate': value.effectiveStartDate === undefined ? undefined : (value.effectiveStartDate === null ? null : value.effectiveStartDate.toISOString()),
        'effectiveEndDate': value.effectiveEndDate === undefined ? undefined : (value.effectiveEndDate === null ? null : value.effectiveEndDate.toISOString()),
        'applicationTransactions': value.applicationTransactions === undefined ? undefined : (value.applicationTransactions === null ? null : (value.applicationTransactions as Array<any>).map(ApplicationTransactionToJSON)),
        'applicationName': value.applicationName,
        'applicationVersion': value.applicationVersion,
        'installedByFirstName': value.installedByFirstName,
        'installedByLastName': value.installedByLastName,
        'installedDate': value.installedDate === undefined ? undefined : (value.installedDate.toISOString()),
        'packageName': value.packageName,
        'tenantName': value.tenantName,
        'applicationStatusId': value.applicationStatusId,
        'applicationId': value.applicationId,
        'devAccountId': value.devAccountId,
        'installedAppsApplicationId': value.installedAppsApplicationId,
        'appOwnerDevAccountId': value.appOwnerDevAccountId,
    };
}

