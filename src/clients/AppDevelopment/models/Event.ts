/* tslint:disable */
/* eslint-disable */
/**
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Describes an event that a 3rd party developer can subscribe to.
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * Unique identifier of an Event record.
     * @type {number}
     * @memberof Event
     */
    eventId?: number;
    /**
     * The name of the event.
     * @type {string}
     * @memberof Event
     */
    eventName?: string | null;
    /**
     * The category the event belongs to.
     * @type {string}
     * @memberof Event
     */
    eventCategory?: string | null;
    /**
     * The Api Version Number which defines what events are available for a given API version.
     * @type {string}
     * @memberof Event
     */
    apiVersionNumber?: string | null;
}

/**
 * Check if a given object implements the Event interface.
 */
export function instanceOfEvent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EventFromJSON(json: any): Event {
    return EventFromJSONTyped(json, false);
}

export function EventFromJSONTyped(json: any, ignoreDiscriminator: boolean): Event {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventId': !exists(json, 'eventId') ? undefined : json['eventId'],
        'eventName': !exists(json, 'eventName') ? undefined : json['eventName'],
        'eventCategory': !exists(json, 'eventCategory') ? undefined : json['eventCategory'],
        'apiVersionNumber': !exists(json, 'apiVersionNumber') ? undefined : json['apiVersionNumber'],
    };
}

export function EventToJSON(value?: Event | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eventId': value.eventId,
        'eventName': value.eventName,
        'eventCategory': value.eventCategory,
        'apiVersionNumber': value.apiVersionNumber,
    };
}

