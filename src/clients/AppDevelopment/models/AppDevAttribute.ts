/* tslint:disable */
/* eslint-disable */
/**
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AppDevAttribute
 */
export interface AppDevAttribute {
    /**
     * 
     * @type {number}
     * @memberof AppDevAttribute
     */
    attributeId?: number;
    /**
     * 
     * @type {string}
     * @memberof AppDevAttribute
     */
    code?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AppDevAttribute
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AppDevAttribute
     */
    fqn?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AppDevAttribute
     */
    sequence?: number;
    /**
     * 
     * @type {string}
     * @memberof AppDevAttribute
     */
    vocabularyJson?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AppDevAttribute
     */
    applicationAttributeId?: number;
    /**
     * 
     * @type {string}
     * @memberof AppDevAttribute
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AppDevAttribute
     */
    inputType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AppDevAttribute
     */
    adminName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AppDevAttribute
     */
    vocabularyValues?: string | null;
}

/**
 * Check if a given object implements the AppDevAttribute interface.
 */
export function instanceOfAppDevAttribute(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AppDevAttributeFromJSON(json: any): AppDevAttribute {
    return AppDevAttributeFromJSONTyped(json, false);
}

export function AppDevAttributeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppDevAttribute {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributeId': !exists(json, 'attributeId') ? undefined : json['attributeId'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'fqn': !exists(json, 'fqn') ? undefined : json['fqn'],
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'vocabularyJson': !exists(json, 'vocabularyJson') ? undefined : json['vocabularyJson'],
        'applicationAttributeId': !exists(json, 'applicationAttributeId') ? undefined : json['applicationAttributeId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'inputType': !exists(json, 'inputType') ? undefined : json['inputType'],
        'adminName': !exists(json, 'adminName') ? undefined : json['adminName'],
        'vocabularyValues': !exists(json, 'vocabularyValues') ? undefined : json['vocabularyValues'],
    };
}

export function AppDevAttributeToJSON(value?: AppDevAttribute | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributeId': value.attributeId,
        'code': value.code,
        'type': value.type,
        'fqn': value.fqn,
        'sequence': value.sequence,
        'vocabularyJson': value.vocabularyJson,
        'applicationAttributeId': value.applicationAttributeId,
        'name': value.name,
        'inputType': value.inputType,
        'adminName': value.adminName,
        'vocabularyValues': value.vocabularyValues,
    };
}

