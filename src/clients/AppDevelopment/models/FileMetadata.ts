/* tslint:disable */
/* eslint-disable */
/**
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';

/**
 * 
 * @export
 * @interface FileMetadata
 */
export interface FileMetadata {
    /**
     * 
     * @type {string}
     * @memberof FileMetadata
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FileMetadata
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FileMetadata
     */
    path?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FileMetadata
     */
    checkSum?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FileMetadata
     */
    sizeInBytes?: number;
    /**
     * 
     * @type {AuditInfo}
     * @memberof FileMetadata
     */
    auditInfo?: AuditInfo;
}

/**
 * Check if a given object implements the FileMetadata interface.
 */
export function instanceOfFileMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FileMetadataFromJSON(json: any): FileMetadata {
    return FileMetadataFromJSONTyped(json, false);
}

export function FileMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'checkSum': !exists(json, 'checkSum') ? undefined : json['checkSum'],
        'sizeInBytes': !exists(json, 'sizeInBytes') ? undefined : json['sizeInBytes'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
    };
}

export function FileMetadataToJSON(value?: FileMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'path': value.path,
        'checkSum': value.checkSum,
        'sizeInBytes': value.sizeInBytes,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
    };
}

