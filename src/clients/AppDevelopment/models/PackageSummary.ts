/* tslint:disable */
/* eslint-disable */
/**
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PackageSummary
 */
export interface PackageSummary {
    /**
     * Package Id
     * @type {number}
     * @memberof PackageSummary
     */
    id?: number;
    /**
     * Package Name
     * @type {string}
     * @memberof PackageSummary
     */
    name?: string | null;
    /**
     * Application Name
     * @type {string}
     * @memberof PackageSummary
     */
    applicationName?: string | null;
    /**
     * Application Type Id
     * @type {number}
     * @memberof PackageSummary
     */
    applicationTypeId?: number;
    /**
     * Application Major Version
     * @type {number}
     * @memberof PackageSummary
     */
    majorVersion?: number;
    /**
     * Application Minor Version
     * @type {number}
     * @memberof PackageSummary
     */
    minorVersion?: number;
    /**
     * Application Revision
     * @type {number}
     * @memberof PackageSummary
     */
    revision?: number;
    /**
     * IsLocked
     * @type {boolean}
     * @memberof PackageSummary
     */
    isLocked?: boolean;
    /**
     * ApplicationId
     * @type {number}
     * @memberof PackageSummary
     */
    applicationId?: number;
}

/**
 * Check if a given object implements the PackageSummary interface.
 */
export function instanceOfPackageSummary(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PackageSummaryFromJSON(json: any): PackageSummary {
    return PackageSummaryFromJSONTyped(json, false);
}

export function PackageSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackageSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'applicationName': !exists(json, 'applicationName') ? undefined : json['applicationName'],
        'applicationTypeId': !exists(json, 'applicationTypeId') ? undefined : json['applicationTypeId'],
        'majorVersion': !exists(json, 'majorVersion') ? undefined : json['majorVersion'],
        'minorVersion': !exists(json, 'minorVersion') ? undefined : json['minorVersion'],
        'revision': !exists(json, 'revision') ? undefined : json['revision'],
        'isLocked': !exists(json, 'isLocked') ? undefined : json['isLocked'],
        'applicationId': !exists(json, 'applicationId') ? undefined : json['applicationId'],
    };
}

export function PackageSummaryToJSON(value?: PackageSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'applicationName': value.applicationName,
        'applicationTypeId': value.applicationTypeId,
        'majorVersion': value.majorVersion,
        'minorVersion': value.minorVersion,
        'revision': value.revision,
        'isLocked': value.isLocked,
        'applicationId': value.applicationId,
    };
}

