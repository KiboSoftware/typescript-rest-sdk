/* tslint:disable */
/* eslint-disable */
/**
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HttpContent } from './HttpContent';
import {
    HttpContentFromJSON,
    HttpContentFromJSONTyped,
    HttpContentToJSON,
} from './HttpContent';
import type { HttpRequestMessage } from './HttpRequestMessage';
import {
    HttpRequestMessageFromJSON,
    HttpRequestMessageFromJSONTyped,
    HttpRequestMessageToJSON,
} from './HttpRequestMessage';
import type { HttpStatusCode } from './HttpStatusCode';
import {
    HttpStatusCodeFromJSON,
    HttpStatusCodeFromJSONTyped,
    HttpStatusCodeToJSON,
} from './HttpStatusCode';
import type { StringStringIEnumerableKeyValuePair } from './StringStringIEnumerableKeyValuePair';
import {
    StringStringIEnumerableKeyValuePairFromJSON,
    StringStringIEnumerableKeyValuePairFromJSONTyped,
    StringStringIEnumerableKeyValuePairToJSON,
} from './StringStringIEnumerableKeyValuePair';

/**
 * 
 * @export
 * @interface HttpResponseMessage
 */
export interface HttpResponseMessage {
    /**
     * 
     * @type {string}
     * @memberof HttpResponseMessage
     */
    version?: string | null;
    /**
     * 
     * @type {HttpContent}
     * @memberof HttpResponseMessage
     */
    content?: HttpContent;
    /**
     * 
     * @type {HttpStatusCode}
     * @memberof HttpResponseMessage
     */
    statusCode?: HttpStatusCode;
    /**
     * 
     * @type {string}
     * @memberof HttpResponseMessage
     */
    reasonPhrase?: string | null;
    /**
     * 
     * @type {Array<StringStringIEnumerableKeyValuePair>}
     * @memberof HttpResponseMessage
     */
    readonly headers?: Array<StringStringIEnumerableKeyValuePair> | null;
    /**
     * 
     * @type {Array<StringStringIEnumerableKeyValuePair>}
     * @memberof HttpResponseMessage
     */
    readonly trailingHeaders?: Array<StringStringIEnumerableKeyValuePair> | null;
    /**
     * 
     * @type {HttpRequestMessage}
     * @memberof HttpResponseMessage
     */
    requestMessage?: HttpRequestMessage;
    /**
     * 
     * @type {boolean}
     * @memberof HttpResponseMessage
     */
    readonly isSuccessStatusCode?: boolean;
}

/**
 * Check if a given object implements the HttpResponseMessage interface.
 */
export function instanceOfHttpResponseMessage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HttpResponseMessageFromJSON(json: any): HttpResponseMessage {
    return HttpResponseMessageFromJSONTyped(json, false);
}

export function HttpResponseMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): HttpResponseMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': !exists(json, 'version') ? undefined : json['version'],
        'content': !exists(json, 'content') ? undefined : HttpContentFromJSON(json['content']),
        'statusCode': !exists(json, 'statusCode') ? undefined : HttpStatusCodeFromJSON(json['statusCode']),
        'reasonPhrase': !exists(json, 'reasonPhrase') ? undefined : json['reasonPhrase'],
        'headers': !exists(json, 'headers') ? undefined : (json['headers'] === null ? null : (json['headers'] as Array<any>).map(StringStringIEnumerableKeyValuePairFromJSON)),
        'trailingHeaders': !exists(json, 'trailingHeaders') ? undefined : (json['trailingHeaders'] === null ? null : (json['trailingHeaders'] as Array<any>).map(StringStringIEnumerableKeyValuePairFromJSON)),
        'requestMessage': !exists(json, 'requestMessage') ? undefined : HttpRequestMessageFromJSON(json['requestMessage']),
        'isSuccessStatusCode': !exists(json, 'isSuccessStatusCode') ? undefined : json['isSuccessStatusCode'],
    };
}

export function HttpResponseMessageToJSON(value?: HttpResponseMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'content': HttpContentToJSON(value.content),
        'statusCode': HttpStatusCodeToJSON(value.statusCode),
        'reasonPhrase': value.reasonPhrase,
        'requestMessage': HttpRequestMessageToJSON(value.requestMessage),
    };
}

