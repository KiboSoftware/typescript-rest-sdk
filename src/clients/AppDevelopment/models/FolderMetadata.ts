/* tslint:disable */
/* eslint-disable */
/**
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FileMetadata } from './FileMetadata';
import {
    FileMetadataFromJSON,
    FileMetadataFromJSONTyped,
    FileMetadataToJSON,
} from './FileMetadata';

/**
 * 
 * @export
 * @interface FolderMetadata
 */
export interface FolderMetadata {
    /**
     * 
     * @type {string}
     * @memberof FolderMetadata
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FolderMetadata
     */
    fullPath?: string | null;
    /**
     * 
     * @type {Array<FileMetadata>}
     * @memberof FolderMetadata
     */
    files?: Array<FileMetadata> | null;
    /**
     * 
     * @type {Array<FolderMetadata>}
     * @memberof FolderMetadata
     */
    subFolders?: Array<FolderMetadata> | null;
}

/**
 * Check if a given object implements the FolderMetadata interface.
 */
export function instanceOfFolderMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FolderMetadataFromJSON(json: any): FolderMetadata {
    return FolderMetadataFromJSONTyped(json, false);
}

export function FolderMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolderMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'fullPath': !exists(json, 'fullPath') ? undefined : json['fullPath'],
        'files': !exists(json, 'files') ? undefined : (json['files'] === null ? null : (json['files'] as Array<any>).map(FileMetadataFromJSON)),
        'subFolders': !exists(json, 'subFolders') ? undefined : (json['subFolders'] === null ? null : (json['subFolders'] as Array<any>).map(FolderMetadataFromJSON)),
    };
}

export function FolderMetadataToJSON(value?: FolderMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'fullPath': value.fullPath,
        'files': value.files === undefined ? undefined : (value.files === null ? null : (value.files as Array<any>).map(FileMetadataToJSON)),
        'subFolders': value.subFolders === undefined ? undefined : (value.subFolders === null ? null : (value.subFolders as Array<any>).map(FolderMetadataToJSON)),
    };
}

