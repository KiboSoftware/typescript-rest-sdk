/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Shipping Admin Service
 * OpenAPI Spec for Kibo Shipping Admin Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ServiceTypeLocalizedContent } from './ServiceTypeLocalizedContent';
import {
    ServiceTypeLocalizedContentFromJSON,
    ServiceTypeLocalizedContentFromJSONTyped,
    ServiceTypeLocalizedContentToJSON,
} from './ServiceTypeLocalizedContent';

/**
 * Service Type aka Shipping Method
 * @export
 * @interface ServiceType
 */
export interface ServiceType {
    /**
     * Unique Service Type Code for a particular Carrier
     * @type {string}
     * @memberof ServiceType
     */
    code?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ServiceType
     */
    deliveryDuration?: string | null;
    /**
     * 
     * @type {ServiceTypeLocalizedContent}
     * @memberof ServiceType
     */
    content?: ServiceTypeLocalizedContent;
}

/**
 * Check if a given object implements the ServiceType interface.
 */
export function instanceOfServiceType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ServiceTypeFromJSON(json: any): ServiceType {
    return ServiceTypeFromJSONTyped(json, false);
}

export function ServiceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'deliveryDuration': !exists(json, 'deliveryDuration') ? undefined : json['deliveryDuration'],
        'content': !exists(json, 'content') ? undefined : ServiceTypeLocalizedContentFromJSON(json['content']),
    };
}

export function ServiceTypeToJSON(value?: ServiceType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'deliveryDuration': value.deliveryDuration,
        'content': ServiceTypeLocalizedContentToJSON(value.content),
    };
}

