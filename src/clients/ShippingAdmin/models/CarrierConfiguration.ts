/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Shipping Admin Service
 * OpenAPI Spec for Kibo Shipping Admin Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { CustomTableRate } from './CustomTableRate';
import {
    CustomTableRateFromJSON,
    CustomTableRateFromJSONTyped,
    CustomTableRateToJSON,
} from './CustomTableRate';
import type { Setting } from './Setting';
import {
    SettingFromJSON,
    SettingFromJSONTyped,
    SettingToJSON,
} from './Setting';

/**
 * 
 * @export
 * @interface CarrierConfiguration
 */
export interface CarrierConfiguration {
    /**
     * Carrier Id (usually a shortname of a carrier, e.g. FedEx)
     * @type {string}
     * @memberof CarrierConfiguration
     */
    id?: string | null;
    /**
     * Indicates that this CarrierConfiguration should be used at runtime
     * @type {boolean}
     * @memberof CarrierConfiguration
     */
    enabled?: boolean;
    /**
     * Indicates that this CarrierConfiguration should be the default for returns shipping
     * @type {boolean}
     * @memberof CarrierConfiguration
     */
    enabledForReturns?: boolean;
    /**
     * Carrier Configuration Settings
     * @type {Array<Setting>}
     * @memberof CarrierConfiguration
     */
    settings?: Array<Setting> | null;
    /**
     * A list of custom table rates for the 'Custom' carrier
     * <remarks>only use this if Id == 'Custom'</remarks>
     * @type {Array<CustomTableRate>}
     * @memberof CarrierConfiguration
     */
    customTableRates?: Array<CustomTableRate> | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof CarrierConfiguration
     */
    auditInfo?: AuditInfo;
    /**
     * Indicates whether the credentials/passwords are set.
     * <remarks>Credetials are updated only if this flag is set to true</remarks>
     * @type {boolean}
     * @memberof CarrierConfiguration
     */
    areCredentialsSet?: boolean;
}

/**
 * Check if a given object implements the CarrierConfiguration interface.
 */
export function instanceOfCarrierConfiguration(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CarrierConfigurationFromJSON(json: any): CarrierConfiguration {
    return CarrierConfigurationFromJSONTyped(json, false);
}

export function CarrierConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CarrierConfiguration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'enabledForReturns': !exists(json, 'enabledForReturns') ? undefined : json['enabledForReturns'],
        'settings': !exists(json, 'settings') ? undefined : (json['settings'] === null ? null : (json['settings'] as Array<any>).map(SettingFromJSON)),
        'customTableRates': !exists(json, 'customTableRates') ? undefined : (json['customTableRates'] === null ? null : (json['customTableRates'] as Array<any>).map(CustomTableRateFromJSON)),
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'areCredentialsSet': !exists(json, 'areCredentialsSet') ? undefined : json['areCredentialsSet'],
    };
}

export function CarrierConfigurationToJSON(value?: CarrierConfiguration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'enabled': value.enabled,
        'enabledForReturns': value.enabledForReturns,
        'settings': value.settings === undefined ? undefined : (value.settings === null ? null : (value.settings as Array<any>).map(SettingToJSON)),
        'customTableRates': value.customTableRates === undefined ? undefined : (value.customTableRates === null ? null : (value.customTableRates as Array<any>).map(CustomTableRateToJSON)),
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'areCredentialsSet': value.areCredentialsSet,
    };
}

