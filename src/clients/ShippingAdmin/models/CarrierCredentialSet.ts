/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Shipping Admin Service
 * OpenAPI Spec for Kibo Shipping Admin Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { CarrierCredentialSetValue } from './CarrierCredentialSetValue';
import {
    CarrierCredentialSetValueFromJSON,
    CarrierCredentialSetValueFromJSONTyped,
    CarrierCredentialSetValueToJSON,
} from './CarrierCredentialSetValue';

/**
 * Stores a set of <see cref="T:Mozu.ShippingAdmin.Contracts.Carriers.CarrierCredentialSetValue">carrier credential key-value pairs</see>.
 * Sets are stored at the tenant level and referenced by a Mozu.ShippingAdmin.Contracts.Carriers.CarrierCredential.
 * @export
 * @interface CarrierCredentialSet
 */
export interface CarrierCredentialSet {
    /**
     * The Carrier ID associated with this credential set.
     * Usually the short name of a carrier (e.g., "FedEx").
     * @type {string}
     * @memberof CarrierCredentialSet
     */
    carrierId?: string | null;
    /**
     * A unique code identifying this credential set.
     * The code is only guaranteed to be unique at the tenant and carrier level.
     * @type {string}
     * @memberof CarrierCredentialSet
     */
    code?: string | null;
    /**
     * A name (i.e., nickname) for this credential set.
     * @type {string}
     * @memberof CarrierCredentialSet
     */
    name?: string | null;
    /**
     * A collection of values contained in this credential set.
     * @type {Array<CarrierCredentialSetValue>}
     * @memberof CarrierCredentialSet
     */
    values?: Array<CarrierCredentialSetValue> | null;
    /**
     * Specifies the ID returned from an integration.
     * @type {string}
     * @memberof CarrierCredentialSet
     */
    integrationId?: string | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof CarrierCredentialSet
     */
    auditInfo?: AuditInfo;
}

/**
 * Check if a given object implements the CarrierCredentialSet interface.
 */
export function instanceOfCarrierCredentialSet(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CarrierCredentialSetFromJSON(json: any): CarrierCredentialSet {
    return CarrierCredentialSetFromJSONTyped(json, false);
}

export function CarrierCredentialSetFromJSONTyped(json: any, ignoreDiscriminator: boolean): CarrierCredentialSet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'carrierId': !exists(json, 'carrierId') ? undefined : json['carrierId'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'values': !exists(json, 'values') ? undefined : (json['values'] === null ? null : (json['values'] as Array<any>).map(CarrierCredentialSetValueFromJSON)),
        'integrationId': !exists(json, 'integrationId') ? undefined : json['integrationId'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
    };
}

export function CarrierCredentialSetToJSON(value?: CarrierCredentialSet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'carrierId': value.carrierId,
        'code': value.code,
        'name': value.name,
        'values': value.values === undefined ? undefined : (value.values === null ? null : (value.values as Array<any>).map(CarrierCredentialSetValueToJSON)),
        'integrationId': value.integrationId,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
    };
}

