/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Shipping Admin Service
 * OpenAPI Spec for Kibo Shipping Admin Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CarrierCredentialSetMetadataDataType } from './CarrierCredentialSetMetadataDataType';
import {
    CarrierCredentialSetMetadataDataTypeFromJSON,
    CarrierCredentialSetMetadataDataTypeFromJSONTyped,
    CarrierCredentialSetMetadataDataTypeToJSON,
} from './CarrierCredentialSetMetadataDataType';
import type { CarrierCredentialSetMetadataLocalizedContent } from './CarrierCredentialSetMetadataLocalizedContent';
import {
    CarrierCredentialSetMetadataLocalizedContentFromJSON,
    CarrierCredentialSetMetadataLocalizedContentFromJSONTyped,
    CarrierCredentialSetMetadataLocalizedContentToJSON,
} from './CarrierCredentialSetMetadataLocalizedContent';

/**
 * The metadata for a single field on a Mozu.ShippingAdmin.Contracts.Carriers.CarrierCredentialSet.
 * This metadata is used during carrier installation and carrier credential set validation.
 * @export
 * @interface CarrierCredentialSetMetadata
 */
export interface CarrierCredentialSetMetadata {
    /**
     * 
     * @type {string}
     * @memberof CarrierCredentialSetMetadata
     */
    name?: string | null;
    /**
     * 
     * @type {CarrierCredentialSetMetadataDataType}
     * @memberof CarrierCredentialSetMetadata
     */
    dataType?: CarrierCredentialSetMetadataDataType;
    /**
     * 
     * @type {boolean}
     * @memberof CarrierCredentialSetMetadata
     */
    required?: boolean;
    /**
     * 
     * @type {Array<CarrierCredentialSetMetadataLocalizedContent>}
     * @memberof CarrierCredentialSetMetadata
     */
    localizations?: Array<CarrierCredentialSetMetadataLocalizedContent> | null;
}

/**
 * Check if a given object implements the CarrierCredentialSetMetadata interface.
 */
export function instanceOfCarrierCredentialSetMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CarrierCredentialSetMetadataFromJSON(json: any): CarrierCredentialSetMetadata {
    return CarrierCredentialSetMetadataFromJSONTyped(json, false);
}

export function CarrierCredentialSetMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CarrierCredentialSetMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'dataType': !exists(json, 'dataType') ? undefined : CarrierCredentialSetMetadataDataTypeFromJSON(json['dataType']),
        'required': !exists(json, 'required') ? undefined : json['required'],
        'localizations': !exists(json, 'localizations') ? undefined : (json['localizations'] === null ? null : (json['localizations'] as Array<any>).map(CarrierCredentialSetMetadataLocalizedContentFromJSON)),
    };
}

export function CarrierCredentialSetMetadataToJSON(value?: CarrierCredentialSetMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'dataType': CarrierCredentialSetMetadataDataTypeToJSON(value.dataType),
        'required': value.required,
        'localizations': value.localizations === undefined ? undefined : (value.localizations === null ? null : (value.localizations as Array<any>).map(CarrierCredentialSetMetadataLocalizedContentToJSON)),
    };
}

