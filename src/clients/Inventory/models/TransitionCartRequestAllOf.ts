/* tslint:disable */
/* eslint-disable */
/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TransitionCartItem } from './TransitionCartItem';
import {
    TransitionCartItemFromJSON,
    TransitionCartItemFromJSONTyped,
    TransitionCartItemToJSON,
} from './TransitionCartItem';

/**
 * 
 * @export
 * @interface TransitionCartRequestAllOf
 */
export interface TransitionCartRequestAllOf {
    /**
     * list of TransitionCartItem
     * @type {Array<TransitionCartItem>}
     * @memberof TransitionCartRequestAllOf
     */
    items?: Array<TransitionCartItem>;
    /**
     * Cart ID that we are transitioning the allocation from
     * @type {string}
     * @memberof TransitionCartRequestAllOf
     */
    cartID?: string;
    /**
     * Order ID for the cart to transition to
     * @type {number}
     * @memberof TransitionCartRequestAllOf
     */
    orderID?: number;
}

/**
 * Check if a given object implements the TransitionCartRequestAllOf interface.
 */
export function instanceOfTransitionCartRequestAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransitionCartRequestAllOfFromJSON(json: any): TransitionCartRequestAllOf {
    return TransitionCartRequestAllOfFromJSONTyped(json, false);
}

export function TransitionCartRequestAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransitionCartRequestAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(TransitionCartItemFromJSON)),
        'cartID': !exists(json, 'cartID') ? undefined : json['cartID'],
        'orderID': !exists(json, 'orderID') ? undefined : json['orderID'],
    };
}

export function TransitionCartRequestAllOfToJSON(value?: TransitionCartRequestAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(TransitionCartItemToJSON)),
        'cartID': value.cartID,
        'orderID': value.orderID,
    };
}

