/* tslint:disable */
/* eslint-disable */
/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductIdentifier } from './ProductIdentifier';
import {
    ProductIdentifierFromJSON,
    ProductIdentifierFromJSONTyped,
    ProductIdentifierToJSON,
} from './ProductIdentifier';

/**
 * Delete Item Model
 * @export
 * @interface MDeleteItem
 */
export interface MDeleteItem {
    /**
     * Product Identifier
     * @type {number}
     * @memberof MDeleteItem
     */
    productID?: number;
    /**
     * List of inventory identifiers associated with the deleted item
     * @type {Array<number>}
     * @memberof MDeleteItem
     */
    inventoryIDs?: Array<number>;
    /**
     * List of location identifiers associated with the deleted item
     * @type {Array<number>}
     * @memberof MDeleteItem
     */
    locationIDs?: Array<number>;
    /**
     * List of location codes associated with the deleted item
     * @type {Array<string>}
     * @memberof MDeleteItem
     */
    locationCodes?: Array<string>;
    /**
     * List of audit identifiers associated with the deleted item
     * @type {Array<number>}
     * @memberof MDeleteItem
     */
    auditIDs?: Array<number>;
    /**
     * 
     * @type {ProductIdentifier}
     * @memberof MDeleteItem
     */
    itemIdentifier?: ProductIdentifier;
}

/**
 * Check if a given object implements the MDeleteItem interface.
 */
export function instanceOfMDeleteItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MDeleteItemFromJSON(json: any): MDeleteItem {
    return MDeleteItemFromJSONTyped(json, false);
}

export function MDeleteItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): MDeleteItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productID': !exists(json, 'productID') ? undefined : json['productID'],
        'inventoryIDs': !exists(json, 'inventoryIDs') ? undefined : json['inventoryIDs'],
        'locationIDs': !exists(json, 'locationIDs') ? undefined : json['locationIDs'],
        'locationCodes': !exists(json, 'locationCodes') ? undefined : json['locationCodes'],
        'auditIDs': !exists(json, 'auditIDs') ? undefined : json['auditIDs'],
        'itemIdentifier': !exists(json, 'itemIdentifier') ? undefined : ProductIdentifierFromJSON(json['itemIdentifier']),
    };
}

export function MDeleteItemToJSON(value?: MDeleteItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productID': value.productID,
        'inventoryIDs': value.inventoryIDs,
        'locationIDs': value.locationIDs,
        'locationCodes': value.locationCodes,
        'auditIDs': value.auditIDs,
        'itemIdentifier': ProductIdentifierToJSON(value.itemIdentifier),
    };
}

