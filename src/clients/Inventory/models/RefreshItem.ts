/* tslint:disable */
/* eslint-disable */
/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Refresh Item
 * @export
 * @interface RefreshItem
 */
export interface RefreshItem {
    /**
     * Part/Product Number
     * @type {string}
     * @memberof RefreshItem
     */
    partNumber?: string;
    /**
     * Universal Product Code
     * @type {string}
     * @memberof RefreshItem
     */
    upc?: string;
    /**
     * Stock Keeping Unit
     * @type {string}
     * @memberof RefreshItem
     */
    sku?: string;
    /**
     * Bin Location Identifier
     * @type {number}
     * @memberof RefreshItem
     */
    binID?: number;
    /**
     * Custom field used for store prioritization
     * @type {number}
     * @memberof RefreshItem
     */
    lTD?: number;
    /**
     * Absolute minimum quantity of this item that should be in stock at any time
     * @type {number}
     * @memberof RefreshItem
     */
    floor?: number;
    /**
     * Quantity of this item the location wants to keep in stock to ensure stock isn't completely depleted
     * @type {number}
     * @memberof RefreshItem
     */
    safetyStock?: number;
    /**
     * Current Quantity of Item
     * @type {number}
     * @memberof RefreshItem
     */
    quantity?: number;
    /**
     * Stock Keeping Unit
     * @type {number}
     * @memberof RefreshItem
     */
    retailPrice?: number;
    /**
     * The price of the item
     * @type {number}
     * @memberof RefreshItem
     */
    currencyID?: number;
    /**
     * The inventory locator name of the item
     * @type {string}
     * @memberof RefreshItem
     */
    inventoryLocatorName?: string;
    /**
     * List of Item Attributes
     * @type {Array<string>}
     * @memberof RefreshItem
     */
    attributes?: Array<string>;
    /**
     * Associative Map of <String, String> for tagCategoryName => tagName
     * @type {{ [key: string]: string; }}
     * @memberof RefreshItem
     */
    tags?: { [key: string]: string; };
    /**
     * Date at which this inventory will become available. Expected format '2020-09-28T12:00:00-0500'
     * @type {Date}
     * @memberof RefreshItem
     */
    deliveryDate?: Date;
}

/**
 * Check if a given object implements the RefreshItem interface.
 */
export function instanceOfRefreshItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RefreshItemFromJSON(json: any): RefreshItem {
    return RefreshItemFromJSONTyped(json, false);
}

export function RefreshItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefreshItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'partNumber': !exists(json, 'partNumber') ? undefined : json['partNumber'],
        'upc': !exists(json, 'upc') ? undefined : json['upc'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'binID': !exists(json, 'binID') ? undefined : json['binID'],
        'lTD': !exists(json, 'LTD') ? undefined : json['LTD'],
        'floor': !exists(json, 'floor') ? undefined : json['floor'],
        'safetyStock': !exists(json, 'safetyStock') ? undefined : json['safetyStock'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'retailPrice': !exists(json, 'retailPrice') ? undefined : json['retailPrice'],
        'currencyID': !exists(json, 'currencyID') ? undefined : json['currencyID'],
        'inventoryLocatorName': !exists(json, 'inventoryLocatorName') ? undefined : json['inventoryLocatorName'],
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'deliveryDate': !exists(json, 'deliveryDate') ? undefined : json['deliveryDate'],
    };
}

export function RefreshItemToJSON(value?: RefreshItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'partNumber': value.partNumber,
        'upc': value.upc,
        'sku': value.sku,
        'binID': value.binID,
        'LTD': value.lTD,
        'floor': value.floor,
        'safetyStock': value.safetyStock,
        'quantity': value.quantity,
        'retailPrice': value.retailPrice,
        'currencyID': value.currencyID,
        'inventoryLocatorName': value.inventoryLocatorName,
        'attributes': value.attributes,
        'tags': value.tags,
        'deliveryDate': value.deliveryDate,
    };
}

