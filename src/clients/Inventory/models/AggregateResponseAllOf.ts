/* tslint:disable */
/* eslint-disable */
/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AggregateResponseAllOf
 */
export interface AggregateResponseAllOf {
    /**
     * Manufacturer Identifier
     * @type {number}
     * @memberof AggregateResponseAllOf
     */
    tenantID?: number;
    /**
     * The quantity the location has in its possession
     * @type {number}
     * @memberof AggregateResponseAllOf
     */
    onHand?: number;
    /**
     * The quantity the location has that are available for purchase
     * @type {number}
     * @memberof AggregateResponseAllOf
     */
    available?: number;
    /**
     * Part/Product Number
     * @type {string}
     * @memberof AggregateResponseAllOf
     */
    partNumber?: string;
    /**
     * Universal Product Code
     * @type {string}
     * @memberof AggregateResponseAllOf
     */
    upc?: string;
    /**
     * Stock Keeping Unit
     * @type {string}
     * @memberof AggregateResponseAllOf
     */
    sku?: string;
    /**
     * Absolute minimum quantity of this item that should be in stock at any time
     * @type {number}
     * @memberof AggregateResponseAllOf
     */
    floor?: number;
    /**
     * Associative Map of <String, String> for tagCategoryName => tagName
     * @type {{ [key: string]: string; }}
     * @memberof AggregateResponseAllOf
     */
    tags?: { [key: string]: string; };
}

/**
 * Check if a given object implements the AggregateResponseAllOf interface.
 */
export function instanceOfAggregateResponseAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AggregateResponseAllOfFromJSON(json: any): AggregateResponseAllOf {
    return AggregateResponseAllOfFromJSONTyped(json, false);
}

export function AggregateResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): AggregateResponseAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tenantID': !exists(json, 'tenantID') ? undefined : json['tenantID'],
        'onHand': !exists(json, 'onHand') ? undefined : json['onHand'],
        'available': !exists(json, 'available') ? undefined : json['available'],
        'partNumber': !exists(json, 'partNumber') ? undefined : json['partNumber'],
        'upc': !exists(json, 'upc') ? undefined : json['upc'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'floor': !exists(json, 'floor') ? undefined : json['floor'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
    };
}

export function AggregateResponseAllOfToJSON(value?: AggregateResponseAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tenantID': value.tenantID,
        'onHand': value.onHand,
        'available': value.available,
        'partNumber': value.partNumber,
        'upc': value.upc,
        'sku': value.sku,
        'floor': value.floor,
        'tags': value.tags,
    };
}

