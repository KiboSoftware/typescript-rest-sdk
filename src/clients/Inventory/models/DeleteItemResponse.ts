/* tslint:disable */
/* eslint-disable */
/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MDeleteItem } from './MDeleteItem';
import {
    MDeleteItemFromJSON,
    MDeleteItemFromJSONTyped,
    MDeleteItemToJSON,
} from './MDeleteItem';

/**
 * Delete Item Response
 * @export
 * @interface DeleteItemResponse
 */
export interface DeleteItemResponse {
    /**
     * Flag used to differentiate between a test and a non-test run.
     * @type {boolean}
     * @memberof DeleteItemResponse
     */
    dryRun?: boolean;
    /**
     * Items deleted due to the request
     * @type {Array<MDeleteItem>}
     * @memberof DeleteItemResponse
     */
    itemsDeleted?: Array<MDeleteItem>;
    /**
     * Flag used to differentiate between a test and a non-test run.
     * @type {boolean}
     * @memberof DeleteItemResponse
     */
    totalAuditsDeleted?: boolean;
    /**
     * Flag used to differentiate between a test and a non-test run.
     * @type {boolean}
     * @memberof DeleteItemResponse
     */
    totalInventoryEntriesDeleted?: boolean;
    /**
     * Flag used to differentiate between a test and a non-test run.
     * @type {boolean}
     * @memberof DeleteItemResponse
     */
    totalLocationsAffected?: boolean;
    /**
     * Flag used to differentiate between a test and a non-test run.
     * @type {boolean}
     * @memberof DeleteItemResponse
     */
    totalPickWavesDeleted?: boolean;
    /**
     * Flag used to differentiate between a test and a non-test run.
     * @type {boolean}
     * @memberof DeleteItemResponse
     */
    totalProductsDeleted?: boolean;
    /**
     * Flag used to differentiate between a test and a non-test run.
     * @type {boolean}
     * @memberof DeleteItemResponse
     */
    jobIDs?: boolean;
}

/**
 * Check if a given object implements the DeleteItemResponse interface.
 */
export function instanceOfDeleteItemResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DeleteItemResponseFromJSON(json: any): DeleteItemResponse {
    return DeleteItemResponseFromJSONTyped(json, false);
}

export function DeleteItemResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteItemResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dryRun': !exists(json, 'dryRun') ? undefined : json['dryRun'],
        'itemsDeleted': !exists(json, 'itemsDeleted') ? undefined : ((json['itemsDeleted'] as Array<any>).map(MDeleteItemFromJSON)),
        'totalAuditsDeleted': !exists(json, 'totalAuditsDeleted') ? undefined : json['totalAuditsDeleted'],
        'totalInventoryEntriesDeleted': !exists(json, 'totalInventoryEntriesDeleted') ? undefined : json['totalInventoryEntriesDeleted'],
        'totalLocationsAffected': !exists(json, 'totalLocationsAffected') ? undefined : json['totalLocationsAffected'],
        'totalPickWavesDeleted': !exists(json, 'totalPickWavesDeleted') ? undefined : json['totalPickWavesDeleted'],
        'totalProductsDeleted': !exists(json, 'totalProductsDeleted') ? undefined : json['totalProductsDeleted'],
        'jobIDs': !exists(json, 'jobIDs') ? undefined : json['jobIDs'],
    };
}

export function DeleteItemResponseToJSON(value?: DeleteItemResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dryRun': value.dryRun,
        'itemsDeleted': value.itemsDeleted === undefined ? undefined : ((value.itemsDeleted as Array<any>).map(MDeleteItemToJSON)),
        'totalAuditsDeleted': value.totalAuditsDeleted,
        'totalInventoryEntriesDeleted': value.totalInventoryEntriesDeleted,
        'totalLocationsAffected': value.totalLocationsAffected,
        'totalPickWavesDeleted': value.totalPickWavesDeleted,
        'totalProductsDeleted': value.totalProductsDeleted,
        'jobIDs': value.jobIDs,
    };
}

