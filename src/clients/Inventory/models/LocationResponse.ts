/* tslint:disable */
/* eslint-disable */
/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LocationResponse
 */
export interface LocationResponse {
    /**
     * Flag for success
     * @type {boolean}
     * @memberof LocationResponse
     */
    success?: boolean;
    /**
     * List of messages
     * @type {Array<string>}
     * @memberof LocationResponse
     */
    messages?: Array<string>;
    /**
     * Number of results
     * @type {number}
     * @memberof LocationResponse
     */
    numResults?: number;
    /**
     * Internal Location ID
     * @type {number}
     * @memberof LocationResponse
     */
    locationID?: number;
    /**
     * Tenant ID
     * @type {number}
     * @memberof LocationResponse
     */
    tenantID?: number;
    /**
     * Location Code
     * @type {string}
     * @memberof LocationResponse
     */
    locationCode?: string;
    /**
     * Flag for whether the location is express enabled or not
     * @type {boolean}
     * @memberof LocationResponse
     */
    express?: boolean;
    /**
     * Flag for whether the location is to be included in location exports
     * @type {boolean}
     * @memberof LocationResponse
     */
    includeInLocationExport?: boolean;
    /**
     * Flag for whether the location is to be included in aggregate exports
     * @type {boolean}
     * @memberof LocationResponse
     */
    includeInAggregate?: boolean;
    /**
     * Flag for whether the location is active
     * @type {boolean}
     * @memberof LocationResponse
     */
    active?: boolean;
    /**
     * Flag for whether the location allows Direct Ship (STH) orders
     * @type {boolean}
     * @memberof LocationResponse
     */
    directShip?: boolean;
    /**
     * Flag for whether the location allows Pickup (BOPIS) orders
     * @type {boolean}
     * @memberof LocationResponse
     */
    pickup?: boolean;
    /**
     * Flag for whether the location allows Transfer orders
     * @type {boolean}
     * @memberof LocationResponse
     */
    transferEnabled?: boolean;
    /**
     * Postal Code
     * @type {string}
     * @memberof LocationResponse
     */
    postalCode?: string;
    /**
     * Country Code
     * @type {string}
     * @memberof LocationResponse
     */
    countryCode?: string;
    /**
     * Latitude
     * @type {number}
     * @memberof LocationResponse
     */
    latitude?: number;
    /**
     * Longitude
     * @type {number}
     * @memberof LocationResponse
     */
    longitude?: number;
    /**
     * Location Name
     * @type {string}
     * @memberof LocationResponse
     */
    locationName?: string;
    /**
     * Flag for whether the location is WMS Enabled
     * @type {boolean}
     * @memberof LocationResponse
     */
    wmsEnabled?: boolean;
}

/**
 * Check if a given object implements the LocationResponse interface.
 */
export function instanceOfLocationResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LocationResponseFromJSON(json: any): LocationResponse {
    return LocationResponseFromJSONTyped(json, false);
}

export function LocationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': !exists(json, 'success') ? undefined : json['success'],
        'messages': !exists(json, 'messages') ? undefined : json['messages'],
        'numResults': !exists(json, 'numResults') ? undefined : json['numResults'],
        'locationID': !exists(json, 'locationID') ? undefined : json['locationID'],
        'tenantID': !exists(json, 'tenantID') ? undefined : json['tenantID'],
        'locationCode': !exists(json, 'locationCode') ? undefined : json['locationCode'],
        'express': !exists(json, 'express') ? undefined : json['express'],
        'includeInLocationExport': !exists(json, 'includeInLocationExport') ? undefined : json['includeInLocationExport'],
        'includeInAggregate': !exists(json, 'includeInAggregate') ? undefined : json['includeInAggregate'],
        'active': !exists(json, 'active') ? undefined : json['active'],
        'directShip': !exists(json, 'directShip') ? undefined : json['directShip'],
        'pickup': !exists(json, 'pickup') ? undefined : json['pickup'],
        'transferEnabled': !exists(json, 'transferEnabled') ? undefined : json['transferEnabled'],
        'postalCode': !exists(json, 'postalCode') ? undefined : json['postalCode'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'locationName': !exists(json, 'locationName') ? undefined : json['locationName'],
        'wmsEnabled': !exists(json, 'wmsEnabled') ? undefined : json['wmsEnabled'],
    };
}

export function LocationResponseToJSON(value?: LocationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'messages': value.messages,
        'numResults': value.numResults,
        'locationID': value.locationID,
        'tenantID': value.tenantID,
        'locationCode': value.locationCode,
        'express': value.express,
        'includeInLocationExport': value.includeInLocationExport,
        'includeInAggregate': value.includeInAggregate,
        'active': value.active,
        'directShip': value.directShip,
        'pickup': value.pickup,
        'transferEnabled': value.transferEnabled,
        'postalCode': value.postalCode,
        'countryCode': value.countryCode,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'locationName': value.locationName,
        'wmsEnabled': value.wmsEnabled,
    };
}

