/* tslint:disable */
/* eslint-disable */
/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AllocateItem } from './AllocateItem';
import {
    AllocateItemFromJSON,
    AllocateItemFromJSONTyped,
    AllocateItemToJSON,
} from './AllocateItem';

/**
 * Request needed for allocating inventory
 * @export
 * @interface AllocateInventoryRequest
 */
export interface AllocateInventoryRequest {
    /**
     * list of AllocateItems
     * @type {Array<AllocateItem>}
     * @memberof AllocateInventoryRequest
     */
    items: Array<AllocateItem>;
    /**
     * order date
     * @type {string}
     * @memberof AllocateInventoryRequest
     */
    orderDate?: string;
    /**
     * order weight
     * @type {number}
     * @memberof AllocateInventoryRequest
     */
    orderWeight?: number;
    /**
     * flag to determine deallocation on decrements
     * @type {boolean}
     * @memberof AllocateInventoryRequest
     */
    decrementOnHandOnDeallocate?: boolean;
    /**
     * flag to determine whether the allocation was due to auto assignment
     * @type {boolean}
     * @memberof AllocateInventoryRequest
     */
    autoAssign?: boolean;
}

/**
 * Check if a given object implements the AllocateInventoryRequest interface.
 */
export function instanceOfAllocateInventoryRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function AllocateInventoryRequestFromJSON(json: any): AllocateInventoryRequest {
    return AllocateInventoryRequestFromJSONTyped(json, false);
}

export function AllocateInventoryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllocateInventoryRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(AllocateItemFromJSON)),
        'orderDate': !exists(json, 'orderDate') ? undefined : json['orderDate'],
        'orderWeight': !exists(json, 'orderWeight') ? undefined : json['orderWeight'],
        'decrementOnHandOnDeallocate': !exists(json, 'decrementOnHandOnDeallocate') ? undefined : json['decrementOnHandOnDeallocate'],
        'autoAssign': !exists(json, 'autoAssign') ? undefined : json['autoAssign'],
    };
}

export function AllocateInventoryRequestToJSON(value?: AllocateInventoryRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(AllocateItemToJSON)),
        'orderDate': value.orderDate,
        'orderWeight': value.orderWeight,
        'decrementOnHandOnDeallocate': value.decrementOnHandOnDeallocate,
        'autoAssign': value.autoAssign,
    };
}

