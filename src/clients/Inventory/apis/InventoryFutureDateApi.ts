/* tslint:disable */
/* eslint-disable */
/**
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  AdjustFutureDate404Response,
  AdjustFutureDateRequest,
  JobQueueResponse,
} from '../models';

export interface InventoryFutureDateApiAdjustFutureDateOperationRequest {
    xVolTenant: number;
    futureInventoryID: number;
    adjustFutureDateRequest: AdjustFutureDateRequest;
    responseFields?: string;
}

/**
 * InventoryFutureDateApi - interface
 * 
 * @export
 * @interface InventoryFutureDateApiInterface
 */
export interface InventoryFutureDateApiInterface {
    /**
     * Adjust future_date of future inventory
     * @summary Adjust Future Date
     * @param {number} xVolTenant Tenant ID
     * @param {number} futureInventoryID id of the future_inventory row in db
     * @param {AdjustFutureDateRequest} adjustFutureDateRequest Request for adjusting the future date
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InventoryFutureDateApiInterface
     */
    adjustFutureDateRaw(requestParameters: InventoryFutureDateApiAdjustFutureDateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobQueueResponse>>;

    /**
     * Adjust future_date of future inventory
     * Adjust Future Date
     */
    adjustFutureDate(requestParameters: InventoryFutureDateApiAdjustFutureDateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobQueueResponse>;

}

/**
 * 
 */
export class InventoryFutureDateApi extends runtime.BaseAPI implements InventoryFutureDateApiInterface {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Adjust future_date of future inventory
     * Adjust Future Date
     */


    async adjustFutureDateRaw(requestParameters: InventoryFutureDateApiAdjustFutureDateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobQueueResponse>> {
        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling adjustFutureDate.');
        }

        if (requestParameters.futureInventoryID === null || requestParameters.futureInventoryID === undefined) {
            throw new runtime.RequiredError('futureInventoryID','Required parameter requestParameters.futureInventoryID was null or undefined when calling adjustFutureDate.');
        }

        if (requestParameters.adjustFutureDateRequest === null || requestParameters.adjustFutureDateRequest === undefined) {
            throw new runtime.RequiredError('adjustFutureDateRequest','Required parameter requestParameters.adjustFutureDateRequest was null or undefined when calling adjustFutureDate.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/adjustFutureDate/{futureInventoryID}`.replace(`{${"futureInventoryID"}}`, encodeURIComponent(String(requestParameters.futureInventoryID))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.adjustFutureDateRequest,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Adjust future_date of future inventory
     * Adjust Future Date
     */
    async adjustFutureDate(requestParameters: InventoryFutureDateApiAdjustFutureDateOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobQueueResponse> {
        const response = await this.adjustFutureDateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
