/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Admin User Service
 * OpenAPI Spec for Kibo Admin User Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Catalog } from './Catalog';
import {
    CatalogFromJSON,
    CatalogFromJSONTyped,
    CatalogToJSON,
} from './Catalog';

/**
 * 
 * @export
 * @interface MasterCatalog
 */
export interface MasterCatalog {
    /**
     * 
     * @type {number}
     * @memberof MasterCatalog
     */
    tenantId?: number;
    /**
     * 
     * @type {string}
     * @memberof MasterCatalog
     */
    defaultLocaleCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MasterCatalog
     */
    defaultCurrencyCode?: string | null;
    /**
     * 
     * @type {Array<Catalog>}
     * @memberof MasterCatalog
     */
    catalogs?: Array<Catalog> | null;
    /**
     * 
     * @type {number}
     * @memberof MasterCatalog
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof MasterCatalog
     */
    name?: string | null;
}

/**
 * Check if a given object implements the MasterCatalog interface.
 */
export function instanceOfMasterCatalog(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MasterCatalogFromJSON(json: any): MasterCatalog {
    return MasterCatalogFromJSONTyped(json, false);
}

export function MasterCatalogFromJSONTyped(json: any, ignoreDiscriminator: boolean): MasterCatalog {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'defaultLocaleCode': !exists(json, 'defaultLocaleCode') ? undefined : json['defaultLocaleCode'],
        'defaultCurrencyCode': !exists(json, 'defaultCurrencyCode') ? undefined : json['defaultCurrencyCode'],
        'catalogs': !exists(json, 'catalogs') ? undefined : (json['catalogs'] === null ? null : (json['catalogs'] as Array<any>).map(CatalogFromJSON)),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function MasterCatalogToJSON(value?: MasterCatalog | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tenantId': value.tenantId,
        'defaultLocaleCode': value.defaultLocaleCode,
        'defaultCurrencyCode': value.defaultCurrencyCode,
        'catalogs': value.catalogs === undefined ? undefined : (value.catalogs === null ? null : (value.catalogs as Array<any>).map(CatalogToJSON)),
        'id': value.id,
        'name': value.name,
    };
}

