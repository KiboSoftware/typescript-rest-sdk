/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Content Service
 * OpenAPI Spec for Kibo Content Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentCopyRequest
 */
export interface DocumentCopyRequest {
    /**
     * Document Id's to copy
     * @type {Array<string>}
     * @memberof DocumentCopyRequest
     */
    documentIds?: Array<string> | null;
    /**
     * The destination path to copy documents to
     * @type {string}
     * @memberof DocumentCopyRequest
     */
    destinationPath?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DocumentCopyRequest
     */
    updatedBy?: string | null;
}

/**
 * Check if a given object implements the DocumentCopyRequest interface.
 */
export function instanceOfDocumentCopyRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DocumentCopyRequestFromJSON(json: any): DocumentCopyRequest {
    return DocumentCopyRequestFromJSONTyped(json, false);
}

export function DocumentCopyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentCopyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'documentIds': !exists(json, 'documentIds') ? undefined : json['documentIds'],
        'destinationPath': !exists(json, 'destinationPath') ? undefined : json['destinationPath'],
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
    };
}

export function DocumentCopyRequestToJSON(value?: DocumentCopyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'documentIds': value.documentIds,
        'destinationPath': value.destinationPath,
        'updatedBy': value.updatedBy,
    };
}

