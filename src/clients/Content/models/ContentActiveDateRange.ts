/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Content Service
 * OpenAPI Spec for Kibo Content Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContentActiveDateRange
 */
export interface ContentActiveDateRange {
    /**
     * The beginning of the active date range of this document
     * @type {Date}
     * @memberof ContentActiveDateRange
     */
    startDate?: Date | null;
    /**
     * The end of the active date range for this document
     * @type {Date}
     * @memberof ContentActiveDateRange
     */
    endDate?: Date | null;
}

/**
 * Check if a given object implements the ContentActiveDateRange interface.
 */
export function instanceOfContentActiveDateRange(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ContentActiveDateRangeFromJSON(json: any): ContentActiveDateRange {
    return ContentActiveDateRangeFromJSONTyped(json, false);
}

export function ContentActiveDateRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentActiveDateRange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startDate': !exists(json, 'startDate') ? undefined : (json['startDate'] === null ? null : new Date(json['startDate'])),
        'endDate': !exists(json, 'endDate') ? undefined : (json['endDate'] === null ? null : new Date(json['endDate'])),
    };
}

export function ContentActiveDateRangeToJSON(value?: ContentActiveDateRange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startDate': value.startDate === undefined ? undefined : (value.startDate === null ? null : value.startDate.toISOString()),
        'endDate': value.endDate === undefined ? undefined : (value.endDate === null ? null : value.endDate.toISOString()),
    };
}

