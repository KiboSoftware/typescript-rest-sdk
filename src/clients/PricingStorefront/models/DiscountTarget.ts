/* tslint:disable */
/* eslint-disable */
/**
 * Kibo PricingRuntime Service
 * OpenAPI Spec for Kibo PricingRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DiscountTarget
 */
export interface DiscountTarget {
    /**
     * 
     * @type {string}
     * @memberof DiscountTarget
     */
    type?: string | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof DiscountTarget
     */
    includedCategoryIds?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof DiscountTarget
     */
    excludedCategoryIds?: Array<number> | null;
    /**
     * 
     * @type {string}
     * @memberof DiscountTarget
     */
    includedCategoriesOperator?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DiscountTarget
     */
    excludedCategoriesOperator?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof DiscountTarget
     */
    includedProductCodes?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof DiscountTarget
     */
    excludedProductCodes?: Array<string> | null;
    /**
     * When IncludeAllProducts is true then IncludedCategories and IncludedProducts are not evaluated and should be 
     * empty.  Only exclusions apply.
     * @type {boolean}
     * @memberof DiscountTarget
     */
    includeAllProducts?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof DiscountTarget
     */
    shippingMethods?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof DiscountTarget
     */
    shippingZones?: Array<string> | null;
}

/**
 * Check if a given object implements the DiscountTarget interface.
 */
export function instanceOfDiscountTarget(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DiscountTargetFromJSON(json: any): DiscountTarget {
    return DiscountTargetFromJSONTyped(json, false);
}

export function DiscountTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscountTarget {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'includedCategoryIds': !exists(json, 'includedCategoryIds') ? undefined : json['includedCategoryIds'],
        'excludedCategoryIds': !exists(json, 'excludedCategoryIds') ? undefined : json['excludedCategoryIds'],
        'includedCategoriesOperator': !exists(json, 'includedCategoriesOperator') ? undefined : json['includedCategoriesOperator'],
        'excludedCategoriesOperator': !exists(json, 'excludedCategoriesOperator') ? undefined : json['excludedCategoriesOperator'],
        'includedProductCodes': !exists(json, 'includedProductCodes') ? undefined : json['includedProductCodes'],
        'excludedProductCodes': !exists(json, 'excludedProductCodes') ? undefined : json['excludedProductCodes'],
        'includeAllProducts': !exists(json, 'includeAllProducts') ? undefined : json['includeAllProducts'],
        'shippingMethods': !exists(json, 'shippingMethods') ? undefined : json['shippingMethods'],
        'shippingZones': !exists(json, 'shippingZones') ? undefined : json['shippingZones'],
    };
}

export function DiscountTargetToJSON(value?: DiscountTarget | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'includedCategoryIds': value.includedCategoryIds,
        'excludedCategoryIds': value.excludedCategoryIds,
        'includedCategoriesOperator': value.includedCategoriesOperator,
        'excludedCategoriesOperator': value.excludedCategoriesOperator,
        'includedProductCodes': value.includedProductCodes,
        'excludedProductCodes': value.excludedProductCodes,
        'includeAllProducts': value.includeAllProducts,
        'shippingMethods': value.shippingMethods,
        'shippingZones': value.shippingZones,
    };
}

