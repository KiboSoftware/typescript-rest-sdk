/* tslint:disable */
/* eslint-disable */
/**
 * Kibo PricingRuntime Service
 * OpenAPI Spec for Kibo PricingRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
} from './Address';

/**
 * The context for the tax calculation.
 * @export
 * @interface ThrirdPartyTaxContext
 */
export interface ThrirdPartyTaxContext {
    /**
     * The unique id of this context. Will typically be the OrderId or CartId, depending when the tax is being calculated.
     * @type {string}
     * @memberof ThrirdPartyTaxContext
     */
    taxContextId?: string | null;
    /**
     * A unique id for a customer.  This may be the userid, checking with Avalara to determine the meaning of this
     * @type {string}
     * @memberof ThrirdPartyTaxContext
     */
    customerId?: string | null;
    /**
     * Tax exemption id.  Indicates that this customer or user is tax exempt
     * @type {string}
     * @memberof ThrirdPartyTaxContext
     */
    taxExemptId?: string | null;
    /**
     * Indicates whether shipping amounts should be taxed
     * @type {boolean}
     * @memberof ThrirdPartyTaxContext
     */
    taxShipping?: boolean | null;
    /**
     * 
     * @type {Address}
     * @memberof ThrirdPartyTaxContext
     */
    originAddress?: Address;
    /**
     * 
     * @type {Address}
     * @memberof ThrirdPartyTaxContext
     */
    destinationAddress?: Address;
}

/**
 * Check if a given object implements the ThrirdPartyTaxContext interface.
 */
export function instanceOfThrirdPartyTaxContext(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ThrirdPartyTaxContextFromJSON(json: any): ThrirdPartyTaxContext {
    return ThrirdPartyTaxContextFromJSONTyped(json, false);
}

export function ThrirdPartyTaxContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThrirdPartyTaxContext {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'taxContextId': !exists(json, 'taxContextId') ? undefined : json['taxContextId'],
        'customerId': !exists(json, 'customerId') ? undefined : json['customerId'],
        'taxExemptId': !exists(json, 'taxExemptId') ? undefined : json['taxExemptId'],
        'taxShipping': !exists(json, 'taxShipping') ? undefined : json['taxShipping'],
        'originAddress': !exists(json, 'originAddress') ? undefined : AddressFromJSON(json['originAddress']),
        'destinationAddress': !exists(json, 'destinationAddress') ? undefined : AddressFromJSON(json['destinationAddress']),
    };
}

export function ThrirdPartyTaxContextToJSON(value?: ThrirdPartyTaxContext | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'taxContextId': value.taxContextId,
        'customerId': value.customerId,
        'taxExemptId': value.taxExemptId,
        'taxShipping': value.taxShipping,
        'originAddress': AddressToJSON(value.originAddress),
        'destinationAddress': AddressToJSON(value.destinationAddress),
    };
}

