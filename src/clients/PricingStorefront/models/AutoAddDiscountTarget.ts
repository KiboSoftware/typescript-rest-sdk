/* tslint:disable */
/* eslint-disable */
/**
 * Kibo PricingRuntime Service
 * OpenAPI Spec for Kibo PricingRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AutoAddDiscountTarget
 */
export interface AutoAddDiscountTarget {
    /**
     * Unique identifier of the discount. System-supplied and read-only.
     * @type {number}
     * @memberof AutoAddDiscountTarget
     */
    discountId?: number;
    /**
     * Friendly description of the discount.
     * @type {string}
     * @memberof AutoAddDiscountTarget
     */
    friendlyDescription?: string | null;
    /**
     * Included product codes
     * @type {Array<string>}
     * @memberof AutoAddDiscountTarget
     */
    includedProductCodes?: Array<string> | null;
}

/**
 * Check if a given object implements the AutoAddDiscountTarget interface.
 */
export function instanceOfAutoAddDiscountTarget(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AutoAddDiscountTargetFromJSON(json: any): AutoAddDiscountTarget {
    return AutoAddDiscountTargetFromJSONTyped(json, false);
}

export function AutoAddDiscountTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): AutoAddDiscountTarget {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'discountId': !exists(json, 'discountId') ? undefined : json['discountId'],
        'friendlyDescription': !exists(json, 'friendlyDescription') ? undefined : json['friendlyDescription'],
        'includedProductCodes': !exists(json, 'includedProductCodes') ? undefined : json['includedProductCodes'],
    };
}

export function AutoAddDiscountTargetToJSON(value?: AutoAddDiscountTarget | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'discountId': value.discountId,
        'friendlyDescription': value.friendlyDescription,
        'includedProductCodes': value.includedProductCodes,
    };
}

