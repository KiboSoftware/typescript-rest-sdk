/* tslint:disable */
/* eslint-disable */
/**
 * Kibo PricingRuntime Service
 * OpenAPI Spec for Kibo PricingRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PricingRuntimeDiscountCondition } from './PricingRuntimeDiscountCondition';
import {
    PricingRuntimeDiscountConditionFromJSON,
    PricingRuntimeDiscountConditionFromJSONTyped,
    PricingRuntimeDiscountConditionToJSON,
} from './PricingRuntimeDiscountCondition';
import type { PricingRuntimeDiscountTarget } from './PricingRuntimeDiscountTarget';
import {
    PricingRuntimeDiscountTargetFromJSON,
    PricingRuntimeDiscountTargetFromJSONTyped,
    PricingRuntimeDiscountTargetToJSON,
} from './PricingRuntimeDiscountTarget';

/**
 * Name of the discount that can be applied and its expiration date. The discount can be on a single product or the
 * entire order.
 * @export
 * @interface PricingRuntimeDiscount
 */
export interface PricingRuntimeDiscount {
    /**
     * Unique identifier of the discount. System-supplied and read-only.
     * @type {number}
     * @memberof PricingRuntimeDiscount
     */
    discountId?: number;
    /**
     * Name of the discount.
     * @type {string}
     * @memberof PricingRuntimeDiscount
     */
    name?: string | null;
    /**
     * Friendly description of the discount.
     * @type {string}
     * @memberof PricingRuntimeDiscount
     */
    friendlyDescription?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PricingRuntimeDiscount
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof PricingRuntimeDiscount
     */
    scope?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PricingRuntimeDiscount
     */
    maxRedemptions?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PricingRuntimeDiscount
     */
    maximumUsesPerUser?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof PricingRuntimeDiscount
     */
    requiresAuthenticatedUser?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PricingRuntimeDiscount
     */
    doesNotApplyToProductsWithSalePrice?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PricingRuntimeDiscount
     */
    maximumRedemptionsPerOrder?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PricingRuntimeDiscount
     */
    maximumDiscountValuePerOrder?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PricingRuntimeDiscount
     */
    maxDiscountValuePerRedemption?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof PricingRuntimeDiscount
     */
    doesNotApplyToMultiShipToOrders?: boolean | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PricingRuntimeDiscount
     */
    includedPriceLists?: Array<string> | null;
    /**
     * 
     * @type {number}
     * @memberof PricingRuntimeDiscount
     */
    redemptions?: number;
    /**
     * 
     * @type {string}
     * @memberof PricingRuntimeDiscount
     */
    type?: string | null;
    /**
     * Type of discount, which can be either a percentage off the price, a specific monetary amount, or free. Possible values: "Percentage," "Amount," and "Free".
     * @type {string}
     * @memberof PricingRuntimeDiscount
     */
    amountType?: string | null;
    /**
     * 
     * @type {PricingRuntimeDiscountTarget}
     * @memberof PricingRuntimeDiscount
     */
    target?: PricingRuntimeDiscountTarget;
    /**
     * 
     * @type {PricingRuntimeDiscountCondition}
     * @memberof PricingRuntimeDiscount
     */
    condition?: PricingRuntimeDiscountCondition;
    /**
     * When the discount expires. If null, there's no expiration date.
     * @type {Date}
     * @memberof PricingRuntimeDiscount
     * @deprecated
     */
    expirationDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof PricingRuntimeDiscount
     */
    stackingLayer?: number;
}

/**
 * Check if a given object implements the PricingRuntimeDiscount interface.
 */
export function instanceOfPricingRuntimeDiscount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PricingRuntimeDiscountFromJSON(json: any): PricingRuntimeDiscount {
    return PricingRuntimeDiscountFromJSONTyped(json, false);
}

export function PricingRuntimeDiscountFromJSONTyped(json: any, ignoreDiscriminator: boolean): PricingRuntimeDiscount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'discountId': !exists(json, 'discountId') ? undefined : json['discountId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'friendlyDescription': !exists(json, 'friendlyDescription') ? undefined : json['friendlyDescription'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'maxRedemptions': !exists(json, 'maxRedemptions') ? undefined : json['maxRedemptions'],
        'maximumUsesPerUser': !exists(json, 'maximumUsesPerUser') ? undefined : json['maximumUsesPerUser'],
        'requiresAuthenticatedUser': !exists(json, 'requiresAuthenticatedUser') ? undefined : json['requiresAuthenticatedUser'],
        'doesNotApplyToProductsWithSalePrice': !exists(json, 'doesNotApplyToProductsWithSalePrice') ? undefined : json['doesNotApplyToProductsWithSalePrice'],
        'maximumRedemptionsPerOrder': !exists(json, 'maximumRedemptionsPerOrder') ? undefined : json['maximumRedemptionsPerOrder'],
        'maximumDiscountValuePerOrder': !exists(json, 'maximumDiscountValuePerOrder') ? undefined : json['maximumDiscountValuePerOrder'],
        'maxDiscountValuePerRedemption': !exists(json, 'maxDiscountValuePerRedemption') ? undefined : json['maxDiscountValuePerRedemption'],
        'doesNotApplyToMultiShipToOrders': !exists(json, 'doesNotApplyToMultiShipToOrders') ? undefined : json['doesNotApplyToMultiShipToOrders'],
        'includedPriceLists': !exists(json, 'includedPriceLists') ? undefined : json['includedPriceLists'],
        'redemptions': !exists(json, 'redemptions') ? undefined : json['redemptions'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'amountType': !exists(json, 'amountType') ? undefined : json['amountType'],
        'target': !exists(json, 'target') ? undefined : PricingRuntimeDiscountTargetFromJSON(json['target']),
        'condition': !exists(json, 'condition') ? undefined : PricingRuntimeDiscountConditionFromJSON(json['condition']),
        'expirationDate': !exists(json, 'expirationDate') ? undefined : (json['expirationDate'] === null ? null : new Date(json['expirationDate'])),
        'stackingLayer': !exists(json, 'stackingLayer') ? undefined : json['stackingLayer'],
    };
}

export function PricingRuntimeDiscountToJSON(value?: PricingRuntimeDiscount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'discountId': value.discountId,
        'name': value.name,
        'friendlyDescription': value.friendlyDescription,
        'amount': value.amount,
        'scope': value.scope,
        'maxRedemptions': value.maxRedemptions,
        'maximumUsesPerUser': value.maximumUsesPerUser,
        'requiresAuthenticatedUser': value.requiresAuthenticatedUser,
        'doesNotApplyToProductsWithSalePrice': value.doesNotApplyToProductsWithSalePrice,
        'maximumRedemptionsPerOrder': value.maximumRedemptionsPerOrder,
        'maximumDiscountValuePerOrder': value.maximumDiscountValuePerOrder,
        'maxDiscountValuePerRedemption': value.maxDiscountValuePerRedemption,
        'doesNotApplyToMultiShipToOrders': value.doesNotApplyToMultiShipToOrders,
        'includedPriceLists': value.includedPriceLists,
        'redemptions': value.redemptions,
        'type': value.type,
        'amountType': value.amountType,
        'target': PricingRuntimeDiscountTargetToJSON(value.target),
        'condition': PricingRuntimeDiscountConditionToJSON(value.condition),
        'expirationDate': value.expirationDate === undefined ? undefined : (value.expirationDate === null ? null : value.expirationDate.toISOString()),
        'stackingLayer': value.stackingLayer,
    };
}

