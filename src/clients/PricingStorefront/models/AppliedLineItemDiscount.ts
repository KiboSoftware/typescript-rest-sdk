/* tslint:disable */
/* eslint-disable */
/**
 * Kibo PricingRuntime Service
 * OpenAPI Spec for Kibo PricingRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Discount } from './Discount';
import {
    DiscountFromJSON,
    DiscountFromJSONTyped,
    DiscountToJSON,
} from './Discount';

/**
 * Details of the discount applied to a product.
 * @export
 * @interface AppliedLineItemDiscount
 */
export interface AppliedLineItemDiscount {
    /**
     * Quantity of items from the line item that the discount applies to.
     * @type {number}
     * @memberof AppliedLineItemDiscount
     */
    quantity?: number;
    /**
     * Discount impact per unit for the quantity applied.
     * This value is not rounded.
     * ImpactPerUnit * Quantity = Impact @ Quantity
     * @type {number}
     * @memberof AppliedLineItemDiscount
     */
    impactPerUnit?: number;
    /**
     * Signifies that the discount is forced and not applied via best match.
     * @type {boolean}
     * @memberof AppliedLineItemDiscount
     */
    isForced?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AppliedLineItemDiscount
     */
    normalizedImpact?: number;
    /**
     * Value of the discount, that is how much the shopper saves if discount is applied.
     * @type {number}
     * @memberof AppliedLineItemDiscount
     */
    impact?: number;
    /**
     * 
     * @type {Discount}
     * @memberof AppliedLineItemDiscount
     */
    discount?: Discount;
    /**
     * Code of the coupon associated with the discount (if a coupon code is required in order to receive the discount).
     * @type {string}
     * @memberof AppliedLineItemDiscount
     */
    couponCode?: string | null;
    /**
     * Contains coupon set id if there is one
     * @type {number}
     * @memberof AppliedLineItemDiscount
     */
    couponSetId?: number | null;
}

/**
 * Check if a given object implements the AppliedLineItemDiscount interface.
 */
export function instanceOfAppliedLineItemDiscount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AppliedLineItemDiscountFromJSON(json: any): AppliedLineItemDiscount {
    return AppliedLineItemDiscountFromJSONTyped(json, false);
}

export function AppliedLineItemDiscountFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppliedLineItemDiscount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'impactPerUnit': !exists(json, 'impactPerUnit') ? undefined : json['impactPerUnit'],
        'isForced': !exists(json, 'isForced') ? undefined : json['isForced'],
        'normalizedImpact': !exists(json, 'normalizedImpact') ? undefined : json['normalizedImpact'],
        'impact': !exists(json, 'impact') ? undefined : json['impact'],
        'discount': !exists(json, 'discount') ? undefined : DiscountFromJSON(json['discount']),
        'couponCode': !exists(json, 'couponCode') ? undefined : json['couponCode'],
        'couponSetId': !exists(json, 'couponSetId') ? undefined : json['couponSetId'],
    };
}

export function AppliedLineItemDiscountToJSON(value?: AppliedLineItemDiscount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'quantity': value.quantity,
        'impactPerUnit': value.impactPerUnit,
        'isForced': value.isForced,
        'normalizedImpact': value.normalizedImpact,
        'impact': value.impact,
        'discount': DiscountToJSON(value.discount),
        'couponCode': value.couponCode,
        'couponSetId': value.couponSetId,
    };
}

