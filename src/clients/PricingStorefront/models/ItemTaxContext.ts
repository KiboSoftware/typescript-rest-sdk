/* tslint:disable */
/* eslint-disable */
/**
 * Kibo PricingRuntime Service
 * OpenAPI Spec for Kibo PricingRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The tax applied to an individual order item.
 * @export
 * @interface ItemTaxContext
 */
export interface ItemTaxContext {
    /**
     * Unique identifier of the line item.
     * @type {string}
     * @memberof ItemTaxContext
     */
    id?: string | null;
    /**
     * Merchant-created code that uniquely identifies the product.
     * @type {string}
     * @memberof ItemTaxContext
     */
    productCode?: string | null;
    /**
     * The number of products in this lineitem
     * @type {number}
     * @memberof ItemTaxContext
     */
    quantity?: number;
    /**
     * Line item tax amount not including shipping
     * @type {number}
     * @memberof ItemTaxContext
     */
    tax?: number;
    /**
     * The shipping tax amount for this line item
     * @type {number}
     * @memberof ItemTaxContext
     */
    shippingTax?: number;
    /**
     * Storage for any additional/custom tax data.
     * @type {any}
     * @memberof ItemTaxContext
     */
    taxData?: any | null;
}

/**
 * Check if a given object implements the ItemTaxContext interface.
 */
export function instanceOfItemTaxContext(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemTaxContextFromJSON(json: any): ItemTaxContext {
    return ItemTaxContextFromJSONTyped(json, false);
}

export function ItemTaxContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemTaxContext {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'tax': !exists(json, 'tax') ? undefined : json['tax'],
        'shippingTax': !exists(json, 'shippingTax') ? undefined : json['shippingTax'],
        'taxData': !exists(json, 'taxData') ? undefined : json['taxData'],
    };
}

export function ItemTaxContextToJSON(value?: ItemTaxContext | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'productCode': value.productCode,
        'quantity': value.quantity,
        'tax': value.tax,
        'shippingTax': value.shippingTax,
        'taxData': value.taxData,
    };
}

