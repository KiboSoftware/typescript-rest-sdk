/* tslint:disable */
/* eslint-disable */
/**
 * Kibo PricingRuntime Service
 * OpenAPI Spec for Kibo PricingRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  AutoAddDiscountTarget,
  FindDiscountsResponse,
  FindItemDiscountsRequest,
  FindOrderDiscountsRequest,
  PricingRuntimeDiscount,
  PricingRuntimeDiscountCollection,
} from '../models';


export namespace discountsApiParams { 
    export interface StorefrontFindItemDiscountsRequest {
        responseFields?: string;
        findItemDiscountsRequest?: FindItemDiscountsRequest;
    }
    export interface StorefrontFindOrderDiscountsRequest {
        responseFields?: string;
        findOrderDiscountsRequest?: FindOrderDiscountsRequest;
    }
    export interface StorefrontGetAutoAddTargetRequest {
        discountId: number;
        responseFields?: string;
    }
    export interface StorefrontGetDiscountByCouponCodeRequest {
        couponCode: string;
        responseFields?: string;
    }
    export interface StorefrontGetDiscountByIdRequest {
        id: number;
        responseFields?: string;
    }
    export interface StorefrontGetDiscountByLabelRequest {
        label: string;
        responseFields?: string;
    }
    export interface StorefrontGetDiscountByLabel0Request {
        label: string;
        responseFields?: string;
    }
    export interface StorefrontGetItemDiscountsRequest {
        productCode: string;
        responseFields?: string;
    }
    export interface StorefrontGetPublicDiscountByCodeRequest {
        code: string;
        responseFields?: string;
    }
    export interface StorefrontSecureGetDiscountByCodeRequest {
        code: string;
        responseFields?: string;
    }
    export interface StorefrontSecureGetDiscountByCouponCodeRequest {
        couponCode: string;
        responseFields?: string;
    }
    export interface StorefrontSecureGetDiscountByIdRequest {
        id: number;
        responseFields?: string;
    }
}
/**
* DiscountsApiService - interface
* 
* @export
* @interface DiscountsApi
*/
export interface DiscountsApiService {
    /**
    * Retrieves a list of discounts that appear on the storefront according to specified filter criteria.
    * @summary Get a list of item level discounts for the supplied products
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {FindItemDiscountsRequest} [findItemDiscountsRequest] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontFindItemDiscountsRaw(requestParameters: discountsApiParams.StorefrontFindItemDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FindDiscountsResponse>>;

    /**
    * Retrieves a list of discounts that appear on the storefront according to specified filter criteria.
    * Get a list of item level discounts for the supplied products
    */
    storefrontFindItemDiscounts(requestParameters: discountsApiParams.StorefrontFindItemDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FindDiscountsResponse>;

    /**
    * Retrieves a list of order level discounts that appear on the storefront according to specified filter criteria.
    * @summary Get a list of order level discounts
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {FindOrderDiscountsRequest} [findOrderDiscountsRequest] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontFindOrderDiscountsRaw(requestParameters: discountsApiParams.StorefrontFindOrderDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FindDiscountsResponse>>>;

    /**
    * Retrieves a list of order level discounts that appear on the storefront according to specified filter criteria.
    * Get a list of order level discounts
    */
    storefrontFindOrderDiscounts(requestParameters: discountsApiParams.StorefrontFindOrderDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FindDiscountsResponse>>;

    /**
    * Retrieves the auto add target for the specified discountId
    * @summary Get the auto add target for the supplied discountId
    * @param {number} discountId 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontGetAutoAddTargetRaw(requestParameters: discountsApiParams.StorefrontGetAutoAddTargetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AutoAddDiscountTarget>>;

    /**
    * Retrieves the auto add target for the specified discountId
    * Get the auto add target for the supplied discountId
    */
    storefrontGetAutoAddTarget(requestParameters: discountsApiParams.StorefrontGetAutoAddTargetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AutoAddDiscountTarget>;

    /**
    * Retrieves a discount by coupon code
    * @summary Get a discount for the supplied coupon code
    * @param {string} couponCode 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontGetDiscountByCouponCodeRaw(requestParameters: discountsApiParams.StorefrontGetDiscountByCouponCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>>;

    /**
    * Retrieves a discount by coupon code
    * Get a discount for the supplied coupon code
    */
    storefrontGetDiscountByCouponCode(requestParameters: discountsApiParams.StorefrontGetDiscountByCouponCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount>;

    /**
    * Retrieves a discount by discountId
    * @summary Get a discount for the supplied discountId
    * @param {number} id 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontGetDiscountByIdRaw(requestParameters: discountsApiParams.StorefrontGetDiscountByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>>;

    /**
    * Retrieves a discount by discountId
    * Get a discount for the supplied discountId
    */
    storefrontGetDiscountById(requestParameters: discountsApiParams.StorefrontGetDiscountByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount>;

    /**
    * Retrieves a list of discounts by label
    * @summary Get a list of discounts for the supplied label
    * @param {string} label The label of the discount.
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontGetDiscountByLabelRaw(requestParameters: discountsApiParams.StorefrontGetDiscountByLabelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscountCollection>>;

    /**
    * Retrieves a list of discounts by label
    * Get a list of discounts for the supplied label
    */
    storefrontGetDiscountByLabel(requestParameters: discountsApiParams.StorefrontGetDiscountByLabelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscountCollection>;

    /**
    * Retrieves a discount by label
    * @summary Get a discount for the supplied label
    * @param {string} label The label of the discount.
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontGetDiscountByLabel_1Raw(requestParameters: discountsApiParams.StorefrontGetDiscountByLabel0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscountCollection>>;

    /**
    * Retrieves a discount by label
    * Get a discount for the supplied label
    */
    storefrontGetDiscountByLabel_1(requestParameters: discountsApiParams.StorefrontGetDiscountByLabel0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscountCollection>;

    /**
    * Retrieves a list of discounts that appear on the storefront according to specified filter criteria.
    * @summary Get a list of item level discounts for the supplied products
    * @param {string} productCode 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontGetItemDiscountsRaw(requestParameters: discountsApiParams.StorefrontGetItemDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FindDiscountsResponse>>;

    /**
    * Retrieves a list of discounts that appear on the storefront according to specified filter criteria.
    * Get a list of item level discounts for the supplied products
    */
    storefrontGetItemDiscounts(requestParameters: discountsApiParams.StorefrontGetItemDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FindDiscountsResponse>;

    /**
    * Retrieves a discount by discount code
    * @summary Get a discount for the supplied discount code
    * @param {string} code 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontGetPublicDiscountByCodeRaw(requestParameters: discountsApiParams.StorefrontGetPublicDiscountByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>>;

    /**
    * Retrieves a discount by discount code
    * Get a discount for the supplied discount code
    */
    storefrontGetPublicDiscountByCode(requestParameters: discountsApiParams.StorefrontGetPublicDiscountByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount>;

    /**
    * Retrieves a discount by discount code
    * @summary Get a discount for the supplied discount code
    * @param {string} code The discount code
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontSecureGetDiscountByCodeRaw(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>>;

    /**
    * Retrieves a discount by discount code
    * Get a discount for the supplied discount code
    */
    storefrontSecureGetDiscountByCode(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount>;

    /**
    * Retrieves a discount by coupon code
    * @summary Get a discount for the supplied coupon code
    * @param {string} couponCode The coupon code of the discount
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontSecureGetDiscountByCouponCodeRaw(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByCouponCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>>;

    /**
    * Retrieves a discount by coupon code
    * Get a discount for the supplied coupon code
    */
    storefrontSecureGetDiscountByCouponCode(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByCouponCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount>;

    /**
    * Retrieves a discount by discountId
    * @summary Get a discount for the supplied discountId
    * @param {number} id The ID of the discount
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountsApiInterface
    */
    storefrontSecureGetDiscountByIdRaw(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>>;

    /**
    * Retrieves a discount by discountId
    * Get a discount for the supplied discountId
    */
    storefrontSecureGetDiscountById(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount>;

}


/**
 * 
 */
export class DiscountsApi extends runtime.BaseAPI implements DiscountsApiService {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Retrieves a list of discounts that appear on the storefront according to specified filter criteria.
     * Get a list of item level discounts for the supplied products
     */


    async storefrontFindItemDiscountsRaw(requestParameters: discountsApiParams.StorefrontFindItemDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FindDiscountsResponse>> {
        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/products`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.findItemDiscountsRequest,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a list of discounts that appear on the storefront according to specified filter criteria.
     * Get a list of item level discounts for the supplied products
     */
    async storefrontFindItemDiscounts(requestParameters: discountsApiParams.StorefrontFindItemDiscountsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FindDiscountsResponse> {
        const response = await this.storefrontFindItemDiscountsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a list of order level discounts that appear on the storefront according to specified filter criteria.
     * Get a list of order level discounts
     */


    async storefrontFindOrderDiscountsRaw(requestParameters: discountsApiParams.StorefrontFindOrderDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FindDiscountsResponse>>> {
        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/orders`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.findOrderDiscountsRequest,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a list of order level discounts that appear on the storefront according to specified filter criteria.
     * Get a list of order level discounts
     */
    async storefrontFindOrderDiscounts(requestParameters: discountsApiParams.StorefrontFindOrderDiscountsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FindDiscountsResponse>> {
        const response = await this.storefrontFindOrderDiscountsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves the auto add target for the specified discountId
     * Get the auto add target for the supplied discountId
     */


    async storefrontGetAutoAddTargetRaw(requestParameters: discountsApiParams.StorefrontGetAutoAddTargetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AutoAddDiscountTarget>> {
        if (requestParameters.discountId === null || requestParameters.discountId === undefined) {
            throw new runtime.RequiredError('discountId','Required parameter requestParameters.discountId was null or undefined when calling storefrontGetAutoAddTarget.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/autoaddtarget/{discountId}`.replace(`{${"discountId"}}`, encodeURIComponent(String(requestParameters.discountId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves the auto add target for the specified discountId
     * Get the auto add target for the supplied discountId
     */
    async storefrontGetAutoAddTarget(requestParameters: discountsApiParams.StorefrontGetAutoAddTargetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AutoAddDiscountTarget> {
        const response = await this.storefrontGetAutoAddTargetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a discount by coupon code
     * Get a discount for the supplied coupon code
     */


    async storefrontGetDiscountByCouponCodeRaw(requestParameters: discountsApiParams.StorefrontGetDiscountByCouponCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>> {
        if (requestParameters.couponCode === null || requestParameters.couponCode === undefined) {
            throw new runtime.RequiredError('couponCode','Required parameter requestParameters.couponCode was null or undefined when calling storefrontGetDiscountByCouponCode.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/couponCode/{couponCode}`.replace(`{${"couponCode"}}`, encodeURIComponent(String(requestParameters.couponCode))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a discount by coupon code
     * Get a discount for the supplied coupon code
     */
    async storefrontGetDiscountByCouponCode(requestParameters: discountsApiParams.StorefrontGetDiscountByCouponCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount> {
        const response = await this.storefrontGetDiscountByCouponCodeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a discount by discountId
     * Get a discount for the supplied discountId
     */


    async storefrontGetDiscountByIdRaw(requestParameters: discountsApiParams.StorefrontGetDiscountByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling storefrontGetDiscountById.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/id/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a discount by discountId
     * Get a discount for the supplied discountId
     */
    async storefrontGetDiscountById(requestParameters: discountsApiParams.StorefrontGetDiscountByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount> {
        const response = await this.storefrontGetDiscountByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a list of discounts by label
     * Get a list of discounts for the supplied label
     */


    async storefrontGetDiscountByLabelRaw(requestParameters: discountsApiParams.StorefrontGetDiscountByLabelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscountCollection>> {
        if (requestParameters.label === null || requestParameters.label === undefined) {
            throw new runtime.RequiredError('label','Required parameter requestParameters.label was null or undefined when calling storefrontGetDiscountByLabel.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/label/{label}`.replace(`{${"label"}}`, encodeURIComponent(String(requestParameters.label))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a list of discounts by label
     * Get a list of discounts for the supplied label
     */
    async storefrontGetDiscountByLabel(requestParameters: discountsApiParams.StorefrontGetDiscountByLabelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscountCollection> {
        const response = await this.storefrontGetDiscountByLabelRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a discount by label
     * Get a discount for the supplied label
     */


    async storefrontGetDiscountByLabel_1Raw(requestParameters: discountsApiParams.StorefrontGetDiscountByLabel0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscountCollection>> {
        if (requestParameters.label === null || requestParameters.label === undefined) {
            throw new runtime.RequiredError('label','Required parameter requestParameters.label was null or undefined when calling storefrontGetDiscountByLabel_1.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/secure/label/{label}`.replace(`{${"label"}}`, encodeURIComponent(String(requestParameters.label))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a discount by label
     * Get a discount for the supplied label
     */
    async storefrontGetDiscountByLabel_1(requestParameters: discountsApiParams.StorefrontGetDiscountByLabel0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscountCollection> {
        const response = await this.storefrontGetDiscountByLabel_1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a list of discounts that appear on the storefront according to specified filter criteria.
     * Get a list of item level discounts for the supplied products
     */


    async storefrontGetItemDiscountsRaw(requestParameters: discountsApiParams.StorefrontGetItemDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FindDiscountsResponse>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling storefrontGetItemDiscounts.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/products/{productCode}`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a list of discounts that appear on the storefront according to specified filter criteria.
     * Get a list of item level discounts for the supplied products
     */
    async storefrontGetItemDiscounts(requestParameters: discountsApiParams.StorefrontGetItemDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FindDiscountsResponse> {
        const response = await this.storefrontGetItemDiscountsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a discount by discount code
     * Get a discount for the supplied discount code
     */


    async storefrontGetPublicDiscountByCodeRaw(requestParameters: discountsApiParams.StorefrontGetPublicDiscountByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>> {
        if (requestParameters.code === null || requestParameters.code === undefined) {
            throw new runtime.RequiredError('code','Required parameter requestParameters.code was null or undefined when calling storefrontGetPublicDiscountByCode.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/code/{code}`.replace(`{${"code"}}`, encodeURIComponent(String(requestParameters.code))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a discount by discount code
     * Get a discount for the supplied discount code
     */
    async storefrontGetPublicDiscountByCode(requestParameters: discountsApiParams.StorefrontGetPublicDiscountByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount> {
        const response = await this.storefrontGetPublicDiscountByCodeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a discount by discount code
     * Get a discount for the supplied discount code
     */


    async storefrontSecureGetDiscountByCodeRaw(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>> {
        if (requestParameters.code === null || requestParameters.code === undefined) {
            throw new runtime.RequiredError('code','Required parameter requestParameters.code was null or undefined when calling storefrontSecureGetDiscountByCode.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/secure/code/{code}`.replace(`{${"code"}}`, encodeURIComponent(String(requestParameters.code))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a discount by discount code
     * Get a discount for the supplied discount code
     */
    async storefrontSecureGetDiscountByCode(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount> {
        const response = await this.storefrontSecureGetDiscountByCodeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a discount by coupon code
     * Get a discount for the supplied coupon code
     */


    async storefrontSecureGetDiscountByCouponCodeRaw(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByCouponCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>> {
        if (requestParameters.couponCode === null || requestParameters.couponCode === undefined) {
            throw new runtime.RequiredError('couponCode','Required parameter requestParameters.couponCode was null or undefined when calling storefrontSecureGetDiscountByCouponCode.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/secure/couponCode/{couponCode}`.replace(`{${"couponCode"}}`, encodeURIComponent(String(requestParameters.couponCode))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a discount by coupon code
     * Get a discount for the supplied coupon code
     */
    async storefrontSecureGetDiscountByCouponCode(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByCouponCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount> {
        const response = await this.storefrontSecureGetDiscountByCouponCodeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieves a discount by discountId
     * Get a discount for the supplied discountId
     */


    async storefrontSecureGetDiscountByIdRaw(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PricingRuntimeDiscount>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling storefrontSecureGetDiscountById.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/discounts/secure/id/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a discount by discountId
     * Get a discount for the supplied discountId
     */
    async storefrontSecureGetDiscountById(requestParameters: discountsApiParams.StorefrontSecureGetDiscountByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PricingRuntimeDiscount> {
        const response = await this.storefrontSecureGetDiscountByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
