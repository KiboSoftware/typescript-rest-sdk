/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  CatalogAdminsDiscount,
  ExpressionValidationResult,
} from '../models';


export namespace discountApiParams { 
    export interface ValidateDiscountExpressionRequest {
        responseFields?: string;
        catalogAdminsDiscount?: CatalogAdminsDiscount;
    }
}
/**
* DiscountApiService - interface
* 
* @export
* @interface DiscountApi
*/
export interface DiscountApiService {
    /**
    * 
    * @summary Validates a discount expression
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {CatalogAdminsDiscount} [catalogAdminsDiscount] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof DiscountApiInterface
    */
    validateDiscountExpressionRaw(requestParameters: discountApiParams.ValidateDiscountExpressionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExpressionValidationResult>>;

    /**
    * 
    * Validates a discount expression
    */
    validateDiscountExpression(requestParameters: discountApiParams.ValidateDiscountExpressionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExpressionValidationResult>;

}


/**
 * 
 */
export class DiscountApi extends runtime.BaseAPI implements DiscountApiService {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * 
     * Validates a discount expression
     */


    async validateDiscountExpressionRaw(requestParameters: discountApiParams.ValidateDiscountExpressionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExpressionValidationResult>> {
        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/discounts/expressions/validate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.catalogAdminsDiscount,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * 
     * Validates a discount expression
     */
    async validateDiscountExpression(requestParameters: discountApiParams.ValidateDiscountExpressionRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExpressionValidationResult> {
        const response = await this.validateDiscountExpressionRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
