/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  ProductExtra,
  ProductExtraValueDeltaPrice,
} from '../models';


export namespace productExtrasApiParams { 
    export interface AddExtraRequest {
        productCode: string;
        responseFields?: string;
        productExtra?: ProductExtra;
    }
    export interface AddExtraValueLocalizedDeltaPriceRequest {
        productCode: string;
        attributeFQN: string;
        value: string;
        responseFields?: string;
        productExtraValueDeltaPrice?: ProductExtraValueDeltaPrice;
    }
    export interface DeleteExtraRequest {
        productCode: string;
        attributeFQN: string;
    }
    export interface DeleteExtraValueLocalizedDeltaPriceRequest {
        productCode: string;
        attributeFQN: string;
        value: string;
        currencyCode: string;
    }
    export interface GetExtraRequest {
        productCode: string;
        attributeFQN: string;
        responseFields?: string;
    }
    export interface GetExtraValueLocalizedDeltaPriceRequest {
        productCode: string;
        attributeFQN: string;
        value: string;
        currencyCode: string;
        responseFields?: string;
    }
    export interface GetExtraValueLocalizedDeltaPricesRequest {
        productCode: string;
        attributeFQN: string;
        value: string;
        responseFields?: string;
    }
    export interface GetExtrasRequest {
        productCode: string;
        responseFields?: string;
    }
    export interface UpdateExtraRequest {
        productCode: string;
        attributeFQN: string;
        responseFields?: string;
        productExtra?: ProductExtra;
    }
    export interface UpdateExtraValueLocalizedDeltaPriceRequest {
        productCode: string;
        attributeFQN: string;
        value: string;
        currencyCode: string;
        responseFields?: string;
        productExtraValueDeltaPrice?: ProductExtraValueDeltaPrice;
    }
    export interface UpdateExtraValueLocalizedDeltaPricesRequest {
        productCode: string;
        attributeFQN: string;
        value: string;
        responseFields?: string;
        productExtraValueDeltaPrice?: Array<ProductExtraValueDeltaPrice>;
    }
}
/**
* ProductExtrasApiService - interface
* 
* @export
* @interface ProductExtrasApi
*/
export interface ProductExtrasApiService {
    /**
    * Add extra
    * @summary Add extra
    * @param {string} productCode 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {ProductExtra} [productExtra] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    addExtraRaw(requestParameters: productExtrasApiParams.AddExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtra>>;

    /**
    * Add extra
    * Add extra
    */
    addExtra(requestParameters: productExtrasApiParams.AddExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtra>;

    /**
    * 
    * @summary Add extra value localized delta price
    * @param {string} productCode 
    * @param {string} attributeFQN 
    * @param {string} value 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {ProductExtraValueDeltaPrice} [productExtraValueDeltaPrice] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    addExtraValueLocalizedDeltaPriceRaw(requestParameters: productExtrasApiParams.AddExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtraValueDeltaPrice>>;

    /**
    * 
    * Add extra value localized delta price
    */
    addExtraValueLocalizedDeltaPrice(requestParameters: productExtrasApiParams.AddExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtraValueDeltaPrice>;

    /**
    * Delete extra
    * @summary Delete extra
    * @param {string} productCode 
    * @param {string} attributeFQN 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    deleteExtraRaw(requestParameters: productExtrasApiParams.DeleteExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
    * Delete extra
    * Delete extra
    */
    deleteExtra(requestParameters: productExtrasApiParams.DeleteExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
    * 
    * @summary Delete extra value localized delta price
    * @param {string} productCode 
    * @param {string} attributeFQN 
    * @param {string} value 
    * @param {string} currencyCode 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    deleteExtraValueLocalizedDeltaPriceRaw(requestParameters: productExtrasApiParams.DeleteExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
    * 
    * Delete extra value localized delta price
    */
    deleteExtraValueLocalizedDeltaPrice(requestParameters: productExtrasApiParams.DeleteExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
    * Get individual extra.
    * @summary Get extra
    * @param {string} productCode 
    * @param {string} attributeFQN 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    getExtraRaw(requestParameters: productExtrasApiParams.GetExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtra>>;

    /**
    * Get individual extra.
    * Get extra
    */
    getExtra(requestParameters: productExtrasApiParams.GetExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtra>;

    /**
    * 
    * @summary Get extra value localized delta price
    * @param {string} productCode 
    * @param {string} attributeFQN 
    * @param {string} value 
    * @param {string} currencyCode 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    getExtraValueLocalizedDeltaPriceRaw(requestParameters: productExtrasApiParams.GetExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtraValueDeltaPrice>>;

    /**
    * 
    * Get extra value localized delta price
    */
    getExtraValueLocalizedDeltaPrice(requestParameters: productExtrasApiParams.GetExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtraValueDeltaPrice>;

    /**
    * 
    * @summary Get extra value localized delta prices
    * @param {string} productCode 
    * @param {string} attributeFQN 
    * @param {string} value 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    getExtraValueLocalizedDeltaPricesRaw(requestParameters: productExtrasApiParams.GetExtraValueLocalizedDeltaPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProductExtraValueDeltaPrice>>>;

    /**
    * 
    * Get extra value localized delta prices
    */
    getExtraValueLocalizedDeltaPrices(requestParameters: productExtrasApiParams.GetExtraValueLocalizedDeltaPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProductExtraValueDeltaPrice>>;

    /**
    * Get extras for the product.
    * @summary Get extras
    * @param {string} productCode 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    getExtrasRaw(requestParameters: productExtrasApiParams.GetExtrasRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProductExtra>>>;

    /**
    * Get extras for the product.
    * Get extras
    */
    getExtras(requestParameters: productExtrasApiParams.GetExtrasRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProductExtra>>;

    /**
    * Update extra
    * @summary Update extra
    * @param {string} productCode 
    * @param {string} attributeFQN 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {ProductExtra} [productExtra] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    updateExtraRaw(requestParameters: productExtrasApiParams.UpdateExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtra>>;

    /**
    * Update extra
    * Update extra
    */
    updateExtra(requestParameters: productExtrasApiParams.UpdateExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtra>;

    /**
    * 
    * @summary Update extra value localized delta price
    * @param {string} productCode 
    * @param {string} attributeFQN 
    * @param {string} value 
    * @param {string} currencyCode 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {ProductExtraValueDeltaPrice} [productExtraValueDeltaPrice] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    updateExtraValueLocalizedDeltaPriceRaw(requestParameters: productExtrasApiParams.UpdateExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtraValueDeltaPrice>>;

    /**
    * 
    * Update extra value localized delta price
    */
    updateExtraValueLocalizedDeltaPrice(requestParameters: productExtrasApiParams.UpdateExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtraValueDeltaPrice>;

    /**
    * 
    * @summary Update extra value localized delta prices
    * @param {string} productCode 
    * @param {string} attributeFQN 
    * @param {string} value 
    * @param {string} [responseFields] limits which fields are returned in the response body
    * @param {Array<ProductExtraValueDeltaPrice>} [productExtraValueDeltaPrice] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ProductExtrasApiInterface
    */
    updateExtraValueLocalizedDeltaPricesRaw(requestParameters: productExtrasApiParams.UpdateExtraValueLocalizedDeltaPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProductExtraValueDeltaPrice>>>;

    /**
    * 
    * Update extra value localized delta prices
    */
    updateExtraValueLocalizedDeltaPrices(requestParameters: productExtrasApiParams.UpdateExtraValueLocalizedDeltaPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProductExtraValueDeltaPrice>>;

}


/**
 * 
 */
export class ProductExtrasApi extends runtime.BaseAPI implements ProductExtrasApiService {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Add extra
     * Add extra
     */


    async addExtraRaw(requestParameters: productExtrasApiParams.AddExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtra>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling addExtra.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.productExtra,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Add extra
     * Add extra
     */
    async addExtra(requestParameters: productExtrasApiParams.AddExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtra> {
        const response = await this.addExtraRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 
     * Add extra value localized delta price
     */


    async addExtraValueLocalizedDeltaPriceRaw(requestParameters: productExtrasApiParams.AddExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtraValueDeltaPrice>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling addExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.attributeFQN === null || requestParameters.attributeFQN === undefined) {
            throw new runtime.RequiredError('attributeFQN','Required parameter requestParameters.attributeFQN was null or undefined when calling addExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.value === null || requestParameters.value === undefined) {
            throw new runtime.RequiredError('value','Required parameter requestParameters.value was null or undefined when calling addExtraValueLocalizedDeltaPrice.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))).replace(`{${"attributeFQN"}}`, encodeURIComponent(String(requestParameters.attributeFQN))).replace(`{${"value"}}`, encodeURIComponent(String(requestParameters.value))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.productExtraValueDeltaPrice,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * 
     * Add extra value localized delta price
     */
    async addExtraValueLocalizedDeltaPrice(requestParameters: productExtrasApiParams.AddExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtraValueDeltaPrice> {
        const response = await this.addExtraValueLocalizedDeltaPriceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete extra
     * Delete extra
     */


    async deleteExtraRaw(requestParameters: productExtrasApiParams.DeleteExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling deleteExtra.');
        }

        if (requestParameters.attributeFQN === null || requestParameters.attributeFQN === undefined) {
            throw new runtime.RequiredError('attributeFQN','Required parameter requestParameters.attributeFQN was null or undefined when calling deleteExtra.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))).replace(`{${"attributeFQN"}}`, encodeURIComponent(String(requestParameters.attributeFQN))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete extra
     * Delete extra
     */
    async deleteExtra(requestParameters: productExtrasApiParams.DeleteExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteExtraRaw(requestParameters, initOverrides);
    }

    /**
     * 
     * Delete extra value localized delta price
     */


    async deleteExtraValueLocalizedDeltaPriceRaw(requestParameters: productExtrasApiParams.DeleteExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling deleteExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.attributeFQN === null || requestParameters.attributeFQN === undefined) {
            throw new runtime.RequiredError('attributeFQN','Required parameter requestParameters.attributeFQN was null or undefined when calling deleteExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.value === null || requestParameters.value === undefined) {
            throw new runtime.RequiredError('value','Required parameter requestParameters.value was null or undefined when calling deleteExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.currencyCode === null || requestParameters.currencyCode === undefined) {
            throw new runtime.RequiredError('currencyCode','Required parameter requestParameters.currencyCode was null or undefined when calling deleteExtraValueLocalizedDeltaPrice.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice/{currencyCode}`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))).replace(`{${"attributeFQN"}}`, encodeURIComponent(String(requestParameters.attributeFQN))).replace(`{${"value"}}`, encodeURIComponent(String(requestParameters.value))).replace(`{${"currencyCode"}}`, encodeURIComponent(String(requestParameters.currencyCode))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 
     * Delete extra value localized delta price
     */
    async deleteExtraValueLocalizedDeltaPrice(requestParameters: productExtrasApiParams.DeleteExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteExtraValueLocalizedDeltaPriceRaw(requestParameters, initOverrides);
    }

    /**
     * Get individual extra.
     * Get extra
     */


    async getExtraRaw(requestParameters: productExtrasApiParams.GetExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtra>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling getExtra.');
        }

        if (requestParameters.attributeFQN === null || requestParameters.attributeFQN === undefined) {
            throw new runtime.RequiredError('attributeFQN','Required parameter requestParameters.attributeFQN was null or undefined when calling getExtra.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))).replace(`{${"attributeFQN"}}`, encodeURIComponent(String(requestParameters.attributeFQN))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Get individual extra.
     * Get extra
     */
    async getExtra(requestParameters: productExtrasApiParams.GetExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtra> {
        const response = await this.getExtraRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 
     * Get extra value localized delta price
     */


    async getExtraValueLocalizedDeltaPriceRaw(requestParameters: productExtrasApiParams.GetExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtraValueDeltaPrice>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling getExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.attributeFQN === null || requestParameters.attributeFQN === undefined) {
            throw new runtime.RequiredError('attributeFQN','Required parameter requestParameters.attributeFQN was null or undefined when calling getExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.value === null || requestParameters.value === undefined) {
            throw new runtime.RequiredError('value','Required parameter requestParameters.value was null or undefined when calling getExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.currencyCode === null || requestParameters.currencyCode === undefined) {
            throw new runtime.RequiredError('currencyCode','Required parameter requestParameters.currencyCode was null or undefined when calling getExtraValueLocalizedDeltaPrice.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice/{currencyCode}`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))).replace(`{${"attributeFQN"}}`, encodeURIComponent(String(requestParameters.attributeFQN))).replace(`{${"value"}}`, encodeURIComponent(String(requestParameters.value))).replace(`{${"currencyCode"}}`, encodeURIComponent(String(requestParameters.currencyCode))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * 
     * Get extra value localized delta price
     */
    async getExtraValueLocalizedDeltaPrice(requestParameters: productExtrasApiParams.GetExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtraValueDeltaPrice> {
        const response = await this.getExtraValueLocalizedDeltaPriceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 
     * Get extra value localized delta prices
     */


    async getExtraValueLocalizedDeltaPricesRaw(requestParameters: productExtrasApiParams.GetExtraValueLocalizedDeltaPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProductExtraValueDeltaPrice>>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling getExtraValueLocalizedDeltaPrices.');
        }

        if (requestParameters.attributeFQN === null || requestParameters.attributeFQN === undefined) {
            throw new runtime.RequiredError('attributeFQN','Required parameter requestParameters.attributeFQN was null or undefined when calling getExtraValueLocalizedDeltaPrices.');
        }

        if (requestParameters.value === null || requestParameters.value === undefined) {
            throw new runtime.RequiredError('value','Required parameter requestParameters.value was null or undefined when calling getExtraValueLocalizedDeltaPrices.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))).replace(`{${"attributeFQN"}}`, encodeURIComponent(String(requestParameters.attributeFQN))).replace(`{${"value"}}`, encodeURIComponent(String(requestParameters.value))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * 
     * Get extra value localized delta prices
     */
    async getExtraValueLocalizedDeltaPrices(requestParameters: productExtrasApiParams.GetExtraValueLocalizedDeltaPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProductExtraValueDeltaPrice>> {
        const response = await this.getExtraValueLocalizedDeltaPricesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get extras for the product.
     * Get extras
     */


    async getExtrasRaw(requestParameters: productExtrasApiParams.GetExtrasRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProductExtra>>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling getExtras.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Get extras for the product.
     * Get extras
     */
    async getExtras(requestParameters: productExtrasApiParams.GetExtrasRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProductExtra>> {
        const response = await this.getExtrasRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update extra
     * Update extra
     */


    async updateExtraRaw(requestParameters: productExtrasApiParams.UpdateExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtra>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling updateExtra.');
        }

        if (requestParameters.attributeFQN === null || requestParameters.attributeFQN === undefined) {
            throw new runtime.RequiredError('attributeFQN','Required parameter requestParameters.attributeFQN was null or undefined when calling updateExtra.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))).replace(`{${"attributeFQN"}}`, encodeURIComponent(String(requestParameters.attributeFQN))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.productExtra,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Update extra
     * Update extra
     */
    async updateExtra(requestParameters: productExtrasApiParams.UpdateExtraRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtra> {
        const response = await this.updateExtraRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 
     * Update extra value localized delta price
     */


    async updateExtraValueLocalizedDeltaPriceRaw(requestParameters: productExtrasApiParams.UpdateExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductExtraValueDeltaPrice>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling updateExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.attributeFQN === null || requestParameters.attributeFQN === undefined) {
            throw new runtime.RequiredError('attributeFQN','Required parameter requestParameters.attributeFQN was null or undefined when calling updateExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.value === null || requestParameters.value === undefined) {
            throw new runtime.RequiredError('value','Required parameter requestParameters.value was null or undefined when calling updateExtraValueLocalizedDeltaPrice.');
        }

        if (requestParameters.currencyCode === null || requestParameters.currencyCode === undefined) {
            throw new runtime.RequiredError('currencyCode','Required parameter requestParameters.currencyCode was null or undefined when calling updateExtraValueLocalizedDeltaPrice.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice/{currencyCode}`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))).replace(`{${"attributeFQN"}}`, encodeURIComponent(String(requestParameters.attributeFQN))).replace(`{${"value"}}`, encodeURIComponent(String(requestParameters.value))).replace(`{${"currencyCode"}}`, encodeURIComponent(String(requestParameters.currencyCode))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.productExtraValueDeltaPrice,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * 
     * Update extra value localized delta price
     */
    async updateExtraValueLocalizedDeltaPrice(requestParameters: productExtrasApiParams.UpdateExtraValueLocalizedDeltaPriceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductExtraValueDeltaPrice> {
        const response = await this.updateExtraValueLocalizedDeltaPriceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 
     * Update extra value localized delta prices
     */


    async updateExtraValueLocalizedDeltaPricesRaw(requestParameters: productExtrasApiParams.UpdateExtraValueLocalizedDeltaPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProductExtraValueDeltaPrice>>> {
        if (requestParameters.productCode === null || requestParameters.productCode === undefined) {
            throw new runtime.RequiredError('productCode','Required parameter requestParameters.productCode was null or undefined when calling updateExtraValueLocalizedDeltaPrices.');
        }

        if (requestParameters.attributeFQN === null || requestParameters.attributeFQN === undefined) {
            throw new runtime.RequiredError('attributeFQN','Required parameter requestParameters.attributeFQN was null or undefined when calling updateExtraValueLocalizedDeltaPrices.');
        }

        if (requestParameters.value === null || requestParameters.value === undefined) {
            throw new runtime.RequiredError('value','Required parameter requestParameters.value was null or undefined when calling updateExtraValueLocalizedDeltaPrices.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice`.replace(`{${"productCode"}}`, encodeURIComponent(String(requestParameters.productCode))).replace(`{${"attributeFQN"}}`, encodeURIComponent(String(requestParameters.attributeFQN))).replace(`{${"value"}}`, encodeURIComponent(String(requestParameters.value))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.productExtraValueDeltaPrice,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * 
     * Update extra value localized delta prices
     */
    async updateExtraValueLocalizedDeltaPrices(requestParameters: productExtrasApiParams.UpdateExtraValueLocalizedDeltaPricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProductExtraValueDeltaPrice>> {
        const response = await this.updateExtraValueLocalizedDeltaPricesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
