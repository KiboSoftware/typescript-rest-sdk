/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContinuityRecurrenceSettings
 */
export interface ContinuityRecurrenceSettings {
    /**
     * Continuity ordinal to start discounting
     * @type {number}
     * @memberof ContinuityRecurrenceSettings
     */
    startOrdinal?: number | null;
    /**
     * Interval until next discount applies
     * @type {number}
     * @memberof ContinuityRecurrenceSettings
     */
    interval?: number | null;
    /**
     * Continuity ordinal to stop discounting
     * @type {number}
     * @memberof ContinuityRecurrenceSettings
     */
    stopOrdinal?: number | null;
}

/**
 * Check if a given object implements the ContinuityRecurrenceSettings interface.
 */
export function instanceOfContinuityRecurrenceSettings(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ContinuityRecurrenceSettingsFromJSON(json: any): ContinuityRecurrenceSettings {
    return ContinuityRecurrenceSettingsFromJSONTyped(json, false);
}

export function ContinuityRecurrenceSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContinuityRecurrenceSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startOrdinal': !exists(json, 'startOrdinal') ? undefined : json['startOrdinal'],
        'interval': !exists(json, 'interval') ? undefined : json['interval'],
        'stopOrdinal': !exists(json, 'stopOrdinal') ? undefined : json['stopOrdinal'],
    };
}

export function ContinuityRecurrenceSettingsToJSON(value?: ContinuityRecurrenceSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startOrdinal': value.startOrdinal,
        'interval': value.interval,
        'stopOrdinal': value.stopOrdinal,
    };
}

