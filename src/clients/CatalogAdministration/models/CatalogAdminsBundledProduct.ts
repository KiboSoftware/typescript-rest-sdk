/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CatalogAdminsProductPrice } from './CatalogAdminsProductPrice';
import {
    CatalogAdminsProductPriceFromJSON,
    CatalogAdminsProductPriceFromJSONTyped,
    CatalogAdminsProductPriceToJSON,
} from './CatalogAdminsProductPrice';
import type { CommerceRuntimeMeasurement } from './CommerceRuntimeMeasurement';
import {
    CommerceRuntimeMeasurementFromJSON,
    CommerceRuntimeMeasurementFromJSONTyped,
    CommerceRuntimeMeasurementToJSON,
} from './CommerceRuntimeMeasurement';

/**
 * Price of the product and currency used.
 * @export
 * @interface CatalogAdminsBundledProduct
 */
export interface CatalogAdminsBundledProduct {
    /**
     * Product Code
     * @type {string}
     * @memberof CatalogAdminsBundledProduct
     */
    productCode?: string | null;
    /**
     * Qty of the bundled PRoduct
     * @type {number}
     * @memberof CatalogAdminsBundledProduct
     */
    quantity?: number;
    /**
     * 
     * @type {CatalogAdminsProductPrice}
     * @memberof CatalogAdminsBundledProduct
     */
    price?: CatalogAdminsProductPrice;
    /**
     * Read only Name of the BundledProduct
     * @type {string}
     * @memberof CatalogAdminsBundledProduct
     */
    productName?: string | null;
    /**
     * 
     * @type {CommerceRuntimeMeasurement}
     * @memberof CatalogAdminsBundledProduct
     */
    packageHeight?: CommerceRuntimeMeasurement;
    /**
     * 
     * @type {CommerceRuntimeMeasurement}
     * @memberof CatalogAdminsBundledProduct
     */
    packageWidth?: CommerceRuntimeMeasurement;
    /**
     * 
     * @type {CommerceRuntimeMeasurement}
     * @memberof CatalogAdminsBundledProduct
     */
    packageLength?: CommerceRuntimeMeasurement;
    /**
     * 
     * @type {CommerceRuntimeMeasurement}
     * @memberof CatalogAdminsBundledProduct
     */
    packageWeight?: CommerceRuntimeMeasurement;
    /**
     * Indicates the fulfillment types the product supports.
     * @type {Array<string>}
     * @memberof CatalogAdminsBundledProduct
     */
    fulfillmentTypesSupported?: Array<string> | null;
}

/**
 * Check if a given object implements the CatalogAdminsBundledProduct interface.
 */
export function instanceOfCatalogAdminsBundledProduct(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CatalogAdminsBundledProductFromJSON(json: any): CatalogAdminsBundledProduct {
    return CatalogAdminsBundledProductFromJSONTyped(json, false);
}

export function CatalogAdminsBundledProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogAdminsBundledProduct {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'price': !exists(json, 'price') ? undefined : CatalogAdminsProductPriceFromJSON(json['price']),
        'productName': !exists(json, 'productName') ? undefined : json['productName'],
        'packageHeight': !exists(json, 'packageHeight') ? undefined : CommerceRuntimeMeasurementFromJSON(json['packageHeight']),
        'packageWidth': !exists(json, 'packageWidth') ? undefined : CommerceRuntimeMeasurementFromJSON(json['packageWidth']),
        'packageLength': !exists(json, 'packageLength') ? undefined : CommerceRuntimeMeasurementFromJSON(json['packageLength']),
        'packageWeight': !exists(json, 'packageWeight') ? undefined : CommerceRuntimeMeasurementFromJSON(json['packageWeight']),
        'fulfillmentTypesSupported': !exists(json, 'fulfillmentTypesSupported') ? undefined : json['fulfillmentTypesSupported'],
    };
}

export function CatalogAdminsBundledProductToJSON(value?: CatalogAdminsBundledProduct | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productCode': value.productCode,
        'quantity': value.quantity,
        'price': CatalogAdminsProductPriceToJSON(value.price),
        'productName': value.productName,
        'packageHeight': CommerceRuntimeMeasurementToJSON(value.packageHeight),
        'packageWidth': CommerceRuntimeMeasurementToJSON(value.packageWidth),
        'packageLength': CommerceRuntimeMeasurementToJSON(value.packageLength),
        'packageWeight': CommerceRuntimeMeasurementToJSON(value.packageWeight),
        'fulfillmentTypesSupported': value.fulfillmentTypesSupported,
    };
}

