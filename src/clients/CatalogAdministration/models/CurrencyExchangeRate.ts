/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';

/**
 * The exchange rate between two currencies
 * @export
 * @interface CurrencyExchangeRate
 */
export interface CurrencyExchangeRate {
    /**
     * The source currency code
     * @type {string}
     * @memberof CurrencyExchangeRate
     */
    fromCurrencyCode?: string | null;
    /**
     * The target currency code
     * @type {string}
     * @memberof CurrencyExchangeRate
     */
    toCurrencyCode?: string | null;
    /**
     * The exchange rate
     * @type {number}
     * @memberof CurrencyExchangeRate
     */
    rate: number;
    /**
     * An additional multiplier to use in calculations
     * @type {number}
     * @memberof CurrencyExchangeRate
     */
    multiplier?: number | null;
    /**
     * Reference data for miscellaneous metadata from updates
     * @type {string}
     * @memberof CurrencyExchangeRate
     */
    referenceData?: string | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof CurrencyExchangeRate
     */
    auditInfo?: AuditInfo;
}

/**
 * Check if a given object implements the CurrencyExchangeRate interface.
 */
export function instanceOfCurrencyExchangeRate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rate" in value;

    return isInstance;
}

export function CurrencyExchangeRateFromJSON(json: any): CurrencyExchangeRate {
    return CurrencyExchangeRateFromJSONTyped(json, false);
}

export function CurrencyExchangeRateFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrencyExchangeRate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fromCurrencyCode': !exists(json, 'fromCurrencyCode') ? undefined : json['fromCurrencyCode'],
        'toCurrencyCode': !exists(json, 'toCurrencyCode') ? undefined : json['toCurrencyCode'],
        'rate': json['rate'],
        'multiplier': !exists(json, 'multiplier') ? undefined : json['multiplier'],
        'referenceData': !exists(json, 'referenceData') ? undefined : json['referenceData'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
    };
}

export function CurrencyExchangeRateToJSON(value?: CurrencyExchangeRate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fromCurrencyCode': value.fromCurrencyCode,
        'toCurrencyCode': value.toCurrencyCode,
        'rate': value.rate,
        'multiplier': value.multiplier,
        'referenceData': value.referenceData,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
    };
}

