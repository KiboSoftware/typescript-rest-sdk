/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Container for language-specific content to display on the storefront. You'll have a container for each supported language (LocaleCode). This enables you to display an attribute in multiple languages yet manage it as a single attribute internally.
 * @export
 * @interface CatalogAdminsAttributeLocalizedContent
 */
export interface CatalogAdminsAttributeLocalizedContent {
    /**
     * Language used for the attribute name and description. Currently, only en_US is supported.
     * @type {string}
     * @memberof CatalogAdminsAttributeLocalizedContent
     */
    localeCode?: string | null;
    /**
     * Name of the attribute in the language specified by LocaleCode.
     * @type {string}
     * @memberof CatalogAdminsAttributeLocalizedContent
     */
    name?: string | null;
    /**
     * Description of the attribute in the language specified by LocaleCode.
     * @type {string}
     * @memberof CatalogAdminsAttributeLocalizedContent
     */
    description?: string | null;
}

/**
 * Check if a given object implements the CatalogAdminsAttributeLocalizedContent interface.
 */
export function instanceOfCatalogAdminsAttributeLocalizedContent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CatalogAdminsAttributeLocalizedContentFromJSON(json: any): CatalogAdminsAttributeLocalizedContent {
    return CatalogAdminsAttributeLocalizedContentFromJSONTyped(json, false);
}

export function CatalogAdminsAttributeLocalizedContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogAdminsAttributeLocalizedContent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'localeCode': !exists(json, 'localeCode') ? undefined : json['localeCode'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function CatalogAdminsAttributeLocalizedContentToJSON(value?: CatalogAdminsAttributeLocalizedContent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'localeCode': value.localeCode,
        'name': value.name,
        'description': value.description,
    };
}

