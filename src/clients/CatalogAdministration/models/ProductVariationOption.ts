/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttributeVocabularyValueLocalizedContent } from './AttributeVocabularyValueLocalizedContent';
import {
    AttributeVocabularyValueLocalizedContentFromJSON,
    AttributeVocabularyValueLocalizedContentFromJSONTyped,
    AttributeVocabularyValueLocalizedContentToJSON,
} from './AttributeVocabularyValueLocalizedContent';

/**
 * An option for a product variation. For example, a T-shirt with size and color configurable options, might have a product variation option of "size" or "color."
 * @export
 * @interface ProductVariationOption
 */
export interface ProductVariationOption {
    /**
     * Unique identifier of the product variation option. System-supplied and read-only.
     * @type {string}
     * @memberof ProductVariationOption
     */
    attributeFQN?: string | null;
    /**
     * Name of the product variation option used on the admin side independent of how it appears on the storefront. For example, the internal "SZ" attribute might appear as "size" on the storefront.
     * @type {any}
     * @memberof ProductVariationOption
     */
    value?: any | null;
    /**
     * 
     * @type {AttributeVocabularyValueLocalizedContent}
     * @memberof ProductVariationOption
     */
    content?: AttributeVocabularyValueLocalizedContent;
}

/**
 * Check if a given object implements the ProductVariationOption interface.
 */
export function instanceOfProductVariationOption(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductVariationOptionFromJSON(json: any): ProductVariationOption {
    return ProductVariationOptionFromJSONTyped(json, false);
}

export function ProductVariationOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductVariationOption {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributeFQN': !exists(json, 'attributeFQN') ? undefined : json['attributeFQN'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'content': !exists(json, 'content') ? undefined : AttributeVocabularyValueLocalizedContentFromJSON(json['content']),
    };
}

export function ProductVariationOptionToJSON(value?: ProductVariationOption | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributeFQN': value.attributeFQN,
        'value': value.value,
        'content': AttributeVocabularyValueLocalizedContentToJSON(value.content),
    };
}

