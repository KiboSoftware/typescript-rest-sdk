/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Price of the product and currency used.
 * @export
 * @interface ProductPublishingInfo
 */
export interface ProductPublishingInfo {
    /**
     * 
     * @type {string}
     * @memberof ProductPublishingInfo
     */
    publishedState?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductPublishingInfo
     */
    lastPublishedBy?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ProductPublishingInfo
     */
    lastPublishedDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof ProductPublishingInfo
     */
    publishSetCode?: string | null;
}

/**
 * Check if a given object implements the ProductPublishingInfo interface.
 */
export function instanceOfProductPublishingInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductPublishingInfoFromJSON(json: any): ProductPublishingInfo {
    return ProductPublishingInfoFromJSONTyped(json, false);
}

export function ProductPublishingInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductPublishingInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'publishedState': !exists(json, 'publishedState') ? undefined : json['publishedState'],
        'lastPublishedBy': !exists(json, 'lastPublishedBy') ? undefined : json['lastPublishedBy'],
        'lastPublishedDate': !exists(json, 'lastPublishedDate') ? undefined : (json['lastPublishedDate'] === null ? null : new Date(json['lastPublishedDate'])),
        'publishSetCode': !exists(json, 'publishSetCode') ? undefined : json['publishSetCode'],
    };
}

export function ProductPublishingInfoToJSON(value?: ProductPublishingInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'publishedState': value.publishedState,
        'lastPublishedBy': value.lastPublishedBy,
        'lastPublishedDate': value.lastPublishedDate === undefined ? undefined : (value.lastPublishedDate === null ? null : value.lastPublishedDate.toISOString()),
        'publishSetCode': value.publishSetCode,
    };
}

