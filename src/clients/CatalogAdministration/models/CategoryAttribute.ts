/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CategoryAttribute
 */
export interface CategoryAttribute {
    /**
     * 
     * @type {string}
     * @memberof CategoryAttribute
     */
    fullyQualifiedName?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CategoryAttribute
     */
    attributeDefinitionId?: number | null;
    /**
     * 
     * @type {Array<any>}
     * @memberof CategoryAttribute
     */
    values?: Array<any> | null;
}

/**
 * Check if a given object implements the CategoryAttribute interface.
 */
export function instanceOfCategoryAttribute(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CategoryAttributeFromJSON(json: any): CategoryAttribute {
    return CategoryAttributeFromJSONTyped(json, false);
}

export function CategoryAttributeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryAttribute {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fullyQualifiedName': !exists(json, 'fullyQualifiedName') ? undefined : json['fullyQualifiedName'],
        'attributeDefinitionId': !exists(json, 'attributeDefinitionId') ? undefined : json['attributeDefinitionId'],
        'values': !exists(json, 'values') ? undefined : json['values'],
    };
}

export function CategoryAttributeToJSON(value?: CategoryAttribute | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fullyQualifiedName': value.fullyQualifiedName,
        'attributeDefinitionId': value.attributeDefinitionId,
        'values': value.values,
    };
}

