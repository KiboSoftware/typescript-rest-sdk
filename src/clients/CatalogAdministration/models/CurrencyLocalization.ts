/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';

/**
 * A currency and some localization options
 * @export
 * @interface CurrencyLocalization
 */
export interface CurrencyLocalization {
    /**
     * Currency Code
     * @type {string}
     * @memberof CurrencyLocalization
     */
    currencyCode?: string | null;
    /**
     * Number of decimal places to round to
     * @type {number}
     * @memberof CurrencyLocalization
     */
    decimalPlaces?: number | null;
    /**
     * The rounding strategy to use
     * @type {number}
     * @memberof CurrencyLocalization
     */
    roundingStrategy?: number | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof CurrencyLocalization
     */
    auditInfo?: AuditInfo;
}

/**
 * Check if a given object implements the CurrencyLocalization interface.
 */
export function instanceOfCurrencyLocalization(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CurrencyLocalizationFromJSON(json: any): CurrencyLocalization {
    return CurrencyLocalizationFromJSONTyped(json, false);
}

export function CurrencyLocalizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrencyLocalization {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
        'decimalPlaces': !exists(json, 'decimalPlaces') ? undefined : json['decimalPlaces'],
        'roundingStrategy': !exists(json, 'roundingStrategy') ? undefined : json['roundingStrategy'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
    };
}

export function CurrencyLocalizationToJSON(value?: CurrencyLocalization | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currencyCode': value.currencyCode,
        'decimalPlaces': value.decimalPlaces,
        'roundingStrategy': value.roundingStrategy,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
    };
}

