/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Attribute Value Localized Resource
 * @export
 * @interface AttributeTypeRule
 */
export interface AttributeTypeRule {
    /**
     * AttributeInputType identifier
     * @type {string}
     * @memberof AttributeTypeRule
     */
    attributeInputType?: string | null;
    /**
     * AttributeDataType identifier
     * @type {string}
     * @memberof AttributeTypeRule
     */
    attributeDataType?: string | null;
    /**
     * AttributeValueType identifier
     * @type {string}
     * @memberof AttributeTypeRule
     */
    attributeValueType?: string | null;
    /**
     * AttributeUsageType identifier
     * @type {string}
     * @memberof AttributeTypeRule
     */
    attributeUsageType?: string | null;
}

/**
 * Check if a given object implements the AttributeTypeRule interface.
 */
export function instanceOfAttributeTypeRule(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AttributeTypeRuleFromJSON(json: any): AttributeTypeRule {
    return AttributeTypeRuleFromJSONTyped(json, false);
}

export function AttributeTypeRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeTypeRule {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributeInputType': !exists(json, 'attributeInputType') ? undefined : json['attributeInputType'],
        'attributeDataType': !exists(json, 'attributeDataType') ? undefined : json['attributeDataType'],
        'attributeValueType': !exists(json, 'attributeValueType') ? undefined : json['attributeValueType'],
        'attributeUsageType': !exists(json, 'attributeUsageType') ? undefined : json['attributeUsageType'],
    };
}

export function AttributeTypeRuleToJSON(value?: AttributeTypeRule | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributeInputType': value.attributeInputType,
        'attributeDataType': value.attributeDataType,
        'attributeValueType': value.attributeValueType,
        'attributeUsageType': value.attributeUsageType,
    };
}

