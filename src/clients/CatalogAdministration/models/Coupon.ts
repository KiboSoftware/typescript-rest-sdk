/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';

/**
 * Coupon in a coupon set.
 * @export
 * @interface Coupon
 */
export interface Coupon {
    /**
     * ReadOnly system id for releated couponset.
     * @type {number}
     * @memberof Coupon
     */
    couponSetId?: number;
    /**
     * Link to associated coupon
     * @type {string}
     * @memberof Coupon
     */
    couponSetCode?: string | null;
    /**
     * The code the customer uses to claim this coupon
     * @type {string}
     * @memberof Coupon
     */
    couponCode: string;
    /**
     * 
     * @type {boolean}
     * @memberof Coupon
     */
    canBeDeleted?: boolean;
    /**
     * Total number of times this code has been redeemed. ReadOnly, calculated.
     * Only returned with response group includeCounts
     * @type {number}
     * @memberof Coupon
     */
    redemptionCount?: number | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof Coupon
     */
    auditInfo?: AuditInfo;
}

/**
 * Check if a given object implements the Coupon interface.
 */
export function instanceOfCoupon(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "couponCode" in value;

    return isInstance;
}

export function CouponFromJSON(json: any): Coupon {
    return CouponFromJSONTyped(json, false);
}

export function CouponFromJSONTyped(json: any, ignoreDiscriminator: boolean): Coupon {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'couponSetId': !exists(json, 'couponSetId') ? undefined : json['couponSetId'],
        'couponSetCode': !exists(json, 'couponSetCode') ? undefined : json['couponSetCode'],
        'couponCode': json['couponCode'],
        'canBeDeleted': !exists(json, 'canBeDeleted') ? undefined : json['canBeDeleted'],
        'redemptionCount': !exists(json, 'redemptionCount') ? undefined : json['redemptionCount'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
    };
}

export function CouponToJSON(value?: Coupon | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'couponSetId': value.couponSetId,
        'couponSetCode': value.couponSetCode,
        'couponCode': value.couponCode,
        'canBeDeleted': value.canBeDeleted,
        'redemptionCount': value.redemptionCount,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
    };
}

