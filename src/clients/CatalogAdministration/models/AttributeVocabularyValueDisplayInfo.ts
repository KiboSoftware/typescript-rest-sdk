/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AttributeVocabularyValueDisplayInfo
 */
export interface AttributeVocabularyValueDisplayInfo {
    /**
     * Id of the image in the CMS.
     * @type {string}
     * @memberof AttributeVocabularyValueDisplayInfo
     */
    cmsId?: string | null;
    /**
     * URL of the image.
     * @type {string}
     * @memberof AttributeVocabularyValueDisplayInfo
     */
    imageUrl?: string | null;
    /**
     * Hex Color value to display in a color picker
     * @type {string}
     * @memberof AttributeVocabularyValueDisplayInfo
     */
    colorValue?: string | null;
}

/**
 * Check if a given object implements the AttributeVocabularyValueDisplayInfo interface.
 */
export function instanceOfAttributeVocabularyValueDisplayInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AttributeVocabularyValueDisplayInfoFromJSON(json: any): AttributeVocabularyValueDisplayInfo {
    return AttributeVocabularyValueDisplayInfoFromJSONTyped(json, false);
}

export function AttributeVocabularyValueDisplayInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeVocabularyValueDisplayInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cmsId': !exists(json, 'cmsId') ? undefined : json['cmsId'],
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'colorValue': !exists(json, 'colorValue') ? undefined : json['colorValue'],
    };
}

export function AttributeVocabularyValueDisplayInfoToJSON(value?: AttributeVocabularyValueDisplayInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cmsId': value.cmsId,
        'imageUrl': value.imageUrl,
        'colorValue': value.colorValue,
    };
}

