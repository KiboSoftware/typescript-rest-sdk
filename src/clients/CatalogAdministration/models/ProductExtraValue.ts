/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttributeVocabularyValue } from './AttributeVocabularyValue';
import {
    AttributeVocabularyValueFromJSON,
    AttributeVocabularyValueFromJSONTyped,
    AttributeVocabularyValueToJSON,
} from './AttributeVocabularyValue';
import type { ProductExtraValueDeltaPrice } from './ProductExtraValueDeltaPrice';
import {
    ProductExtraValueDeltaPriceFromJSON,
    ProductExtraValueDeltaPriceFromJSONTyped,
    ProductExtraValueDeltaPriceToJSON,
} from './ProductExtraValueDeltaPrice';

/**
 * A value of a product option for this product. For example, a computer product may have an option called "Memory" that can have the values "6GB,"8GB," and "12GB."
 * @export
 * @interface ProductExtraValue
 */
export interface ProductExtraValue {
    /**
     * 
     * @type {any}
     * @memberof ProductExtraValue
     */
    value?: any | null;
    /**
     * 
     * @type {ProductExtraValueDeltaPrice}
     * @memberof ProductExtraValue
     */
    deltaPrice?: ProductExtraValueDeltaPrice;
    /**
     * 
     * @type {Array<ProductExtraValueDeltaPrice>}
     * @memberof ProductExtraValue
     */
    localizedDeltaPrice?: Array<ProductExtraValueDeltaPrice> | null;
    /**
     * 
     * @type {number}
     * @memberof ProductExtraValue
     */
    deltaWeight?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProductExtraValue
     */
    isDefaulted?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof ProductExtraValue
     */
    quantity?: number | null;
    /**
     * 
     * @type {AttributeVocabularyValue}
     * @memberof ProductExtraValue
     */
    attributeVocabularyValueDetail?: AttributeVocabularyValue;
}

/**
 * Check if a given object implements the ProductExtraValue interface.
 */
export function instanceOfProductExtraValue(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductExtraValueFromJSON(json: any): ProductExtraValue {
    return ProductExtraValueFromJSONTyped(json, false);
}

export function ProductExtraValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductExtraValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'value': !exists(json, 'value') ? undefined : json['value'],
        'deltaPrice': !exists(json, 'deltaPrice') ? undefined : ProductExtraValueDeltaPriceFromJSON(json['deltaPrice']),
        'localizedDeltaPrice': !exists(json, 'localizedDeltaPrice') ? undefined : (json['localizedDeltaPrice'] === null ? null : (json['localizedDeltaPrice'] as Array<any>).map(ProductExtraValueDeltaPriceFromJSON)),
        'deltaWeight': !exists(json, 'deltaWeight') ? undefined : json['deltaWeight'],
        'isDefaulted': !exists(json, 'isDefaulted') ? undefined : json['isDefaulted'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'attributeVocabularyValueDetail': !exists(json, 'attributeVocabularyValueDetail') ? undefined : AttributeVocabularyValueFromJSON(json['attributeVocabularyValueDetail']),
    };
}

export function ProductExtraValueToJSON(value?: ProductExtraValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'value': value.value,
        'deltaPrice': ProductExtraValueDeltaPriceToJSON(value.deltaPrice),
        'localizedDeltaPrice': value.localizedDeltaPrice === undefined ? undefined : (value.localizedDeltaPrice === null ? null : (value.localizedDeltaPrice as Array<any>).map(ProductExtraValueDeltaPriceToJSON)),
        'deltaWeight': value.deltaWeight,
        'isDefaulted': value.isDefaulted,
        'quantity': value.quantity,
        'attributeVocabularyValueDetail': AttributeVocabularyValueToJSON(value.attributeVocabularyValueDetail),
    };
}

