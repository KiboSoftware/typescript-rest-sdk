/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActiveDateRange } from './ActiveDateRange';
import {
    ActiveDateRangeFromJSON,
    ActiveDateRangeFromJSONTyped,
    ActiveDateRangeToJSON,
} from './ActiveDateRange';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { ProductCategory } from './ProductCategory';
import {
    ProductCategoryFromJSON,
    ProductCategoryFromJSONTyped,
    ProductCategoryToJSON,
} from './ProductCategory';
import type { ProductLocalizedContent } from './ProductLocalizedContent';
import {
    ProductLocalizedContentFromJSON,
    ProductLocalizedContentFromJSONTyped,
    ProductLocalizedContentToJSON,
} from './ProductLocalizedContent';
import type { ProductLocalizedSEOContent } from './ProductLocalizedSEOContent';
import {
    ProductLocalizedSEOContentFromJSON,
    ProductLocalizedSEOContentFromJSONTyped,
    ProductLocalizedSEOContentToJSON,
} from './ProductLocalizedSEOContent';
import type { ProductPrice } from './ProductPrice';
import {
    ProductPriceFromJSON,
    ProductPriceFromJSONTyped,
    ProductPriceToJSON,
} from './ProductPrice';

/**
 * Use the Products resource to create and manage products for your store.
 * You can create products with options that a shopper configures
 * (such as a T-shirt color and size). The system can manage inventory for all
 * combinations of your product options, and can calculate tax and shipping costs.
 * @export
 * @interface ProductInCatalogInfo
 */
export interface ProductInCatalogInfo {
    /**
     * The CatalogId of the catalog that the product is associated with (The catalog must a valid catalog within the MasterCatalog that the product belongs to)
     * @type {number}
     * @memberof ProductInCatalogInfo
     */
    catalogId?: number;
    /**
     * If true, the product is marked as available for sale in the catalog. Setting a product to IsActive = false will prevent it from being shown on the customer facing storefront.
     * @type {boolean}
     * @memberof ProductInCatalogInfo
     */
    isActive?: boolean | null;
    /**
     * If true, the content for this product is overridden in the catalog. If false, the MasterCatalog level content will be used for the product.
     * @type {boolean}
     * @memberof ProductInCatalogInfo
     */
    isContentOverridden?: boolean | null;
    /**
     * 
     * @type {ProductLocalizedContent}
     * @memberof ProductInCatalogInfo
     */
    content?: ProductLocalizedContent;
    /**
     * If true, the price for this product is overridden in the catalog. If false, the MasterCatalog level price will be used for the product.
     * @type {boolean}
     * @memberof ProductInCatalogInfo
     */
    isPriceOverridden?: boolean | null;
    /**
     * 
     * @type {ProductPrice}
     * @memberof ProductInCatalogInfo
     */
    price?: ProductPrice;
    /**
     * If true, the SEO content for this product is overridden in the catalog. If false, the MasterCatalog level SEO content will be used for the product.
     * @type {boolean}
     * @memberof ProductInCatalogInfo
     */
    isSeoContentOverridden?: boolean | null;
    /**
     * 
     * @type {ProductLocalizedSEOContent}
     * @memberof ProductInCatalogInfo
     */
    seoContent?: ProductLocalizedSEOContent;
    /**
     * Categories to which the product belongs for this catalog.
     * @type {Array<ProductCategory>}
     * @memberof ProductInCatalogInfo
     */
    productCategories?: Array<ProductCategory> | null;
    /**
     * 
     * @type {ProductCategory}
     * @memberof ProductInCatalogInfo
     */
    primaryProductCategory?: ProductCategory;
    /**
     * Date this product was first Available for sale in the catalog. This is utilized in expressions that reference DaysInCatloag.
     * @type {Date}
     * @memberof ProductInCatalogInfo
     */
    dateFirstAvailableInCatalog?: Date | null;
    /**
     * 
     * @type {ActiveDateRange}
     * @memberof ProductInCatalogInfo
     */
    activeDateRange?: ActiveDateRange;
    /**
     * 
     * @type {AuditInfo}
     * @memberof ProductInCatalogInfo
     */
    auditInfo?: AuditInfo;
}

/**
 * Check if a given object implements the ProductInCatalogInfo interface.
 */
export function instanceOfProductInCatalogInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductInCatalogInfoFromJSON(json: any): ProductInCatalogInfo {
    return ProductInCatalogInfoFromJSONTyped(json, false);
}

export function ProductInCatalogInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductInCatalogInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'catalogId': !exists(json, 'catalogId') ? undefined : json['catalogId'],
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'isContentOverridden': !exists(json, 'isContentOverridden') ? undefined : json['isContentOverridden'],
        'content': !exists(json, 'content') ? undefined : ProductLocalizedContentFromJSON(json['content']),
        'isPriceOverridden': !exists(json, 'isPriceOverridden') ? undefined : json['isPriceOverridden'],
        'price': !exists(json, 'price') ? undefined : ProductPriceFromJSON(json['price']),
        'isSeoContentOverridden': !exists(json, 'isSeoContentOverridden') ? undefined : json['isSeoContentOverridden'],
        'seoContent': !exists(json, 'seoContent') ? undefined : ProductLocalizedSEOContentFromJSON(json['seoContent']),
        'productCategories': !exists(json, 'productCategories') ? undefined : (json['productCategories'] === null ? null : (json['productCategories'] as Array<any>).map(ProductCategoryFromJSON)),
        'primaryProductCategory': !exists(json, 'primaryProductCategory') ? undefined : ProductCategoryFromJSON(json['primaryProductCategory']),
        'dateFirstAvailableInCatalog': !exists(json, 'dateFirstAvailableInCatalog') ? undefined : (json['dateFirstAvailableInCatalog'] === null ? null : new Date(json['dateFirstAvailableInCatalog'])),
        'activeDateRange': !exists(json, 'activeDateRange') ? undefined : ActiveDateRangeFromJSON(json['activeDateRange']),
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
    };
}

export function ProductInCatalogInfoToJSON(value?: ProductInCatalogInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'catalogId': value.catalogId,
        'isActive': value.isActive,
        'isContentOverridden': value.isContentOverridden,
        'content': ProductLocalizedContentToJSON(value.content),
        'isPriceOverridden': value.isPriceOverridden,
        'price': ProductPriceToJSON(value.price),
        'isSeoContentOverridden': value.isSeoContentOverridden,
        'seoContent': ProductLocalizedSEOContentToJSON(value.seoContent),
        'productCategories': value.productCategories === undefined ? undefined : (value.productCategories === null ? null : (value.productCategories as Array<any>).map(ProductCategoryToJSON)),
        'primaryProductCategory': ProductCategoryToJSON(value.primaryProductCategory),
        'dateFirstAvailableInCatalog': value.dateFirstAvailableInCatalog === undefined ? undefined : (value.dateFirstAvailableInCatalog === null ? null : value.dateFirstAvailableInCatalog.toISOString()),
        'activeDateRange': ActiveDateRangeToJSON(value.activeDateRange),
        'auditInfo': AuditInfoToJSON(value.auditInfo),
    };
}

