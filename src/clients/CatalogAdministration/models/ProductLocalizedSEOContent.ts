/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Container for language-specific content to display on the storefront. You'll have a container for each supported language (LocaleCode). This enables you to display a product in multiple languages yet manage it as a single product internally.
 * @export
 * @interface ProductLocalizedSEOContent
 */
export interface ProductLocalizedSEOContent {
    /**
     * Lanugage used for product content. Currently, only en_US is supported.
     * @type {string}
     * @memberof ProductLocalizedSEOContent
     */
    localeCode?: string | null;
    /**
     * Metadata title. Metadata can be used to manage information internally. Sometimes used for SEO.
     * @type {string}
     * @memberof ProductLocalizedSEOContent
     */
    metaTagTitle?: string | null;
    /**
     * Metadata description. Metadata can be used to manage information internally. Sometimes used for SEO.
     * @type {string}
     * @memberof ProductLocalizedSEOContent
     */
    metaTagDescription?: string | null;
    /**
     * Metadata keywords. Metadata can be used to manage information internally. Sometimes used for SEO.
     * @type {string}
     * @memberof ProductLocalizedSEOContent
     */
    metaTagKeywords?: string | null;
    /**
     * Used to customize the HTML title tag within the head section of the product details page
     * @type {string}
     * @memberof ProductLocalizedSEOContent
     */
    titleTagTitle?: string | null;
    /**
     * Human-readable identifier that you can give to the product to create friendly URLs. For example, 
     * instead of "http: //example.com/products?category=2&id=25," the friendly URL can be "http: //example.com/products/category/2/25."
     * @type {string}
     * @memberof ProductLocalizedSEOContent
     */
    seoFriendlyUrl?: string | null;
}

/**
 * Check if a given object implements the ProductLocalizedSEOContent interface.
 */
export function instanceOfProductLocalizedSEOContent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductLocalizedSEOContentFromJSON(json: any): ProductLocalizedSEOContent {
    return ProductLocalizedSEOContentFromJSONTyped(json, false);
}

export function ProductLocalizedSEOContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductLocalizedSEOContent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'localeCode': !exists(json, 'localeCode') ? undefined : json['localeCode'],
        'metaTagTitle': !exists(json, 'metaTagTitle') ? undefined : json['metaTagTitle'],
        'metaTagDescription': !exists(json, 'metaTagDescription') ? undefined : json['metaTagDescription'],
        'metaTagKeywords': !exists(json, 'metaTagKeywords') ? undefined : json['metaTagKeywords'],
        'titleTagTitle': !exists(json, 'titleTagTitle') ? undefined : json['titleTagTitle'],
        'seoFriendlyUrl': !exists(json, 'seoFriendlyUrl') ? undefined : json['seoFriendlyUrl'],
    };
}

export function ProductLocalizedSEOContentToJSON(value?: ProductLocalizedSEOContent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'localeCode': value.localeCode,
        'metaTagTitle': value.metaTagTitle,
        'metaTagDescription': value.metaTagDescription,
        'metaTagKeywords': value.metaTagKeywords,
        'titleTagTitle': value.titleTagTitle,
        'seoFriendlyUrl': value.seoFriendlyUrl,
    };
}

