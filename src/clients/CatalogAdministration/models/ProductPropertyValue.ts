/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttributeVocabularyValue } from './AttributeVocabularyValue';
import {
    AttributeVocabularyValueFromJSON,
    AttributeVocabularyValueFromJSONTyped,
    AttributeVocabularyValueToJSON,
} from './AttributeVocabularyValue';
import type { ProductPropertyValueLocalizedContent } from './ProductPropertyValueLocalizedContent';
import {
    ProductPropertyValueLocalizedContentFromJSON,
    ProductPropertyValueLocalizedContentFromJSONTyped,
    ProductPropertyValueLocalizedContentToJSON,
} from './ProductPropertyValueLocalizedContent';

/**
 * A value of a product option for this product. For example, a computer product may have an option called "Memory" that can have the values "6GB,"8GB," and "12GB."
 * @export
 * @interface ProductPropertyValue
 */
export interface ProductPropertyValue {
    /**
     * 
     * @type {any}
     * @memberof ProductPropertyValue
     */
    value?: any | null;
    /**
     * 
     * @type {ProductPropertyValueLocalizedContent}
     * @memberof ProductPropertyValue
     */
    content?: ProductPropertyValueLocalizedContent;
    /**
     * 
     * @type {Array<ProductPropertyValueLocalizedContent>}
     * @memberof ProductPropertyValue
     */
    localizedContent?: Array<ProductPropertyValueLocalizedContent> | null;
    /**
     * 
     * @type {AttributeVocabularyValue}
     * @memberof ProductPropertyValue
     */
    attributeVocabularyValueDetail?: AttributeVocabularyValue;
}

/**
 * Check if a given object implements the ProductPropertyValue interface.
 */
export function instanceOfProductPropertyValue(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductPropertyValueFromJSON(json: any): ProductPropertyValue {
    return ProductPropertyValueFromJSONTyped(json, false);
}

export function ProductPropertyValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductPropertyValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'value': !exists(json, 'value') ? undefined : json['value'],
        'content': !exists(json, 'content') ? undefined : ProductPropertyValueLocalizedContentFromJSON(json['content']),
        'localizedContent': !exists(json, 'localizedContent') ? undefined : (json['localizedContent'] === null ? null : (json['localizedContent'] as Array<any>).map(ProductPropertyValueLocalizedContentFromJSON)),
        'attributeVocabularyValueDetail': !exists(json, 'attributeVocabularyValueDetail') ? undefined : AttributeVocabularyValueFromJSON(json['attributeVocabularyValueDetail']),
    };
}

export function ProductPropertyValueToJSON(value?: ProductPropertyValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'value': value.value,
        'content': ProductPropertyValueLocalizedContentToJSON(value.content),
        'localizedContent': value.localizedContent === undefined ? undefined : (value.localizedContent === null ? null : (value.localizedContent as Array<any>).map(ProductPropertyValueLocalizedContentToJSON)),
        'attributeVocabularyValueDetail': AttributeVocabularyValueToJSON(value.attributeVocabularyValueDetail),
    };
}

