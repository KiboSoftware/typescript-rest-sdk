/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttributeVocabularyValue } from './AttributeVocabularyValue';
import {
    AttributeVocabularyValueFromJSON,
    AttributeVocabularyValueFromJSONTyped,
    AttributeVocabularyValueToJSON,
} from './AttributeVocabularyValue';
import type { AttributeVocabularyValueDisplayInfo } from './AttributeVocabularyValueDisplayInfo';
import {
    AttributeVocabularyValueDisplayInfoFromJSON,
    AttributeVocabularyValueDisplayInfoFromJSONTyped,
    AttributeVocabularyValueDisplayInfoToJSON,
} from './AttributeVocabularyValueDisplayInfo';

/**
 * 
 * @export
 * @interface AttributeVocabularyValueInProductType
 */
export interface AttributeVocabularyValueInProductType {
    /**
     * The actual value of the attribute vocabulary. This must be an existing value defined in the attribute vocabulary
     * @type {any}
     * @memberof AttributeVocabularyValueInProductType
     */
    value?: any | null;
    /**
     * Used to order the display of the attribute values in the storefront....
     * @type {number}
     * @memberof AttributeVocabularyValueInProductType
     */
    order?: number | null;
    /**
     * 
     * @type {AttributeVocabularyValueDisplayInfo}
     * @memberof AttributeVocabularyValueInProductType
     */
    displayInfo?: AttributeVocabularyValueDisplayInfo;
    /**
     * 
     * @type {AttributeVocabularyValue}
     * @memberof AttributeVocabularyValueInProductType
     */
    vocabularyValueDetail?: AttributeVocabularyValue;
}

/**
 * Check if a given object implements the AttributeVocabularyValueInProductType interface.
 */
export function instanceOfAttributeVocabularyValueInProductType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AttributeVocabularyValueInProductTypeFromJSON(json: any): AttributeVocabularyValueInProductType {
    return AttributeVocabularyValueInProductTypeFromJSONTyped(json, false);
}

export function AttributeVocabularyValueInProductTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeVocabularyValueInProductType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'value': !exists(json, 'value') ? undefined : json['value'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'displayInfo': !exists(json, 'displayInfo') ? undefined : AttributeVocabularyValueDisplayInfoFromJSON(json['displayInfo']),
        'vocabularyValueDetail': !exists(json, 'vocabularyValueDetail') ? undefined : AttributeVocabularyValueFromJSON(json['vocabularyValueDetail']),
    };
}

export function AttributeVocabularyValueInProductTypeToJSON(value?: AttributeVocabularyValueInProductType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'value': value.value,
        'order': value.order,
        'displayInfo': AttributeVocabularyValueDisplayInfoToJSON(value.displayInfo),
        'vocabularyValueDetail': AttributeVocabularyValueToJSON(value.vocabularyValueDetail),
    };
}

