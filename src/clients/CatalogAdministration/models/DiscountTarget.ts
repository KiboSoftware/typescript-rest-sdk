/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TargetedCategory } from './TargetedCategory';
import {
    TargetedCategoryFromJSON,
    TargetedCategoryFromJSONTyped,
    TargetedCategoryToJSON,
} from './TargetedCategory';
import type { TargetedProduct } from './TargetedProduct';
import {
    TargetedProductFromJSON,
    TargetedProductFromJSONTyped,
    TargetedProductToJSON,
} from './TargetedProduct';
import type { TargetedShippingMethod } from './TargetedShippingMethod';
import {
    TargetedShippingMethodFromJSON,
    TargetedShippingMethodFromJSONTyped,
    TargetedShippingMethodToJSON,
} from './TargetedShippingMethod';
import type { TargetedShippingZone } from './TargetedShippingZone';
import {
    TargetedShippingZoneFromJSON,
    TargetedShippingZoneFromJSONTyped,
    TargetedShippingZoneToJSON,
} from './TargetedShippingZone';

/**
 * What to discount. Specifies the type of discount (percentage off, monetary amount, or free shipping) and which products, categories, or shipping methods are eligible for the discount.
 * Can also specify the minimum amount that the order must total for the discount to apply.
 * @export
 * @interface DiscountTarget
 */
export interface DiscountTarget {
    /**
     *     Type of target to which the discount applies. Possible values: <pre>Product</pre> or <pre>Shipping</pre>. 
     * If this is a <pre>Product</pre> type, you can specify which products or categories that the discount applies to.
     *     If this is a <pre>Shipping</pre> type then you must specify which shipping methods apply.
     * @type {string}
     * @memberof DiscountTarget
     */
    type: string;
    /**
     * If yes, the discount applies to all products sold on the storefront.
     * @type {boolean}
     * @memberof DiscountTarget
     */
    includeAllProducts?: boolean | null;
    /**
     * Applies to Included categories
     * When Any, the target product can belong to any specified category.
     * When All, the target product must belong to all specified categories.
     * Defaults to Any
     * @type {string}
     * @memberof DiscountTarget
     */
    includedCategoriesOperator?: string | null;
    /**
     * List of categories to discount. When a discount applies to a category, all products in the category are discounted.
     * @type {Array<TargetedCategory>}
     * @memberof DiscountTarget
     */
    categories?: Array<TargetedCategory> | null;
    /**
     * Applies to Included categories
     * Defaults to Any
     * @type {string}
     * @memberof DiscountTarget
     */
    excludedCategoriesOperator?: string | null;
    /**
     * List of categories to exclude from the discount. Useful to exclude specific child categories.
     * @type {Array<TargetedCategory>}
     * @memberof DiscountTarget
     */
    excludedCategories?: Array<TargetedCategory> | null;
    /**
     * List of products that are eligible for the discount.
     * @type {Array<TargetedProduct>}
     * @memberof DiscountTarget
     */
    products?: Array<TargetedProduct> | null;
    /**
     * List of products that are excluded from the discount.
     * @type {Array<TargetedProduct>}
     * @memberof DiscountTarget
     */
    excludedProducts?: Array<TargetedProduct> | null;
    /**
     * Prevents order scoped discounts from layering over items that already have a shipping discount with the 
     * same type.
     * @type {boolean}
     * @memberof DiscountTarget
     */
    excludeItemsWithExistingShippingDiscounts?: boolean | null;
    /**
     * Prevents order scoped discounts from layering over items that already have a product discount with the 
     * same type.
     * @type {boolean}
     * @memberof DiscountTarget
     */
    excludeItemsWithExistingProductDiscounts?: boolean | null;
    /**
     * Shipping method that is eligible for shipping discounts. This is a shipping method defined in Shipping Settings.
     * @type {Array<TargetedShippingMethod>}
     * @memberof DiscountTarget
     */
    shippingMethods?: Array<TargetedShippingMethod> | null;
    /**
     * Shipping Zones that are applicable for this discount
     * @type {Array<TargetedShippingZone>}
     * @memberof DiscountTarget
     */
    shippingZones?: Array<TargetedShippingZone> | null;
    /**
     * When a condition is specified, this property limits the number of items that can be targeted per discount redemption with an order.
     * if multiple redemptions are allowed per order then multiples of this value would be allowed in multiples of the associated 
     * condition.
     * If no condition is specified then this value is not used.  
     * If null and condition exists, then defaults to 1.
     * @type {number}
     * @memberof DiscountTarget
     */
    maximumQuantityPerRedemption?: number | null;
    /**
     * Determines which way the discount is optimized.  Consumers favor(default - false/null) or tenants favor (when this is set to true)
     * Applies to discounts where target is not a specific product or list of products.  
     * May also impact behavior of Buy X Get Y so that X is the most expensive items and Y the least expensive.
     * @type {boolean}
     * @memberof DiscountTarget
     */
    appliesToLeastExpensiveProductsFirst?: boolean | null;
}

/**
 * Check if a given object implements the DiscountTarget interface.
 */
export function instanceOfDiscountTarget(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function DiscountTargetFromJSON(json: any): DiscountTarget {
    return DiscountTargetFromJSONTyped(json, false);
}

export function DiscountTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscountTarget {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'includeAllProducts': !exists(json, 'includeAllProducts') ? undefined : json['includeAllProducts'],
        'includedCategoriesOperator': !exists(json, 'includedCategoriesOperator') ? undefined : json['includedCategoriesOperator'],
        'categories': !exists(json, 'categories') ? undefined : (json['categories'] === null ? null : (json['categories'] as Array<any>).map(TargetedCategoryFromJSON)),
        'excludedCategoriesOperator': !exists(json, 'excludedCategoriesOperator') ? undefined : json['excludedCategoriesOperator'],
        'excludedCategories': !exists(json, 'excludedCategories') ? undefined : (json['excludedCategories'] === null ? null : (json['excludedCategories'] as Array<any>).map(TargetedCategoryFromJSON)),
        'products': !exists(json, 'products') ? undefined : (json['products'] === null ? null : (json['products'] as Array<any>).map(TargetedProductFromJSON)),
        'excludedProducts': !exists(json, 'excludedProducts') ? undefined : (json['excludedProducts'] === null ? null : (json['excludedProducts'] as Array<any>).map(TargetedProductFromJSON)),
        'excludeItemsWithExistingShippingDiscounts': !exists(json, 'excludeItemsWithExistingShippingDiscounts') ? undefined : json['excludeItemsWithExistingShippingDiscounts'],
        'excludeItemsWithExistingProductDiscounts': !exists(json, 'excludeItemsWithExistingProductDiscounts') ? undefined : json['excludeItemsWithExistingProductDiscounts'],
        'shippingMethods': !exists(json, 'shippingMethods') ? undefined : (json['shippingMethods'] === null ? null : (json['shippingMethods'] as Array<any>).map(TargetedShippingMethodFromJSON)),
        'shippingZones': !exists(json, 'shippingZones') ? undefined : (json['shippingZones'] === null ? null : (json['shippingZones'] as Array<any>).map(TargetedShippingZoneFromJSON)),
        'maximumQuantityPerRedemption': !exists(json, 'maximumQuantityPerRedemption') ? undefined : json['maximumQuantityPerRedemption'],
        'appliesToLeastExpensiveProductsFirst': !exists(json, 'appliesToLeastExpensiveProductsFirst') ? undefined : json['appliesToLeastExpensiveProductsFirst'],
    };
}

export function DiscountTargetToJSON(value?: DiscountTarget | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'includeAllProducts': value.includeAllProducts,
        'includedCategoriesOperator': value.includedCategoriesOperator,
        'categories': value.categories === undefined ? undefined : (value.categories === null ? null : (value.categories as Array<any>).map(TargetedCategoryToJSON)),
        'excludedCategoriesOperator': value.excludedCategoriesOperator,
        'excludedCategories': value.excludedCategories === undefined ? undefined : (value.excludedCategories === null ? null : (value.excludedCategories as Array<any>).map(TargetedCategoryToJSON)),
        'products': value.products === undefined ? undefined : (value.products === null ? null : (value.products as Array<any>).map(TargetedProductToJSON)),
        'excludedProducts': value.excludedProducts === undefined ? undefined : (value.excludedProducts === null ? null : (value.excludedProducts as Array<any>).map(TargetedProductToJSON)),
        'excludeItemsWithExistingShippingDiscounts': value.excludeItemsWithExistingShippingDiscounts,
        'excludeItemsWithExistingProductDiscounts': value.excludeItemsWithExistingProductDiscounts,
        'shippingMethods': value.shippingMethods === undefined ? undefined : (value.shippingMethods === null ? null : (value.shippingMethods as Array<any>).map(TargetedShippingMethodToJSON)),
        'shippingZones': value.shippingZones === undefined ? undefined : (value.shippingZones === null ? null : (value.shippingZones as Array<any>).map(TargetedShippingZoneToJSON)),
        'maximumQuantityPerRedemption': value.maximumQuantityPerRedemption,
        'appliesToLeastExpensiveProductsFirst': value.appliesToLeastExpensiveProductsFirst,
    };
}

