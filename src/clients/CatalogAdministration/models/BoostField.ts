/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BoostValue } from './BoostValue';
import {
    BoostValueFromJSON,
    BoostValueFromJSONTyped,
    BoostValueToJSON,
} from './BoostValue';

/**
 * 
 * @export
 * @interface BoostField
 */
export interface BoostField {
    /**
     * 
     * @type {string}
     * @memberof BoostField
     */
    fieldName?: string | null;
    /**
     * 
     * @type {Array<BoostValue>}
     * @memberof BoostField
     */
    valueExpressions?: Array<BoostValue> | null;
}

/**
 * Check if a given object implements the BoostField interface.
 */
export function instanceOfBoostField(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BoostFieldFromJSON(json: any): BoostField {
    return BoostFieldFromJSONTyped(json, false);
}

export function BoostFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): BoostField {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fieldName': !exists(json, 'fieldName') ? undefined : json['fieldName'],
        'valueExpressions': !exists(json, 'valueExpressions') ? undefined : (json['valueExpressions'] === null ? null : (json['valueExpressions'] as Array<any>).map(BoostValueFromJSON)),
    };
}

export function BoostFieldToJSON(value?: BoostField | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fieldName': value.fieldName,
        'valueExpressions': value.valueExpressions === undefined ? undefined : (value.valueExpressions === null ? null : (value.valueExpressions as Array<any>).map(BoostValueToJSON)),
    };
}

