/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Attribute Search Settings. A container for all of the search and indexing settings of an Attribute
 * @export
 * @interface AttributeSearchSettings
 */
export interface AttributeSearchSettings {
    /**
     * Indicates whether the attribute value should be searchable on the public storefront.
     * @type {boolean}
     * @memberof AttributeSearchSettings
     */
    searchableInStorefront?: boolean;
    /**
     * Indicates whether the attribute value should be searchable in the merchant catalog admin.
     * @type {boolean}
     * @memberof AttributeSearchSettings
     */
    searchableInAdmin?: boolean;
    /**
     * If true, the system will index the display value of string attributes instead of the canonical value for searching. 
     * The canonical value will always be used for filtering. Does not apply for for non-string attributes.
     * @type {boolean}
     * @memberof AttributeSearchSettings
     */
    searchDisplayValue?: boolean;
    /**
     * Indicates whether the attribute should be able to be used in filters, facets, and sorting on the public storefront.
     * @type {boolean}
     * @memberof AttributeSearchSettings
     */
    allowFilteringAndSortingInStorefront?: boolean | null;
    /**
     * Indicates whether the attribute value is case sensative for filtering and faceting. This applies to Text Admin entered attributes. 
     * A null value means it is not case sensative
     * @type {boolean}
     * @memberof AttributeSearchSettings
     */
    indexValueWithCase?: boolean | null;
    /**
     * Indicates whether the attribute is indevidually stored as a tokenized field in search for custom term search weight
     * @type {boolean}
     * @memberof AttributeSearchSettings
     */
    customWeightInStorefrontSearch?: boolean | null;
}

/**
 * Check if a given object implements the AttributeSearchSettings interface.
 */
export function instanceOfAttributeSearchSettings(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AttributeSearchSettingsFromJSON(json: any): AttributeSearchSettings {
    return AttributeSearchSettingsFromJSONTyped(json, false);
}

export function AttributeSearchSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttributeSearchSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'searchableInStorefront': !exists(json, 'searchableInStorefront') ? undefined : json['searchableInStorefront'],
        'searchableInAdmin': !exists(json, 'searchableInAdmin') ? undefined : json['searchableInAdmin'],
        'searchDisplayValue': !exists(json, 'searchDisplayValue') ? undefined : json['searchDisplayValue'],
        'allowFilteringAndSortingInStorefront': !exists(json, 'allowFilteringAndSortingInStorefront') ? undefined : json['allowFilteringAndSortingInStorefront'],
        'indexValueWithCase': !exists(json, 'indexValueWithCase') ? undefined : json['indexValueWithCase'],
        'customWeightInStorefrontSearch': !exists(json, 'customWeightInStorefrontSearch') ? undefined : json['customWeightInStorefrontSearch'],
    };
}

export function AttributeSearchSettingsToJSON(value?: AttributeSearchSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'searchableInStorefront': value.searchableInStorefront,
        'searchableInAdmin': value.searchableInAdmin,
        'searchDisplayValue': value.searchDisplayValue,
        'allowFilteringAndSortingInStorefront': value.allowFilteringAndSortingInStorefront,
        'indexValueWithCase': value.indexValueWithCase,
        'customWeightInStorefrontSearch': value.customWeightInStorefrontSearch,
    };
}

