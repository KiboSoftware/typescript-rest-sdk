/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { PriceListEntryExtra } from './PriceListEntryExtra';
import {
    PriceListEntryExtraFromJSON,
    PriceListEntryExtraFromJSONTyped,
    PriceListEntryExtraToJSON,
} from './PriceListEntryExtra';
import type { PriceListEntryPrice } from './PriceListEntryPrice';
import {
    PriceListEntryPriceFromJSON,
    PriceListEntryPriceFromJSONTyped,
    PriceListEntryPriceToJSON,
} from './PriceListEntryPrice';
import type { ProductOption } from './ProductOption';
import {
    ProductOptionFromJSON,
    ProductOptionFromJSONTyped,
    ProductOptionToJSON,
} from './ProductOption';

/**
 * Category
 * @export
 * @interface PriceListEntry
 */
export interface PriceListEntry {
    /**
     * External unique identifier of the PriceList. Must be unique an only contain url sanitized characters. Max length is
     * 50
     * @type {string}
     * @memberof PriceListEntry
     */
    priceListCode?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PriceListEntry
     */
    priceListEntrySequence?: number;
    /**
     * 
     * @type {string}
     * @memberof PriceListEntry
     */
    productCode: string;
    /**
     * 
     * @type {string}
     * @memberof PriceListEntry
     */
    productName?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PriceListEntry
     */
    isVariation?: boolean;
    /**
     * 
     * @type {Array<ProductOption>}
     * @memberof PriceListEntry
     */
    options?: Array<ProductOption> | null;
    /**
     * 
     * @type {string}
     * @memberof PriceListEntry
     */
    currencyCode: string;
    /**
     * 
     * @type {Date}
     * @memberof PriceListEntry
     */
    startDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PriceListEntry
     */
    endDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PriceListEntry
     */
    priceListEntryMode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PriceListEntry
     */
    priceListEntryTypeCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PriceListEntry
     */
    discountsRestrictedMode?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PriceListEntry
     */
    discountsRestricted?: boolean | null;
    /**
     * 
     * @type {Date}
     * @memberof PriceListEntry
     */
    discountsRestrictedStartDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PriceListEntry
     */
    discountsRestrictedEndDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PriceListEntry
     */
    msrpMode?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PriceListEntry
     */
    msrp?: number | null;
    /**
     * 
     * @type {string}
     * @memberof PriceListEntry
     */
    mapMode?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PriceListEntry
     */
    map?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof PriceListEntry
     */
    mapStartDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PriceListEntry
     */
    mapEndDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PriceListEntry
     */
    costMode?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PriceListEntry
     */
    cost?: number | null;
    /**
     * 
     * @type {Array<PriceListEntryPrice>}
     * @memberof PriceListEntry
     */
    priceEntries?: Array<PriceListEntryPrice> | null;
    /**
     * 
     * @type {Array<PriceListEntryExtra>}
     * @memberof PriceListEntry
     */
    extraEntries?: Array<PriceListEntryExtra> | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof PriceListEntry
     */
    auditInfo?: AuditInfo;
}

/**
 * Check if a given object implements the PriceListEntry interface.
 */
export function instanceOfPriceListEntry(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "productCode" in value;
    isInstance = isInstance && "currencyCode" in value;

    return isInstance;
}

export function PriceListEntryFromJSON(json: any): PriceListEntry {
    return PriceListEntryFromJSONTyped(json, false);
}

export function PriceListEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriceListEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'priceListCode': !exists(json, 'priceListCode') ? undefined : json['priceListCode'],
        'priceListEntrySequence': !exists(json, 'priceListEntrySequence') ? undefined : json['priceListEntrySequence'],
        'productCode': json['productCode'],
        'productName': !exists(json, 'productName') ? undefined : json['productName'],
        'isVariation': !exists(json, 'isVariation') ? undefined : json['isVariation'],
        'options': !exists(json, 'options') ? undefined : (json['options'] === null ? null : (json['options'] as Array<any>).map(ProductOptionFromJSON)),
        'currencyCode': json['currencyCode'],
        'startDate': !exists(json, 'startDate') ? undefined : (json['startDate'] === null ? null : new Date(json['startDate'])),
        'endDate': !exists(json, 'endDate') ? undefined : (json['endDate'] === null ? null : new Date(json['endDate'])),
        'priceListEntryMode': !exists(json, 'priceListEntryMode') ? undefined : json['priceListEntryMode'],
        'priceListEntryTypeCode': !exists(json, 'priceListEntryTypeCode') ? undefined : json['priceListEntryTypeCode'],
        'discountsRestrictedMode': !exists(json, 'discountsRestrictedMode') ? undefined : json['discountsRestrictedMode'],
        'discountsRestricted': !exists(json, 'discountsRestricted') ? undefined : json['discountsRestricted'],
        'discountsRestrictedStartDate': !exists(json, 'discountsRestrictedStartDate') ? undefined : (json['discountsRestrictedStartDate'] === null ? null : new Date(json['discountsRestrictedStartDate'])),
        'discountsRestrictedEndDate': !exists(json, 'discountsRestrictedEndDate') ? undefined : (json['discountsRestrictedEndDate'] === null ? null : new Date(json['discountsRestrictedEndDate'])),
        'msrpMode': !exists(json, 'msrpMode') ? undefined : json['msrpMode'],
        'msrp': !exists(json, 'msrp') ? undefined : json['msrp'],
        'mapMode': !exists(json, 'mapMode') ? undefined : json['mapMode'],
        'map': !exists(json, 'map') ? undefined : json['map'],
        'mapStartDate': !exists(json, 'mapStartDate') ? undefined : (json['mapStartDate'] === null ? null : new Date(json['mapStartDate'])),
        'mapEndDate': !exists(json, 'mapEndDate') ? undefined : (json['mapEndDate'] === null ? null : new Date(json['mapEndDate'])),
        'costMode': !exists(json, 'costMode') ? undefined : json['costMode'],
        'cost': !exists(json, 'cost') ? undefined : json['cost'],
        'priceEntries': !exists(json, 'priceEntries') ? undefined : (json['priceEntries'] === null ? null : (json['priceEntries'] as Array<any>).map(PriceListEntryPriceFromJSON)),
        'extraEntries': !exists(json, 'extraEntries') ? undefined : (json['extraEntries'] === null ? null : (json['extraEntries'] as Array<any>).map(PriceListEntryExtraFromJSON)),
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
    };
}

export function PriceListEntryToJSON(value?: PriceListEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'priceListCode': value.priceListCode,
        'priceListEntrySequence': value.priceListEntrySequence,
        'productCode': value.productCode,
        'productName': value.productName,
        'isVariation': value.isVariation,
        'options': value.options === undefined ? undefined : (value.options === null ? null : (value.options as Array<any>).map(ProductOptionToJSON)),
        'currencyCode': value.currencyCode,
        'startDate': value.startDate === undefined ? undefined : (value.startDate === null ? null : value.startDate.toISOString()),
        'endDate': value.endDate === undefined ? undefined : (value.endDate === null ? null : value.endDate.toISOString()),
        'priceListEntryMode': value.priceListEntryMode,
        'priceListEntryTypeCode': value.priceListEntryTypeCode,
        'discountsRestrictedMode': value.discountsRestrictedMode,
        'discountsRestricted': value.discountsRestricted,
        'discountsRestrictedStartDate': value.discountsRestrictedStartDate === undefined ? undefined : (value.discountsRestrictedStartDate === null ? null : value.discountsRestrictedStartDate.toISOString()),
        'discountsRestrictedEndDate': value.discountsRestrictedEndDate === undefined ? undefined : (value.discountsRestrictedEndDate === null ? null : value.discountsRestrictedEndDate.toISOString()),
        'msrpMode': value.msrpMode,
        'msrp': value.msrp,
        'mapMode': value.mapMode,
        'map': value.map,
        'mapStartDate': value.mapStartDate === undefined ? undefined : (value.mapStartDate === null ? null : value.mapStartDate.toISOString()),
        'mapEndDate': value.mapEndDate === undefined ? undefined : (value.mapEndDate === null ? null : value.mapEndDate.toISOString()),
        'costMode': value.costMode,
        'cost': value.cost,
        'priceEntries': value.priceEntries === undefined ? undefined : (value.priceEntries === null ? null : (value.priceEntries as Array<any>).map(PriceListEntryPriceToJSON)),
        'extraEntries': value.extraEntries === undefined ? undefined : (value.extraEntries === null ? null : (value.extraEntries as Array<any>).map(PriceListEntryExtraToJSON)),
        'auditInfo': AuditInfoToJSON(value.auditInfo),
    };
}

