/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductInCatalogPatchAction } from './ProductInCatalogPatchAction';
import {
    ProductInCatalogPatchActionFromJSON,
    ProductInCatalogPatchActionFromJSONTyped,
    ProductInCatalogPatchActionToJSON,
} from './ProductInCatalogPatchAction';

/**
 * List of Mozu.ProductAdmin.Contracts.ProductInCatalogPatchActions to be applied
 * @export
 * @interface QuickEditProductInCatalogActions
 */
export interface QuickEditProductInCatalogActions {
    /**
     * List of Mozu.ProductAdmin.Contracts.ProductPropertyPatchAction actions to perform
     * @type {Array<ProductInCatalogPatchAction>}
     * @memberof QuickEditProductInCatalogActions
     */
    actions?: Array<ProductInCatalogPatchAction> | null;
}

/**
 * Check if a given object implements the QuickEditProductInCatalogActions interface.
 */
export function instanceOfQuickEditProductInCatalogActions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function QuickEditProductInCatalogActionsFromJSON(json: any): QuickEditProductInCatalogActions {
    return QuickEditProductInCatalogActionsFromJSONTyped(json, false);
}

export function QuickEditProductInCatalogActionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuickEditProductInCatalogActions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'actions': !exists(json, 'actions') ? undefined : (json['actions'] === null ? null : (json['actions'] as Array<any>).map(ProductInCatalogPatchActionFromJSON)),
    };
}

export function QuickEditProductInCatalogActionsToJSON(value?: QuickEditProductInCatalogActions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'actions': value.actions === undefined ? undefined : (value.actions === null ? null : (value.actions as Array<any>).map(ProductInCatalogPatchActionToJSON)),
    };
}

