/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FacetSource
 */
export interface FacetSource {
    /**
     * Name of field, or FQN of attribute
     * @type {string}
     * @memberof FacetSource
     */
    id?: string | null;
    /**
     * The type of source field used by the facet. Allowable values are: Element, Attribute. 
     * Must be a valid value for DataType defined in FacetFieldTypeConst.
     * @type {string}
     * @memberof FacetSource
     */
    type?: string | null;
    /**
     * Read-only system-generated label for the source field.
     * @type {string}
     * @memberof FacetSource
     */
    name?: string | null;
    /**
     * Read-only system-generated DataType of the Attribute or Element source field. Will be valid value for DataType defined in DataTypeConst.
     * @type {string}
     * @memberof FacetSource
     */
    dataType?: string | null;
    /**
     * Read-only system-generated indicator of whether the source field supports RangeQuery type facets.
     * @type {boolean}
     * @memberof FacetSource
     */
    allowsRangeQuery?: boolean;
}

/**
 * Check if a given object implements the FacetSource interface.
 */
export function instanceOfFacetSource(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FacetSourceFromJSON(json: any): FacetSource {
    return FacetSourceFromJSONTyped(json, false);
}

export function FacetSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): FacetSource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'dataType': !exists(json, 'dataType') ? undefined : json['dataType'],
        'allowsRangeQuery': !exists(json, 'allowsRangeQuery') ? undefined : json['allowsRangeQuery'],
    };
}

export function FacetSourceToJSON(value?: FacetSource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'name': value.name,
        'dataType': value.dataType,
        'allowsRangeQuery': value.allowsRangeQuery,
    };
}

