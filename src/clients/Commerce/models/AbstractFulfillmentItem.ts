/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AbstractFulfillmentItem
 */
export interface AbstractFulfillmentItem {
    /**
     * Code of the Product to be fulfilled.
     * @type {string}
     * @memberof AbstractFulfillmentItem
     */
    productCode?: string | null;
    /**
     * Quantity of the order item
     * @type {number}
     * @memberof AbstractFulfillmentItem
     */
    quantity?: number;
    /**
     * The type of fulfillment item
     * @type {string}
     * @memberof AbstractFulfillmentItem
     */
    fulfillmentItemType?: string | null;
    /**
     * The line id associated with the fulfillment.
     * @type {number}
     * @memberof AbstractFulfillmentItem
     */
    lineId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof AbstractFulfillmentItem
     */
    optionAttributeFQN?: string | null;
}

/**
 * Check if a given object implements the AbstractFulfillmentItem interface.
 */
export function instanceOfAbstractFulfillmentItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AbstractFulfillmentItemFromJSON(json: any): AbstractFulfillmentItem {
    return AbstractFulfillmentItemFromJSONTyped(json, false);
}

export function AbstractFulfillmentItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AbstractFulfillmentItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'fulfillmentItemType': !exists(json, 'fulfillmentItemType') ? undefined : json['fulfillmentItemType'],
        'lineId': !exists(json, 'lineId') ? undefined : json['lineId'],
        'optionAttributeFQN': !exists(json, 'optionAttributeFQN') ? undefined : json['optionAttributeFQN'],
    };
}

export function AbstractFulfillmentItemToJSON(value?: AbstractFulfillmentItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productCode': value.productCode,
        'quantity': value.quantity,
        'fulfillmentItemType': value.fulfillmentItemType,
        'lineId': value.lineId,
        'optionAttributeFQN': value.optionAttributeFQN,
    };
}

