/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppliedLineItemProductDiscount } from './AppliedLineItemProductDiscount';
import {
    AppliedLineItemProductDiscountFromJSON,
    AppliedLineItemProductDiscountFromJSONTyped,
    AppliedLineItemProductDiscountToJSON,
} from './AppliedLineItemProductDiscount';
import type { AppliedLineItemShippingDiscount } from './AppliedLineItemShippingDiscount';
import {
    AppliedLineItemShippingDiscountFromJSON,
    AppliedLineItemShippingDiscountFromJSONTyped,
    AppliedLineItemShippingDiscountToJSON,
} from './AppliedLineItemShippingDiscount';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { CommerceUnitPrice } from './CommerceUnitPrice';
import {
    CommerceUnitPriceFromJSON,
    CommerceUnitPriceFromJSONTyped,
    CommerceUnitPriceToJSON,
} from './CommerceUnitPrice';
import type { InventoryTags } from './InventoryTags';
import {
    InventoryTagsFromJSON,
    InventoryTagsFromJSONTyped,
    InventoryTagsToJSON,
} from './InventoryTags';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';
import type { SubscriptionInfo } from './SubscriptionInfo';
import {
    SubscriptionInfoFromJSON,
    SubscriptionInfoFromJSONTyped,
    SubscriptionInfoToJSON,
} from './SubscriptionInfo';

/**
 * Details of an item in the shopper's cart, such as the product name, stock count, unit price, discounts, quantity ordered, and total price.
 * @export
 * @interface CartItem
 */
export interface CartItem {
    /**
     * Unique identifier of the item in the cart.
     * @type {string}
     * @memberof CartItem
     */
    id?: string | null;
    /**
     * Location code from which to obtain this item
     * @type {string}
     * @memberof CartItem
     */
    fulfillmentLocationCode?: string | null;
    /**
     * Fulfillment method used to fulfill this item
     * @type {string}
     * @memberof CartItem
     */
    fulfillmentMethod?: string | null;
    /**
     * 
     * @type {SubscriptionInfo}
     * @memberof CartItem
     */
    subscription?: SubscriptionInfo;
    /**
     * Locale code for language that appears in text and descriptions on the site, for example, en_US. 
     * This is not the currency code. Currently only en_US is supported.
     * @type {string}
     * @memberof CartItem
     */
    localeCode?: string | null;
    /**
     * The location where the product is being purchased.. default is null. Products can have different prices
     * by purchaseLocation via custom priceListResolution...
     * @type {string}
     * @memberof CartItem
     */
    purchaseLocation?: string | null;
    /**
     * The line id assigned to the order item. Visible only in the Admin, this is set from the Admin or
     * in CommerceRuntime when a cart is converted to an order.
     * @type {number}
     * @memberof CartItem
     */
    lineId?: number | null;
    /**
     * 
     * @type {Product}
     * @memberof CartItem
     */
    product?: Product;
    /**
     * Number of products ordered.
     * @type {number}
     * @memberof CartItem
     */
    quantity?: number;
    /**
     * If true, the cart item lists a product that can be purchased or fulfilled at regular intervals, for example, monthly billing or a subscription.
     * @type {boolean}
     * @memberof CartItem
     */
    isRecurring?: boolean | null;
    /**
     * Not implemented. If true, the cart item is eligible for tax.
     * @type {boolean}
     * @memberof CartItem
     */
    isTaxable?: boolean | null;
    /**
     * Line item subtotal (quantity multiplied by price) before discounts.
     * @type {number}
     * @memberof CartItem
     */
    subtotal?: number | null;
    /**
     * Line item extended total (quantity multiplied by unit extended price) before discounts.
     * @type {number}
     * @memberof CartItem
     */
    extendedTotal?: number | null;
    /**
     * Line item subtotal (quantity multiplied by price) before discounts.
     * @type {number}
     * @memberof CartItem
     */
    taxableTotal?: number | null;
    /**
     * How much the shopper saves with the applied discount or sale price. This is a negative number.
     * @type {number}
     * @memberof CartItem
     */
    discountTotal?: number | null;
    /**
     * Subtotal minus any discounts.
     * @type {number}
     * @memberof CartItem
     */
    discountedTotal?: number | null;
    /**
     * Total price of taxes that apply to products in this item.
     * @type {number}
     * @memberof CartItem
     */
    itemTaxTotal?: number | null;
    /**
     * Total price of taxes that apply to the shipping of this item.
     * @type {number}
     * @memberof CartItem
     */
    shippingTaxTotal?: number | null;
    /**
     * Total price of shipping that apply to this item.
     * @type {number}
     * @memberof CartItem
     */
    shippingTotal?: number | null;
    /**
     * Handling Amount for this item
     * @type {number}
     * @memberof CartItem
     */
    handlingAmount?: number | null;
    /**
     * Not implemented. Total cost of fees that apply to this item.
     * @type {number}
     * @memberof CartItem
     */
    feeTotal?: number | null;
    /**
     * Total price of this cart item taking into account any discounts.
     * @type {number}
     * @memberof CartItem
     */
    total?: number | null;
    /**
     * 
     * @type {CommerceUnitPrice}
     * @memberof CartItem
     */
    unitPrice?: CommerceUnitPrice;
    /**
     * 
     * @type {AppliedLineItemProductDiscount}
     * @memberof CartItem
     */
    productDiscount?: AppliedLineItemProductDiscount;
    /**
     * A list of discounts applied to the product
     * @type {Array<AppliedLineItemProductDiscount>}
     * @memberof CartItem
     */
    productDiscounts?: Array<AppliedLineItemProductDiscount> | null;
    /**
     * A discount applied to the shipping
     * @type {Array<AppliedLineItemShippingDiscount>}
     * @memberof CartItem
     */
    shippingDiscounts?: Array<AppliedLineItemShippingDiscount> | null;
    /**
     * Custom data for a given vendor set within the commerce process.
     * @type {object}
     * @memberof CartItem
     */
    data?: object | null;
    /**
     * Storage for any additional/custom tax data.
     * @type {object}
     * @memberof CartItem
     */
    taxData?: object | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof CartItem
     */
    auditInfo?: AuditInfo;
    /**
     * Shipping amount before Discounts and adjustments
     * @type {number}
     * @memberof CartItem
     */
    shippingAmountBeforeDiscountsAndAdjustments?: number | null;
    /**
     * Order Level Manual Adjustment applied to this Item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderAdjustment?: number | null;
    /**
     * Order Level Discount applied to this Item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderDiscount?: number | null;
    /**
     * Order Level taxable sub total
     * @type {number}
     * @memberof CartItem
     */
    adjustedLineItemSubtotal?: number | null;
    /**
     * Taxable Subtotal including Weighted Order amounts
     * @type {number}
     * @memberof CartItem
     */
    totalWithoutWeightedShippingAndHandling?: number | null;
    /**
     * Order Level tax applied to this Item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderTax?: number | null;
    /**
     * Order Level Shipping applied to this Item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderShipping?: number | null;
    /**
     * Order Level Shipping discount applied to this Item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderShippingDiscount?: number | null;
    /**
     * Order Level Shipping Manual Adjustment applied to this Item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderShippingManualAdjustment?: number | null;
    /**
     * Order Level Shipping Tax applied to this Item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderShippingTax?: number | null;
    /**
     * Order Level handling fee applied to this item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderHandlingFee?: number | null;
    /**
     * Order Level handling fee tax applied to this item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderHandlingFeeTax?: number | null;
    /**
     * Order Level handling fee discount applied to this item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderHandlingFeeDiscount?: number | null;
    /**
     * Order Level Duty applied to this Item
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderDuty?: number | null;
    /**
     * Line item total with line item, Tax, Weighted Tax with Weighted shipping and handling costs
     * @type {number}
     * @memberof CartItem
     */
    totalWithWeightedShippingAndHandling?: number | null;
    /**
     * Order level handling adjusment that applies to this item.
     * @type {number}
     * @memberof CartItem
     */
    weightedOrderHandlingAdjustment?: number | null;
    /**
     * Track the discoutid from which the item was auto added
     * @type {number}
     * @memberof CartItem
     */
    autoAddDiscountId?: number | null;
    /**
     * Assembly Required for this order item
     * @type {boolean}
     * @memberof CartItem
     */
    isAssemblyRequired?: boolean;
    /**
     * List of Child Item Ids for this order item
     * @type {Array<string>}
     * @memberof CartItem
     */
    childItemIds?: Array<string> | null;
    /**
     * Indicates Parent Item Id for this order item
     * @type {string}
     * @memberof CartItem
     */
    parentItemId?: string | null;
    /**
     * 
     * @type {Array<InventoryTags>}
     * @memberof CartItem
     */
    inventoryTags?: Array<InventoryTags> | null;
    /**
     * 
     * @type {number}
     * @memberof CartItem
     */
    lineItemAdjustment?: number | null;
}

/**
 * Check if a given object implements the CartItem interface.
 */
export function instanceOfCartItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartItemFromJSON(json: any): CartItem {
    return CartItemFromJSONTyped(json, false);
}

export function CartItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'fulfillmentLocationCode': !exists(json, 'fulfillmentLocationCode') ? undefined : json['fulfillmentLocationCode'],
        'fulfillmentMethod': !exists(json, 'fulfillmentMethod') ? undefined : json['fulfillmentMethod'],
        'subscription': !exists(json, 'subscription') ? undefined : SubscriptionInfoFromJSON(json['subscription']),
        'localeCode': !exists(json, 'localeCode') ? undefined : json['localeCode'],
        'purchaseLocation': !exists(json, 'purchaseLocation') ? undefined : json['purchaseLocation'],
        'lineId': !exists(json, 'lineId') ? undefined : json['lineId'],
        'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product']),
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'isRecurring': !exists(json, 'isRecurring') ? undefined : json['isRecurring'],
        'isTaxable': !exists(json, 'isTaxable') ? undefined : json['isTaxable'],
        'subtotal': !exists(json, 'subtotal') ? undefined : json['subtotal'],
        'extendedTotal': !exists(json, 'extendedTotal') ? undefined : json['extendedTotal'],
        'taxableTotal': !exists(json, 'taxableTotal') ? undefined : json['taxableTotal'],
        'discountTotal': !exists(json, 'discountTotal') ? undefined : json['discountTotal'],
        'discountedTotal': !exists(json, 'discountedTotal') ? undefined : json['discountedTotal'],
        'itemTaxTotal': !exists(json, 'itemTaxTotal') ? undefined : json['itemTaxTotal'],
        'shippingTaxTotal': !exists(json, 'shippingTaxTotal') ? undefined : json['shippingTaxTotal'],
        'shippingTotal': !exists(json, 'shippingTotal') ? undefined : json['shippingTotal'],
        'handlingAmount': !exists(json, 'handlingAmount') ? undefined : json['handlingAmount'],
        'feeTotal': !exists(json, 'feeTotal') ? undefined : json['feeTotal'],
        'total': !exists(json, 'total') ? undefined : json['total'],
        'unitPrice': !exists(json, 'unitPrice') ? undefined : CommerceUnitPriceFromJSON(json['unitPrice']),
        'productDiscount': !exists(json, 'productDiscount') ? undefined : AppliedLineItemProductDiscountFromJSON(json['productDiscount']),
        'productDiscounts': !exists(json, 'productDiscounts') ? undefined : (json['productDiscounts'] === null ? null : (json['productDiscounts'] as Array<any>).map(AppliedLineItemProductDiscountFromJSON)),
        'shippingDiscounts': !exists(json, 'shippingDiscounts') ? undefined : (json['shippingDiscounts'] === null ? null : (json['shippingDiscounts'] as Array<any>).map(AppliedLineItemShippingDiscountFromJSON)),
        'data': !exists(json, 'data') ? undefined : json['data'],
        'taxData': !exists(json, 'taxData') ? undefined : json['taxData'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'shippingAmountBeforeDiscountsAndAdjustments': !exists(json, 'shippingAmountBeforeDiscountsAndAdjustments') ? undefined : json['shippingAmountBeforeDiscountsAndAdjustments'],
        'weightedOrderAdjustment': !exists(json, 'weightedOrderAdjustment') ? undefined : json['weightedOrderAdjustment'],
        'weightedOrderDiscount': !exists(json, 'weightedOrderDiscount') ? undefined : json['weightedOrderDiscount'],
        'adjustedLineItemSubtotal': !exists(json, 'adjustedLineItemSubtotal') ? undefined : json['adjustedLineItemSubtotal'],
        'totalWithoutWeightedShippingAndHandling': !exists(json, 'totalWithoutWeightedShippingAndHandling') ? undefined : json['totalWithoutWeightedShippingAndHandling'],
        'weightedOrderTax': !exists(json, 'weightedOrderTax') ? undefined : json['weightedOrderTax'],
        'weightedOrderShipping': !exists(json, 'weightedOrderShipping') ? undefined : json['weightedOrderShipping'],
        'weightedOrderShippingDiscount': !exists(json, 'weightedOrderShippingDiscount') ? undefined : json['weightedOrderShippingDiscount'],
        'weightedOrderShippingManualAdjustment': !exists(json, 'weightedOrderShippingManualAdjustment') ? undefined : json['weightedOrderShippingManualAdjustment'],
        'weightedOrderShippingTax': !exists(json, 'weightedOrderShippingTax') ? undefined : json['weightedOrderShippingTax'],
        'weightedOrderHandlingFee': !exists(json, 'weightedOrderHandlingFee') ? undefined : json['weightedOrderHandlingFee'],
        'weightedOrderHandlingFeeTax': !exists(json, 'weightedOrderHandlingFeeTax') ? undefined : json['weightedOrderHandlingFeeTax'],
        'weightedOrderHandlingFeeDiscount': !exists(json, 'weightedOrderHandlingFeeDiscount') ? undefined : json['weightedOrderHandlingFeeDiscount'],
        'weightedOrderDuty': !exists(json, 'weightedOrderDuty') ? undefined : json['weightedOrderDuty'],
        'totalWithWeightedShippingAndHandling': !exists(json, 'totalWithWeightedShippingAndHandling') ? undefined : json['totalWithWeightedShippingAndHandling'],
        'weightedOrderHandlingAdjustment': !exists(json, 'weightedOrderHandlingAdjustment') ? undefined : json['weightedOrderHandlingAdjustment'],
        'autoAddDiscountId': !exists(json, 'autoAddDiscountId') ? undefined : json['autoAddDiscountId'],
        'isAssemblyRequired': !exists(json, 'isAssemblyRequired') ? undefined : json['isAssemblyRequired'],
        'childItemIds': !exists(json, 'childItemIds') ? undefined : json['childItemIds'],
        'parentItemId': !exists(json, 'parentItemId') ? undefined : json['parentItemId'],
        'inventoryTags': !exists(json, 'inventoryTags') ? undefined : (json['inventoryTags'] === null ? null : (json['inventoryTags'] as Array<any>).map(InventoryTagsFromJSON)),
        'lineItemAdjustment': !exists(json, 'lineItemAdjustment') ? undefined : json['lineItemAdjustment'],
    };
}

export function CartItemToJSON(value?: CartItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'fulfillmentLocationCode': value.fulfillmentLocationCode,
        'fulfillmentMethod': value.fulfillmentMethod,
        'subscription': SubscriptionInfoToJSON(value.subscription),
        'localeCode': value.localeCode,
        'purchaseLocation': value.purchaseLocation,
        'lineId': value.lineId,
        'product': ProductToJSON(value.product),
        'quantity': value.quantity,
        'isRecurring': value.isRecurring,
        'isTaxable': value.isTaxable,
        'subtotal': value.subtotal,
        'extendedTotal': value.extendedTotal,
        'taxableTotal': value.taxableTotal,
        'discountTotal': value.discountTotal,
        'discountedTotal': value.discountedTotal,
        'itemTaxTotal': value.itemTaxTotal,
        'shippingTaxTotal': value.shippingTaxTotal,
        'shippingTotal': value.shippingTotal,
        'handlingAmount': value.handlingAmount,
        'feeTotal': value.feeTotal,
        'total': value.total,
        'unitPrice': CommerceUnitPriceToJSON(value.unitPrice),
        'productDiscount': AppliedLineItemProductDiscountToJSON(value.productDiscount),
        'productDiscounts': value.productDiscounts === undefined ? undefined : (value.productDiscounts === null ? null : (value.productDiscounts as Array<any>).map(AppliedLineItemProductDiscountToJSON)),
        'shippingDiscounts': value.shippingDiscounts === undefined ? undefined : (value.shippingDiscounts === null ? null : (value.shippingDiscounts as Array<any>).map(AppliedLineItemShippingDiscountToJSON)),
        'data': value.data,
        'taxData': value.taxData,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'shippingAmountBeforeDiscountsAndAdjustments': value.shippingAmountBeforeDiscountsAndAdjustments,
        'weightedOrderAdjustment': value.weightedOrderAdjustment,
        'weightedOrderDiscount': value.weightedOrderDiscount,
        'adjustedLineItemSubtotal': value.adjustedLineItemSubtotal,
        'totalWithoutWeightedShippingAndHandling': value.totalWithoutWeightedShippingAndHandling,
        'weightedOrderTax': value.weightedOrderTax,
        'weightedOrderShipping': value.weightedOrderShipping,
        'weightedOrderShippingDiscount': value.weightedOrderShippingDiscount,
        'weightedOrderShippingManualAdjustment': value.weightedOrderShippingManualAdjustment,
        'weightedOrderShippingTax': value.weightedOrderShippingTax,
        'weightedOrderHandlingFee': value.weightedOrderHandlingFee,
        'weightedOrderHandlingFeeTax': value.weightedOrderHandlingFeeTax,
        'weightedOrderHandlingFeeDiscount': value.weightedOrderHandlingFeeDiscount,
        'weightedOrderDuty': value.weightedOrderDuty,
        'totalWithWeightedShippingAndHandling': value.totalWithWeightedShippingAndHandling,
        'weightedOrderHandlingAdjustment': value.weightedOrderHandlingAdjustment,
        'autoAddDiscountId': value.autoAddDiscountId,
        'isAssemblyRequired': value.isAssemblyRequired,
        'childItemIds': value.childItemIds,
        'parentItemId': value.parentItemId,
        'inventoryTags': value.inventoryTags === undefined ? undefined : (value.inventoryTags === null ? null : (value.inventoryTags as Array<any>).map(InventoryTagsToJSON)),
        'lineItemAdjustment': value.lineItemAdjustment,
    };
}

