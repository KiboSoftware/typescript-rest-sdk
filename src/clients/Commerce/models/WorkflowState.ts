/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { FulfillmentTask } from './FulfillmentTask';
import {
    FulfillmentTaskFromJSON,
    FulfillmentTaskFromJSONTyped,
    FulfillmentTaskToJSON,
} from './FulfillmentTask';

/**
 * 
 * @export
 * @interface WorkflowState
 */
export interface WorkflowState {
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowState
     */
    attributes?: { [key: string]: any; } | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof WorkflowState
     */
    auditInfo?: AuditInfo;
    /**
     * 
     * @type {Date}
     * @memberof WorkflowState
     */
    completedDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowState
     */
    processInstanceId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowState
     */
    shipmentState?: string | null;
    /**
     * 
     * @type {Array<FulfillmentTask>}
     * @memberof WorkflowState
     */
    taskList?: Array<FulfillmentTask> | null;
}

/**
 * Check if a given object implements the WorkflowState interface.
 */
export function instanceOfWorkflowState(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WorkflowStateFromJSON(json: any): WorkflowState {
    return WorkflowStateFromJSONTyped(json, false);
}

export function WorkflowStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'completedDate': !exists(json, 'completedDate') ? undefined : (json['completedDate'] === null ? null : new Date(json['completedDate'])),
        'processInstanceId': !exists(json, 'processInstanceId') ? undefined : json['processInstanceId'],
        'shipmentState': !exists(json, 'shipmentState') ? undefined : json['shipmentState'],
        'taskList': !exists(json, 'taskList') ? undefined : (json['taskList'] === null ? null : (json['taskList'] as Array<any>).map(FulfillmentTaskFromJSON)),
    };
}

export function WorkflowStateToJSON(value?: WorkflowState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributes': value.attributes,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'completedDate': value.completedDate === undefined ? undefined : (value.completedDate === null ? null : value.completedDate.toISOString()),
        'processInstanceId': value.processInstanceId,
        'shipmentState': value.shipmentState,
        'taskList': value.taskList === undefined ? undefined : (value.taskList === null ? null : (value.taskList as Array<any>).map(FulfillmentTaskToJSON)),
    };
}

