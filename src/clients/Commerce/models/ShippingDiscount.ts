/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppliedDiscount } from './AppliedDiscount';
import {
    AppliedDiscountFromJSON,
    AppliedDiscountFromJSONTyped,
    AppliedDiscountToJSON,
} from './AppliedDiscount';

/**
 * Value of the shipping discount.
 * @export
 * @interface ShippingDiscount
 */
export interface ShippingDiscount {
    /**
     * Unique identifier of the shipping method discount.
     * @type {string}
     * @memberof ShippingDiscount
     */
    methodCode?: string | null;
    /**
     * 
     * @type {AppliedDiscount}
     * @memberof ShippingDiscount
     */
    discount?: AppliedDiscount;
}

/**
 * Check if a given object implements the ShippingDiscount interface.
 */
export function instanceOfShippingDiscount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ShippingDiscountFromJSON(json: any): ShippingDiscount {
    return ShippingDiscountFromJSONTyped(json, false);
}

export function ShippingDiscountFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShippingDiscount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'methodCode': !exists(json, 'methodCode') ? undefined : json['methodCode'],
        'discount': !exists(json, 'discount') ? undefined : AppliedDiscountFromJSON(json['discount']),
    };
}

export function ShippingDiscountToJSON(value?: ShippingDiscount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'methodCode': value.methodCode,
        'discount': AppliedDiscountToJSON(value.discount),
    };
}

