/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface QuoteAdjustment
 */
export interface QuoteAdjustment {
    /**
     * 
     * @type {number}
     * @memberof QuoteAdjustment
     */
    adjustment?: number | null;
    /**
     * 
     * @type {number}
     * @memberof QuoteAdjustment
     */
    shippingAdjustment?: number | null;
    /**
     * 
     * @type {number}
     * @memberof QuoteAdjustment
     */
    handlingAdjustment?: number | null;
}

/**
 * Check if a given object implements the QuoteAdjustment interface.
 */
export function instanceOfQuoteAdjustment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function QuoteAdjustmentFromJSON(json: any): QuoteAdjustment {
    return QuoteAdjustmentFromJSONTyped(json, false);
}

export function QuoteAdjustmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuoteAdjustment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'adjustment': !exists(json, 'adjustment') ? undefined : json['adjustment'],
        'shippingAdjustment': !exists(json, 'shippingAdjustment') ? undefined : json['shippingAdjustment'],
        'handlingAdjustment': !exists(json, 'handlingAdjustment') ? undefined : json['handlingAdjustment'],
    };
}

export function QuoteAdjustmentToJSON(value?: QuoteAdjustment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'adjustment': value.adjustment,
        'shippingAdjustment': value.shippingAdjustment,
        'handlingAdjustment': value.handlingAdjustment,
    };
}

