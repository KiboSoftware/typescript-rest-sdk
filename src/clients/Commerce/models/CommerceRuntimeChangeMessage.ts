/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A message displayed by the system based on the last  action, for example, when a product price has changed. System-supplied and read-only.
 * @export
 * @interface CommerceRuntimeChangeMessage
 */
export interface CommerceRuntimeChangeMessage {
    /**
     * Unique identifier of the  message. System-supplied. Read-only.
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    id?: string | null;
    /**
     * Correlation Id
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    correlationId?: string | null;
    /**
     * User Id that identifies the user that performed the related change
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    userId?: string | null;
    /**
     * User First Name
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    userFirstName?: string | null;
    /**
     * User Last Name
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    userLastName?: string | null;
    /**
     * User Type (e.g. Shopper, Admin, etc.)
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    userScopeType?: string | null;
    /**
     * App Id that identifies the user that performed the related change
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    appId?: string | null;
    /**
     * App Key
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    appKey?: string | null;
    /**
     * App Name
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    appName?: string | null;
    /**
     * Subject of the message, for example, "Product." System-supplied. Read-only.
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    subjectType?: string | null;
    /**
     * Indicates if the message is related to a success or failure.
     * @type {boolean}
     * @memberof CommerceRuntimeChangeMessage
     */
    success?: boolean | null;
    /**
     * Unique identifier to what the message pertains, which can be a cart item, cart or another generic entity. System-supplied. Read-only.
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    identifier?: string | null;
    /**
     * Text on the subject line of the message, for example, the product name. System-supplied. Read-only.
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    subject?: string | null;
    /**
     * Action applicable to the message. This can be "Increased," when the product price has increased, "Decreased," when the 
     * product price has decreased, and "Invalidated," when the product is no longer available. System-supplied. Read-only.
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    verb?: string | null;
    /**
     * Human readable message. System-supplied. Read-only.
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     */
    message?: string | null;
    /**
     * Data. This property will be a JSON array that will contain 0-N items, when there is 1 item it will still be an array containing only one item. System-supplied. Read-only.
     * @type {any}
     * @memberof CommerceRuntimeChangeMessage
     */
    metadata?: any | null;
    /**
     * Original price of the item. System-supplied. Read-only.
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     * @deprecated
     */
    oldValue?: string | null;
    /**
     * Current price of the item. System-supplied. Read-only.
     * @type {string}
     * @memberof CommerceRuntimeChangeMessage
     * @deprecated
     */
    newValue?: string | null;
    /**
     * Monetary amount that pertains to the change if applicable
     * @type {number}
     * @memberof CommerceRuntimeChangeMessage
     * @deprecated
     */
    amount?: number | null;
    /**
     * When the message was created. System-supplied. Read-only.
     * @type {Date}
     * @memberof CommerceRuntimeChangeMessage
     */
    createDate?: Date | null;
    /**
     * Additional Data. This property will be a Dictionary of objects.
     * @type {{ [key: string]: any; }}
     * @memberof CommerceRuntimeChangeMessage
     */
    attributes?: { [key: string]: any; } | null;
}

/**
 * Check if a given object implements the CommerceRuntimeChangeMessage interface.
 */
export function instanceOfCommerceRuntimeChangeMessage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommerceRuntimeChangeMessageFromJSON(json: any): CommerceRuntimeChangeMessage {
    return CommerceRuntimeChangeMessageFromJSONTyped(json, false);
}

export function CommerceRuntimeChangeMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommerceRuntimeChangeMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'correlationId': !exists(json, 'correlationId') ? undefined : json['correlationId'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'userFirstName': !exists(json, 'userFirstName') ? undefined : json['userFirstName'],
        'userLastName': !exists(json, 'userLastName') ? undefined : json['userLastName'],
        'userScopeType': !exists(json, 'userScopeType') ? undefined : json['userScopeType'],
        'appId': !exists(json, 'appId') ? undefined : json['appId'],
        'appKey': !exists(json, 'appKey') ? undefined : json['appKey'],
        'appName': !exists(json, 'appName') ? undefined : json['appName'],
        'subjectType': !exists(json, 'subjectType') ? undefined : json['subjectType'],
        'success': !exists(json, 'success') ? undefined : json['success'],
        'identifier': !exists(json, 'identifier') ? undefined : json['identifier'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'verb': !exists(json, 'verb') ? undefined : json['verb'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'oldValue': !exists(json, 'oldValue') ? undefined : json['oldValue'],
        'newValue': !exists(json, 'newValue') ? undefined : json['newValue'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'createDate': !exists(json, 'createDate') ? undefined : (json['createDate'] === null ? null : new Date(json['createDate'])),
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
    };
}

export function CommerceRuntimeChangeMessageToJSON(value?: CommerceRuntimeChangeMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'correlationId': value.correlationId,
        'userId': value.userId,
        'userFirstName': value.userFirstName,
        'userLastName': value.userLastName,
        'userScopeType': value.userScopeType,
        'appId': value.appId,
        'appKey': value.appKey,
        'appName': value.appName,
        'subjectType': value.subjectType,
        'success': value.success,
        'identifier': value.identifier,
        'subject': value.subject,
        'verb': value.verb,
        'message': value.message,
        'metadata': value.metadata,
        'oldValue': value.oldValue,
        'newValue': value.newValue,
        'amount': value.amount,
        'createDate': value.createDate === undefined ? undefined : (value.createDate === null ? null : value.createDate.toISOString()),
        'attributes': value.attributes,
    };
}

