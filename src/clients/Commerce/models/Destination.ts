/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Contact } from './Contact';
import {
    ContactFromJSON,
    ContactFromJSONTyped,
    ContactToJSON,
} from './Contact';

/**
 * 
 * @export
 * @interface Destination
 */
export interface Destination {
    /**
     * An identifier for this entry.
     * @type {string}
     * @memberof Destination
     */
    id?: string | null;
    /**
     * 
     * @type {Contact}
     * @memberof Destination
     */
    destinationContact?: Contact;
    /**
     * Indicates that the destination is commercial
     * @type {boolean}
     * @memberof Destination
     */
    isDestinationCommercial?: boolean | null;
    /**
     * Custom data
     * @type {object}
     * @memberof Destination
     */
    data?: object | null;
}

/**
 * Check if a given object implements the Destination interface.
 */
export function instanceOfDestination(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DestinationFromJSON(json: any): Destination {
    return DestinationFromJSONTyped(json, false);
}

export function DestinationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Destination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'destinationContact': !exists(json, 'destinationContact') ? undefined : ContactFromJSON(json['destinationContact']),
        'isDestinationCommercial': !exists(json, 'isDestinationCommercial') ? undefined : json['isDestinationCommercial'],
        'data': !exists(json, 'data') ? undefined : json['data'],
    };
}

export function DestinationToJSON(value?: Destination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'destinationContact': ContactToJSON(value.destinationContact),
        'isDestinationCommercial': value.isDestinationCommercial,
        'data': value.data,
    };
}

