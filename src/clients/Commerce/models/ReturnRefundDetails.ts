/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RefundPaymentAction } from './RefundPaymentAction';
import {
    RefundPaymentActionFromJSON,
    RefundPaymentActionFromJSONTyped,
    RefundPaymentActionToJSON,
} from './RefundPaymentAction';
import type { ReturnItem } from './ReturnItem';
import {
    ReturnItemFromJSON,
    ReturnItemFromJSONTyped,
    ReturnItemToJSON,
} from './ReturnItem';

/**
 * 
 * @export
 * @interface ReturnRefundDetails
 */
export interface ReturnRefundDetails {
    /**
     * 
     * @type {string}
     * @memberof ReturnRefundDetails
     */
    returnId?: string | null;
    /**
     * 
     * @type {Array<RefundPaymentAction>}
     * @memberof ReturnRefundDetails
     */
    refunds?: Array<RefundPaymentAction> | null;
    /**
     * 
     * @type {Array<ReturnItem>}
     * @memberof ReturnRefundDetails
     */
    items?: Array<ReturnItem> | null;
    /**
     * 
     * @type {number}
     * @memberof ReturnRefundDetails
     */
    defaultReturnProcessingFee?: number;
}

/**
 * Check if a given object implements the ReturnRefundDetails interface.
 */
export function instanceOfReturnRefundDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReturnRefundDetailsFromJSON(json: any): ReturnRefundDetails {
    return ReturnRefundDetailsFromJSONTyped(json, false);
}

export function ReturnRefundDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReturnRefundDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'returnId': !exists(json, 'returnId') ? undefined : json['returnId'],
        'refunds': !exists(json, 'refunds') ? undefined : (json['refunds'] === null ? null : (json['refunds'] as Array<any>).map(RefundPaymentActionFromJSON)),
        'items': !exists(json, 'items') ? undefined : (json['items'] === null ? null : (json['items'] as Array<any>).map(ReturnItemFromJSON)),
        'defaultReturnProcessingFee': !exists(json, 'defaultReturnProcessingFee') ? undefined : json['defaultReturnProcessingFee'],
    };
}

export function ReturnRefundDetailsToJSON(value?: ReturnRefundDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'returnId': value.returnId,
        'refunds': value.refunds === undefined ? undefined : (value.refunds === null ? null : (value.refunds as Array<any>).map(RefundPaymentActionToJSON)),
        'items': value.items === undefined ? undefined : (value.items === null ? null : (value.items as Array<any>).map(ReturnItemToJSON)),
        'defaultReturnProcessingFee': value.defaultReturnProcessingFee,
    };
}

