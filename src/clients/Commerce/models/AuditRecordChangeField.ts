/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This will contains actual change in the AuditHistory.
 * @export
 * @interface AuditRecordChangeField
 */
export interface AuditRecordChangeField {
    /**
     * Field/Property name which got Modified.
     * @type {string}
     * @memberof AuditRecordChangeField
     */
    name?: string | null;
    /**
     * Old value of the field.
     * @type {string}
     * @memberof AuditRecordChangeField
     */
    oldValue?: string | null;
    /**
     * Newly updated value of the field.
     * @type {string}
     * @memberof AuditRecordChangeField
     */
    newValue?: string | null;
}

/**
 * Check if a given object implements the AuditRecordChangeField interface.
 */
export function instanceOfAuditRecordChangeField(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuditRecordChangeFieldFromJSON(json: any): AuditRecordChangeField {
    return AuditRecordChangeFieldFromJSONTyped(json, false);
}

export function AuditRecordChangeFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditRecordChangeField {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'oldValue': !exists(json, 'oldValue') ? undefined : json['oldValue'],
        'newValue': !exists(json, 'newValue') ? undefined : json['newValue'],
    };
}

export function AuditRecordChangeFieldToJSON(value?: AuditRecordChangeField | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'oldValue': value.oldValue,
        'newValue': value.newValue,
    };
}

