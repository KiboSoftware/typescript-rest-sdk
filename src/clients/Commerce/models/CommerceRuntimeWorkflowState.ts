/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdminUserAuditInfo } from './AdminUserAuditInfo';
import {
    AdminUserAuditInfoFromJSON,
    AdminUserAuditInfoFromJSONTyped,
    AdminUserAuditInfoToJSON,
} from './AdminUserAuditInfo';
import type { FulfillmentTask } from './FulfillmentTask';
import {
    FulfillmentTaskFromJSON,
    FulfillmentTaskFromJSONTyped,
    FulfillmentTaskToJSON,
} from './FulfillmentTask';

/**
 * 
 * @export
 * @interface CommerceRuntimeWorkflowState
 */
export interface CommerceRuntimeWorkflowState {
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof CommerceRuntimeWorkflowState
     */
    attributes?: { [key: string]: any; } | null;
    /**
     * 
     * @type {AdminUserAuditInfo}
     * @memberof CommerceRuntimeWorkflowState
     */
    auditInfo?: AdminUserAuditInfo;
    /**
     * 
     * @type {Date}
     * @memberof CommerceRuntimeWorkflowState
     */
    completedDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof CommerceRuntimeWorkflowState
     */
    processInstanceId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CommerceRuntimeWorkflowState
     */
    shipmentState?: string | null;
    /**
     * 
     * @type {Array<FulfillmentTask>}
     * @memberof CommerceRuntimeWorkflowState
     */
    taskList?: Array<FulfillmentTask> | null;
}

/**
 * Check if a given object implements the CommerceRuntimeWorkflowState interface.
 */
export function instanceOfCommerceRuntimeWorkflowState(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommerceRuntimeWorkflowStateFromJSON(json: any): CommerceRuntimeWorkflowState {
    return CommerceRuntimeWorkflowStateFromJSONTyped(json, false);
}

export function CommerceRuntimeWorkflowStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommerceRuntimeWorkflowState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AdminUserAuditInfoFromJSON(json['auditInfo']),
        'completedDate': !exists(json, 'completedDate') ? undefined : (json['completedDate'] === null ? null : new Date(json['completedDate'])),
        'processInstanceId': !exists(json, 'processInstanceId') ? undefined : json['processInstanceId'],
        'shipmentState': !exists(json, 'shipmentState') ? undefined : json['shipmentState'],
        'taskList': !exists(json, 'taskList') ? undefined : (json['taskList'] === null ? null : (json['taskList'] as Array<any>).map(FulfillmentTaskFromJSON)),
    };
}

export function CommerceRuntimeWorkflowStateToJSON(value?: CommerceRuntimeWorkflowState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributes': value.attributes,
        'auditInfo': AdminUserAuditInfoToJSON(value.auditInfo),
        'completedDate': value.completedDate === undefined ? undefined : (value.completedDate === null ? null : value.completedDate.toISOString()),
        'processInstanceId': value.processInstanceId,
        'shipmentState': value.shipmentState,
        'taskList': value.taskList === undefined ? undefined : (value.taskList === null ? null : (value.taskList as Array<any>).map(FulfillmentTaskToJSON)),
    };
}

