/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Adjustment } from './Adjustment';
import {
    AdjustmentFromJSON,
    AdjustmentFromJSONTyped,
    AdjustmentToJSON,
} from './Adjustment';
import type { AppliedDiscount } from './AppliedDiscount';
import {
    AppliedDiscountFromJSON,
    AppliedDiscountFromJSONTyped,
    AppliedDiscountToJSON,
} from './AppliedDiscount';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { AuditRecord } from './AuditRecord';
import {
    AuditRecordFromJSON,
    AuditRecordFromJSONTyped,
    AuditRecordToJSON,
} from './AuditRecord';
import type { FulfillmentInfo } from './FulfillmentInfo';
import {
    FulfillmentInfoFromJSON,
    FulfillmentInfoFromJSONTyped,
    FulfillmentInfoToJSON,
} from './FulfillmentInfo';
import type { InvalidCoupon } from './InvalidCoupon';
import {
    InvalidCouponFromJSON,
    InvalidCouponFromJSONTyped,
    InvalidCouponToJSON,
} from './InvalidCoupon';
import type { OrderItem } from './OrderItem';
import {
    OrderItemFromJSON,
    OrderItemFromJSONTyped,
    OrderItemToJSON,
} from './OrderItem';
import type { QuoteComment } from './QuoteComment';
import {
    QuoteCommentFromJSON,
    QuoteCommentFromJSONTyped,
    QuoteCommentToJSON,
} from './QuoteComment';
import type { ShippingDiscount } from './ShippingDiscount';
import {
    ShippingDiscountFromJSON,
    ShippingDiscountFromJSONTyped,
    ShippingDiscountToJSON,
} from './ShippingDiscount';

/**
 * 
 * @export
 * @interface Quote
 */
export interface Quote {
    /**
     * Unique identifier.
     * @type {string}
     * @memberof Quote
     */
    id?: string | null;
    /**
     * Name of the quote
     * @type {string}
     * @memberof Quote
     */
    name?: string | null;
    /**
     * Unique identifier of the Site.
     * @type {number}
     * @memberof Quote
     */
    siteId?: number;
    /**
     * Unique identifier of the Tenant.
     * @type {number}
     * @memberof Quote
     */
    tenantId?: number;
    /**
     * Auto generated number that is assigned to the quote when creation.
     * @type {number}
     * @memberof Quote
     */
    number?: number | null;
    /**
     * When the customer placed (submitted) the Quote.
     * @type {Date}
     * @memberof Quote
     */
    submittedDate?: Date | null;
    /**
     * List of items in the Quote.
     * @type {Array<OrderItem>}
     * @memberof Quote
     */
    items?: Array<OrderItem> | null;
    /**
     * User modified Audit History
     * @type {Array<AuditRecord>}
     * @memberof Quote
     */
    auditHistory?: Array<AuditRecord> | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof Quote
     */
    auditInfo?: AuditInfo;
    /**
     * Comments on a quote
     * @type {Array<QuoteComment>}
     * @memberof Quote
     */
    comments?: Array<QuoteComment> | null;
    /**
     * When the quote will no longer be active. That is, the quote is considered abandoned. 
     * Date in UTC Date/Time.
     * @type {Date}
     * @memberof Quote
     */
    expirationDate?: Date | null;
    /**
     * 
     * @type {FulfillmentInfo}
     * @memberof Quote
     */
    fulfillmentInfo?: FulfillmentInfo;
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    userId?: string | null;
    /**
     * Unique identifier of the customer account.
     * @type {number}
     * @memberof Quote
     */
    customerAccountId?: number | null;
    /**
     * Email address for checkout
     * @type {string}
     * @memberof Quote
     */
    email?: string | null;
    /**
     * The customers tax ID. If Customer Account ID exists in the system, will set this.
     * @type {string}
     * @memberof Quote
     */
    readonly customerTaxId?: string | null;
    /**
     * Unique identifier of the customer account.
     * @type {boolean}
     * @memberof Quote
     */
    readonly isTaxExempt?: boolean | null;
    /**
     * ISO Currency Code.
     * @type {string}
     * @memberof Quote
     */
    currencyCode?: string | null;
    /**
     * Pricelist code for the checkout
     * @type {string}
     * @memberof Quote
     */
    priceListCode?: string | null;
    /**
     * Custom data for a given vendor set within the commerce process.
     * @type {object}
     * @memberof Quote
     */
    data?: object | null;
    /**
     * Storage for any additional/custom tax data.
     * @type {object}
     * @memberof Quote
     */
    taxData?: object | null;
    /**
     * Unique identifier of the channel for this item.
     * @type {string}
     * @memberof Quote
     */
    channelCode?: string | null;
    /**
     * Identifies the location at which the order was placed if the order was placed externally.
     * @type {string}
     * @memberof Quote
     */
    locationCode?: string | null;
    /**
     * IP address of the user placing the order. (User or customer?)
     * @type {string}
     * @memberof Quote
     */
    ipAddress?: string | null;
    /**
     * Source device of the user placing the order. (User or customer?)
     * @type {string}
     * @memberof Quote
     */
    sourceDevice?: string | null;
    /**
     * Identifies the Visit ID that was current when the order was placed or when the cart was last updated.
     * @type {string}
     * @memberof Quote
     */
    visitId?: string | null;
    /**
     * Identifies the web session used to place the order or last update the cart.
     * @type {string}
     * @memberof Quote
     */
    webSessionId?: string | null;
    /**
     * Determines the interaction type that a customer will use to create this object.
     * Valid values are: Website, Store, Call, Unknown
     * @type {string}
     * @memberof Quote
     */
    customerInteractionType?: string | null;
    /**
     * 
     * @type {Array<AppliedDiscount>}
     * @memberof Quote
     */
    orderDiscounts?: Array<AppliedDiscount> | null;
    /**
     * Subtotal before any coupon codes, taxes, fees, etc.
     * @type {number}
     * @memberof Quote
     */
    subTotal?: number;
    /**
     * The total value of item-level product discounts.
     * @type {number}
     * @memberof Quote
     */
    itemLevelProductDiscountTotal?: number;
    /**
     * The total value of order-level (group-level) product discounts.
     * @type {number}
     * @memberof Quote
     */
    orderLevelProductDiscountTotal?: number;
    /**
     * Total tax on products.
     * @type {number}
     * @memberof Quote
     */
    itemTaxTotal?: number;
    /**
     * 
     * @type {Adjustment}
     * @memberof Quote
     */
    adjustment?: Adjustment;
    /**
     * The total product cost, accounting for discounts and tax.
     * @type {number}
     * @memberof Quote
     */
    itemTotal?: number;
    /**
     * Final total
     * @type {number}
     * @memberof Quote
     */
    total?: number;
    /**
     * 
     * @type {Array<ShippingDiscount>}
     * @memberof Quote
     */
    shippingDiscounts?: Array<ShippingDiscount> | null;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    itemLevelShippingDiscountTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    orderLevelShippingDiscountTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    shippingAmount?: number;
    /**
     * 
     * @type {Adjustment}
     * @memberof Quote
     */
    shippingAdjustment?: Adjustment;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    shippingSubTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    shippingTax?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    shippingTaxTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    shippingTotal?: number;
    /**
     * 
     * @type {Array<AppliedDiscount>}
     * @memberof Quote
     */
    handlingDiscounts?: Array<AppliedDiscount> | null;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    itemLevelHandlingDiscountTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    orderLevelHandlingDiscountTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    handlingAmount?: number | null;
    /**
     * 
     * @type {Adjustment}
     * @memberof Quote
     */
    handlingAdjustment?: Adjustment;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    handlingSubTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    handlingTax?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    handlingTaxTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    handlingTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    dutyAmount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    dutyTotal?: number;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    feeTotal?: number;
    /**
     * Is this quote a draft
     * @type {boolean}
     * @memberof Quote
     */
    isDraft?: boolean;
    /**
     * Does this quote have a draft
     * @type {boolean}
     * @memberof Quote
     */
    hasDraft?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    status?: string | null;
    /**
     * Coupon codes associated with this Quote.
     * @type {Array<string>}
     * @memberof Quote
     */
    couponCodes?: Array<string> | null;
    /**
     * A list of invalid coupons that were attempted on the quote
     * @type {Array<InvalidCoupon>}
     * @memberof Quote
     */
    invalidCoupons?: Array<InvalidCoupon> | null;
}

/**
 * Check if a given object implements the Quote interface.
 */
export function instanceOfQuote(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function QuoteFromJSON(json: any): Quote {
    return QuoteFromJSONTyped(json, false);
}

export function QuoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Quote {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'siteId': !exists(json, 'siteId') ? undefined : json['siteId'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'submittedDate': !exists(json, 'submittedDate') ? undefined : (json['submittedDate'] === null ? null : new Date(json['submittedDate'])),
        'items': !exists(json, 'items') ? undefined : (json['items'] === null ? null : (json['items'] as Array<any>).map(OrderItemFromJSON)),
        'auditHistory': !exists(json, 'auditHistory') ? undefined : (json['auditHistory'] === null ? null : (json['auditHistory'] as Array<any>).map(AuditRecordFromJSON)),
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'comments': !exists(json, 'comments') ? undefined : (json['comments'] === null ? null : (json['comments'] as Array<any>).map(QuoteCommentFromJSON)),
        'expirationDate': !exists(json, 'expirationDate') ? undefined : (json['expirationDate'] === null ? null : new Date(json['expirationDate'])),
        'fulfillmentInfo': !exists(json, 'fulfillmentInfo') ? undefined : FulfillmentInfoFromJSON(json['fulfillmentInfo']),
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'customerAccountId': !exists(json, 'customerAccountId') ? undefined : json['customerAccountId'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'customerTaxId': !exists(json, 'customerTaxId') ? undefined : json['customerTaxId'],
        'isTaxExempt': !exists(json, 'isTaxExempt') ? undefined : json['isTaxExempt'],
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
        'priceListCode': !exists(json, 'priceListCode') ? undefined : json['priceListCode'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'taxData': !exists(json, 'taxData') ? undefined : json['taxData'],
        'channelCode': !exists(json, 'channelCode') ? undefined : json['channelCode'],
        'locationCode': !exists(json, 'locationCode') ? undefined : json['locationCode'],
        'ipAddress': !exists(json, 'ipAddress') ? undefined : json['ipAddress'],
        'sourceDevice': !exists(json, 'sourceDevice') ? undefined : json['sourceDevice'],
        'visitId': !exists(json, 'visitId') ? undefined : json['visitId'],
        'webSessionId': !exists(json, 'webSessionId') ? undefined : json['webSessionId'],
        'customerInteractionType': !exists(json, 'customerInteractionType') ? undefined : json['customerInteractionType'],
        'orderDiscounts': !exists(json, 'orderDiscounts') ? undefined : (json['orderDiscounts'] === null ? null : (json['orderDiscounts'] as Array<any>).map(AppliedDiscountFromJSON)),
        'subTotal': !exists(json, 'subTotal') ? undefined : json['subTotal'],
        'itemLevelProductDiscountTotal': !exists(json, 'itemLevelProductDiscountTotal') ? undefined : json['itemLevelProductDiscountTotal'],
        'orderLevelProductDiscountTotal': !exists(json, 'orderLevelProductDiscountTotal') ? undefined : json['orderLevelProductDiscountTotal'],
        'itemTaxTotal': !exists(json, 'itemTaxTotal') ? undefined : json['itemTaxTotal'],
        'adjustment': !exists(json, 'adjustment') ? undefined : AdjustmentFromJSON(json['adjustment']),
        'itemTotal': !exists(json, 'itemTotal') ? undefined : json['itemTotal'],
        'total': !exists(json, 'total') ? undefined : json['total'],
        'shippingDiscounts': !exists(json, 'shippingDiscounts') ? undefined : (json['shippingDiscounts'] === null ? null : (json['shippingDiscounts'] as Array<any>).map(ShippingDiscountFromJSON)),
        'itemLevelShippingDiscountTotal': !exists(json, 'itemLevelShippingDiscountTotal') ? undefined : json['itemLevelShippingDiscountTotal'],
        'orderLevelShippingDiscountTotal': !exists(json, 'orderLevelShippingDiscountTotal') ? undefined : json['orderLevelShippingDiscountTotal'],
        'shippingAmount': !exists(json, 'shippingAmount') ? undefined : json['shippingAmount'],
        'shippingAdjustment': !exists(json, 'shippingAdjustment') ? undefined : AdjustmentFromJSON(json['shippingAdjustment']),
        'shippingSubTotal': !exists(json, 'shippingSubTotal') ? undefined : json['shippingSubTotal'],
        'shippingTax': !exists(json, 'shippingTax') ? undefined : json['shippingTax'],
        'shippingTaxTotal': !exists(json, 'shippingTaxTotal') ? undefined : json['shippingTaxTotal'],
        'shippingTotal': !exists(json, 'shippingTotal') ? undefined : json['shippingTotal'],
        'handlingDiscounts': !exists(json, 'handlingDiscounts') ? undefined : (json['handlingDiscounts'] === null ? null : (json['handlingDiscounts'] as Array<any>).map(AppliedDiscountFromJSON)),
        'itemLevelHandlingDiscountTotal': !exists(json, 'itemLevelHandlingDiscountTotal') ? undefined : json['itemLevelHandlingDiscountTotal'],
        'orderLevelHandlingDiscountTotal': !exists(json, 'orderLevelHandlingDiscountTotal') ? undefined : json['orderLevelHandlingDiscountTotal'],
        'handlingAmount': !exists(json, 'handlingAmount') ? undefined : json['handlingAmount'],
        'handlingAdjustment': !exists(json, 'handlingAdjustment') ? undefined : AdjustmentFromJSON(json['handlingAdjustment']),
        'handlingSubTotal': !exists(json, 'handlingSubTotal') ? undefined : json['handlingSubTotal'],
        'handlingTax': !exists(json, 'handlingTax') ? undefined : json['handlingTax'],
        'handlingTaxTotal': !exists(json, 'handlingTaxTotal') ? undefined : json['handlingTaxTotal'],
        'handlingTotal': !exists(json, 'handlingTotal') ? undefined : json['handlingTotal'],
        'dutyAmount': !exists(json, 'dutyAmount') ? undefined : json['dutyAmount'],
        'dutyTotal': !exists(json, 'dutyTotal') ? undefined : json['dutyTotal'],
        'feeTotal': !exists(json, 'feeTotal') ? undefined : json['feeTotal'],
        'isDraft': !exists(json, 'isDraft') ? undefined : json['isDraft'],
        'hasDraft': !exists(json, 'hasDraft') ? undefined : json['hasDraft'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'couponCodes': !exists(json, 'couponCodes') ? undefined : json['couponCodes'],
        'invalidCoupons': !exists(json, 'invalidCoupons') ? undefined : (json['invalidCoupons'] === null ? null : (json['invalidCoupons'] as Array<any>).map(InvalidCouponFromJSON)),
    };
}

export function QuoteToJSON(value?: Quote | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'siteId': value.siteId,
        'tenantId': value.tenantId,
        'number': value.number,
        'submittedDate': value.submittedDate === undefined ? undefined : (value.submittedDate === null ? null : value.submittedDate.toISOString()),
        'items': value.items === undefined ? undefined : (value.items === null ? null : (value.items as Array<any>).map(OrderItemToJSON)),
        'auditHistory': value.auditHistory === undefined ? undefined : (value.auditHistory === null ? null : (value.auditHistory as Array<any>).map(AuditRecordToJSON)),
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'comments': value.comments === undefined ? undefined : (value.comments === null ? null : (value.comments as Array<any>).map(QuoteCommentToJSON)),
        'expirationDate': value.expirationDate === undefined ? undefined : (value.expirationDate === null ? null : value.expirationDate.toISOString()),
        'fulfillmentInfo': FulfillmentInfoToJSON(value.fulfillmentInfo),
        'userId': value.userId,
        'customerAccountId': value.customerAccountId,
        'email': value.email,
        'currencyCode': value.currencyCode,
        'priceListCode': value.priceListCode,
        'data': value.data,
        'taxData': value.taxData,
        'channelCode': value.channelCode,
        'locationCode': value.locationCode,
        'ipAddress': value.ipAddress,
        'sourceDevice': value.sourceDevice,
        'visitId': value.visitId,
        'webSessionId': value.webSessionId,
        'customerInteractionType': value.customerInteractionType,
        'orderDiscounts': value.orderDiscounts === undefined ? undefined : (value.orderDiscounts === null ? null : (value.orderDiscounts as Array<any>).map(AppliedDiscountToJSON)),
        'subTotal': value.subTotal,
        'itemLevelProductDiscountTotal': value.itemLevelProductDiscountTotal,
        'orderLevelProductDiscountTotal': value.orderLevelProductDiscountTotal,
        'itemTaxTotal': value.itemTaxTotal,
        'adjustment': AdjustmentToJSON(value.adjustment),
        'itemTotal': value.itemTotal,
        'total': value.total,
        'shippingDiscounts': value.shippingDiscounts === undefined ? undefined : (value.shippingDiscounts === null ? null : (value.shippingDiscounts as Array<any>).map(ShippingDiscountToJSON)),
        'itemLevelShippingDiscountTotal': value.itemLevelShippingDiscountTotal,
        'orderLevelShippingDiscountTotal': value.orderLevelShippingDiscountTotal,
        'shippingAmount': value.shippingAmount,
        'shippingAdjustment': AdjustmentToJSON(value.shippingAdjustment),
        'shippingSubTotal': value.shippingSubTotal,
        'shippingTax': value.shippingTax,
        'shippingTaxTotal': value.shippingTaxTotal,
        'shippingTotal': value.shippingTotal,
        'handlingDiscounts': value.handlingDiscounts === undefined ? undefined : (value.handlingDiscounts === null ? null : (value.handlingDiscounts as Array<any>).map(AppliedDiscountToJSON)),
        'itemLevelHandlingDiscountTotal': value.itemLevelHandlingDiscountTotal,
        'orderLevelHandlingDiscountTotal': value.orderLevelHandlingDiscountTotal,
        'handlingAmount': value.handlingAmount,
        'handlingAdjustment': AdjustmentToJSON(value.handlingAdjustment),
        'handlingSubTotal': value.handlingSubTotal,
        'handlingTax': value.handlingTax,
        'handlingTaxTotal': value.handlingTaxTotal,
        'handlingTotal': value.handlingTotal,
        'dutyAmount': value.dutyAmount,
        'dutyTotal': value.dutyTotal,
        'feeTotal': value.feeTotal,
        'isDraft': value.isDraft,
        'hasDraft': value.hasDraft,
        'status': value.status,
        'couponCodes': value.couponCodes,
        'invalidCoupons': value.invalidCoupons === undefined ? undefined : (value.invalidCoupons === null ? null : (value.invalidCoupons as Array<any>).map(InvalidCouponToJSON)),
    };
}

