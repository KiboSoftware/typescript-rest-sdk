/* tslint:disable */
/* eslint-disable */
/**
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppeasementReason } from './AppeasementReason';
import {
    AppeasementReasonFromJSON,
    AppeasementReasonFromJSONTyped,
    AppeasementReasonToJSON,
} from './AppeasementReason';

/**
 * 
 * @export
 * @interface ShipmentAdjustment
 */
export interface ShipmentAdjustment {
    /**
     * 
     * @type {number}
     * @memberof ShipmentAdjustment
     */
    itemAdjustment?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ShipmentAdjustment
     */
    itemTaxAdjustment?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ShipmentAdjustment
     */
    shippingAdjustment?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ShipmentAdjustment
     */
    shippingTaxAdjustment?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ShipmentAdjustment
     */
    handlingAdjustment?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ShipmentAdjustment
     */
    handlingTaxAdjustment?: number | null;
    /**
     * 
     * @type {AppeasementReason}
     * @memberof ShipmentAdjustment
     */
    appeasementReason?: AppeasementReason;
}

/**
 * Check if a given object implements the ShipmentAdjustment interface.
 */
export function instanceOfShipmentAdjustment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ShipmentAdjustmentFromJSON(json: any): ShipmentAdjustment {
    return ShipmentAdjustmentFromJSONTyped(json, false);
}

export function ShipmentAdjustmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShipmentAdjustment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'itemAdjustment': !exists(json, 'itemAdjustment') ? undefined : json['itemAdjustment'],
        'itemTaxAdjustment': !exists(json, 'itemTaxAdjustment') ? undefined : json['itemTaxAdjustment'],
        'shippingAdjustment': !exists(json, 'shippingAdjustment') ? undefined : json['shippingAdjustment'],
        'shippingTaxAdjustment': !exists(json, 'shippingTaxAdjustment') ? undefined : json['shippingTaxAdjustment'],
        'handlingAdjustment': !exists(json, 'handlingAdjustment') ? undefined : json['handlingAdjustment'],
        'handlingTaxAdjustment': !exists(json, 'handlingTaxAdjustment') ? undefined : json['handlingTaxAdjustment'],
        'appeasementReason': !exists(json, 'appeasementReason') ? undefined : AppeasementReasonFromJSON(json['appeasementReason']),
    };
}

export function ShipmentAdjustmentToJSON(value?: ShipmentAdjustment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'itemAdjustment': value.itemAdjustment,
        'itemTaxAdjustment': value.itemTaxAdjustment,
        'shippingAdjustment': value.shippingAdjustment,
        'shippingTaxAdjustment': value.shippingTaxAdjustment,
        'handlingAdjustment': value.handlingAdjustment,
        'handlingTaxAdjustment': value.handlingTaxAdjustment,
        'appeasementReason': AppeasementReasonToJSON(value.appeasementReason),
    };
}

