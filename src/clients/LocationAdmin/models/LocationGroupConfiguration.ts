/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Location Admin Service
 * OpenAPI Spec for Kibo Location Admin Service
 *
 * The version of the OpenAPI document: v1_admin
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { BoxType } from './BoxType';
import {
    BoxTypeFromJSON,
    BoxTypeFromJSONTyped,
    BoxTypeToJSON,
} from './BoxType';
import type { BpmConfiguration } from './BpmConfiguration';
import {
    BpmConfigurationFromJSON,
    BpmConfigurationFromJSONTyped,
    BpmConfigurationToJSON,
} from './BpmConfiguration';
import type { Carrier } from './Carrier';
import {
    CarrierFromJSON,
    CarrierFromJSONTyped,
    CarrierToJSON,
} from './Carrier';
import type { LocationAttribute } from './LocationAttribute';
import {
    LocationAttributeFromJSON,
    LocationAttributeFromJSONTyped,
    LocationAttributeToJSON,
} from './LocationAttribute';
import type { PackageSettings } from './PackageSettings';
import {
    PackageSettingsFromJSON,
    PackageSettingsFromJSONTyped,
    PackageSettingsToJSON,
} from './PackageSettings';

/**
 * 
 * @export
 * @interface LocationGroupConfiguration
 */
export interface LocationGroupConfiguration {
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    tenantId?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    siteId?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    locationGroupId?: number;
    /**
     * 
     * @type {string}
     * @memberof LocationGroupConfiguration
     */
    locationGroupCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LocationGroupConfiguration
     */
    customerFailedToPickupAfterAction?: string | null;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    customerFailedToPickupDeadline?: number | null;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    sendCustomerPickupReminder?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    enableForSTH?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    enableForISPU?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    enableAdvancedOptionForPickWaveCreation?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    maximumNumberOfOrdersInPickWave?: number | null;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    defaultNumberOfOrdersInPickWave?: number | null;
    /**
     * 
     * @type {string}
     * @memberof LocationGroupConfiguration
     */
    pickWavePrintFormat?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof LocationGroupConfiguration
     */
    closePickWavePermissions?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    wmsEnabled?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    enableScanningOfUpcForShipToHome?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    allowReturns?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    returnRefundReduction?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    defaultReturnRefundReductionAmount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    maximumReturnRefundReductionAmount?: number | null;
    /**
     * 
     * @type {string}
     * @memberof LocationGroupConfiguration
     */
    defaultCarrier?: string | null;
    /**
     * 
     * @type {Array<Carrier>}
     * @memberof LocationGroupConfiguration
     */
    carriers?: Array<Carrier> | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    printReturnLabel?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof LocationGroupConfiguration
     */
    defaultPrinterType?: string | null;
    /**
     * 
     * @type {Array<BoxType>}
     * @memberof LocationGroupConfiguration
     */
    boxTypes?: Array<BoxType> | null;
    /**
     * 
     * @type {Array<LocationAttribute>}
     * @memberof LocationGroupConfiguration
     */
    attributes?: Array<LocationAttribute> | null;
    /**
     * 
     * @type {Array<BpmConfiguration>}
     * @memberof LocationGroupConfiguration
     */
    bpmConfigurations?: Array<BpmConfiguration> | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof LocationGroupConfiguration
     */
    auditInfo?: AuditInfo;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    autoPackingListPopup?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    blockPartialStock?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    defaultMaxNumberOfShipmentsInPickWave?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    displayProductImagesInPickWaveDetails?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    enablePnpForSTH?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    enablePnpForBOPIS?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof LocationGroupConfiguration
     */
    blockPartialCancel?: boolean | null;
    /**
     * 
     * @type {PackageSettings}
     * @memberof LocationGroupConfiguration
     */
    packageSettings?: PackageSettings;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupConfiguration
     */
    maxNumberOfPackingSlipsByGroup?: number | null;
}

/**
 * Check if a given object implements the LocationGroupConfiguration interface.
 */
export function instanceOfLocationGroupConfiguration(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LocationGroupConfigurationFromJSON(json: any): LocationGroupConfiguration {
    return LocationGroupConfigurationFromJSONTyped(json, false);
}

export function LocationGroupConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationGroupConfiguration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'siteId': !exists(json, 'siteId') ? undefined : json['siteId'],
        'locationGroupId': !exists(json, 'locationGroupId') ? undefined : json['locationGroupId'],
        'locationGroupCode': !exists(json, 'locationGroupCode') ? undefined : json['locationGroupCode'],
        'customerFailedToPickupAfterAction': !exists(json, 'customerFailedToPickupAfterAction') ? undefined : json['customerFailedToPickupAfterAction'],
        'customerFailedToPickupDeadline': !exists(json, 'customerFailedToPickupDeadline') ? undefined : json['customerFailedToPickupDeadline'],
        'sendCustomerPickupReminder': !exists(json, 'sendCustomerPickupReminder') ? undefined : json['sendCustomerPickupReminder'],
        'enableForSTH': !exists(json, 'enableForSTH') ? undefined : json['enableForSTH'],
        'enableForISPU': !exists(json, 'enableForISPU') ? undefined : json['enableForISPU'],
        'enableAdvancedOptionForPickWaveCreation': !exists(json, 'enableAdvancedOptionForPickWaveCreation') ? undefined : json['enableAdvancedOptionForPickWaveCreation'],
        'maximumNumberOfOrdersInPickWave': !exists(json, 'maximumNumberOfOrdersInPickWave') ? undefined : json['maximumNumberOfOrdersInPickWave'],
        'defaultNumberOfOrdersInPickWave': !exists(json, 'defaultNumberOfOrdersInPickWave') ? undefined : json['defaultNumberOfOrdersInPickWave'],
        'pickWavePrintFormat': !exists(json, 'pickWavePrintFormat') ? undefined : json['pickWavePrintFormat'],
        'closePickWavePermissions': !exists(json, 'closePickWavePermissions') ? undefined : json['closePickWavePermissions'],
        'wmsEnabled': !exists(json, 'wmsEnabled') ? undefined : json['wmsEnabled'],
        'enableScanningOfUpcForShipToHome': !exists(json, 'enableScanningOfUpcForShipToHome') ? undefined : json['enableScanningOfUpcForShipToHome'],
        'allowReturns': !exists(json, 'allowReturns') ? undefined : json['allowReturns'],
        'returnRefundReduction': !exists(json, 'returnRefundReduction') ? undefined : json['returnRefundReduction'],
        'defaultReturnRefundReductionAmount': !exists(json, 'defaultReturnRefundReductionAmount') ? undefined : json['defaultReturnRefundReductionAmount'],
        'maximumReturnRefundReductionAmount': !exists(json, 'maximumReturnRefundReductionAmount') ? undefined : json['maximumReturnRefundReductionAmount'],
        'defaultCarrier': !exists(json, 'defaultCarrier') ? undefined : json['defaultCarrier'],
        'carriers': !exists(json, 'carriers') ? undefined : (json['carriers'] === null ? null : (json['carriers'] as Array<any>).map(CarrierFromJSON)),
        'printReturnLabel': !exists(json, 'printReturnLabel') ? undefined : json['printReturnLabel'],
        'defaultPrinterType': !exists(json, 'defaultPrinterType') ? undefined : json['defaultPrinterType'],
        'boxTypes': !exists(json, 'boxTypes') ? undefined : (json['boxTypes'] === null ? null : (json['boxTypes'] as Array<any>).map(BoxTypeFromJSON)),
        'attributes': !exists(json, 'attributes') ? undefined : (json['attributes'] === null ? null : (json['attributes'] as Array<any>).map(LocationAttributeFromJSON)),
        'bpmConfigurations': !exists(json, 'bpmConfigurations') ? undefined : (json['bpmConfigurations'] === null ? null : (json['bpmConfigurations'] as Array<any>).map(BpmConfigurationFromJSON)),
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'autoPackingListPopup': !exists(json, 'autoPackingListPopup') ? undefined : json['autoPackingListPopup'],
        'blockPartialStock': !exists(json, 'blockPartialStock') ? undefined : json['blockPartialStock'],
        'defaultMaxNumberOfShipmentsInPickWave': !exists(json, 'defaultMaxNumberOfShipmentsInPickWave') ? undefined : json['defaultMaxNumberOfShipmentsInPickWave'],
        'displayProductImagesInPickWaveDetails': !exists(json, 'displayProductImagesInPickWaveDetails') ? undefined : json['displayProductImagesInPickWaveDetails'],
        'enablePnpForSTH': !exists(json, 'enablePnpForSTH') ? undefined : json['enablePnpForSTH'],
        'enablePnpForBOPIS': !exists(json, 'enablePnpForBOPIS') ? undefined : json['enablePnpForBOPIS'],
        'blockPartialCancel': !exists(json, 'blockPartialCancel') ? undefined : json['blockPartialCancel'],
        'packageSettings': !exists(json, 'packageSettings') ? undefined : PackageSettingsFromJSON(json['packageSettings']),
        'maxNumberOfPackingSlipsByGroup': !exists(json, 'maxNumberOfPackingSlipsByGroup') ? undefined : json['maxNumberOfPackingSlipsByGroup'],
    };
}

export function LocationGroupConfigurationToJSON(value?: LocationGroupConfiguration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tenantId': value.tenantId,
        'siteId': value.siteId,
        'locationGroupId': value.locationGroupId,
        'locationGroupCode': value.locationGroupCode,
        'customerFailedToPickupAfterAction': value.customerFailedToPickupAfterAction,
        'customerFailedToPickupDeadline': value.customerFailedToPickupDeadline,
        'sendCustomerPickupReminder': value.sendCustomerPickupReminder,
        'enableForSTH': value.enableForSTH,
        'enableForISPU': value.enableForISPU,
        'enableAdvancedOptionForPickWaveCreation': value.enableAdvancedOptionForPickWaveCreation,
        'maximumNumberOfOrdersInPickWave': value.maximumNumberOfOrdersInPickWave,
        'defaultNumberOfOrdersInPickWave': value.defaultNumberOfOrdersInPickWave,
        'pickWavePrintFormat': value.pickWavePrintFormat,
        'closePickWavePermissions': value.closePickWavePermissions,
        'wmsEnabled': value.wmsEnabled,
        'enableScanningOfUpcForShipToHome': value.enableScanningOfUpcForShipToHome,
        'allowReturns': value.allowReturns,
        'returnRefundReduction': value.returnRefundReduction,
        'defaultReturnRefundReductionAmount': value.defaultReturnRefundReductionAmount,
        'maximumReturnRefundReductionAmount': value.maximumReturnRefundReductionAmount,
        'defaultCarrier': value.defaultCarrier,
        'carriers': value.carriers === undefined ? undefined : (value.carriers === null ? null : (value.carriers as Array<any>).map(CarrierToJSON)),
        'printReturnLabel': value.printReturnLabel,
        'defaultPrinterType': value.defaultPrinterType,
        'boxTypes': value.boxTypes === undefined ? undefined : (value.boxTypes === null ? null : (value.boxTypes as Array<any>).map(BoxTypeToJSON)),
        'attributes': value.attributes === undefined ? undefined : (value.attributes === null ? null : (value.attributes as Array<any>).map(LocationAttributeToJSON)),
        'bpmConfigurations': value.bpmConfigurations === undefined ? undefined : (value.bpmConfigurations === null ? null : (value.bpmConfigurations as Array<any>).map(BpmConfigurationToJSON)),
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'autoPackingListPopup': value.autoPackingListPopup,
        'blockPartialStock': value.blockPartialStock,
        'defaultMaxNumberOfShipmentsInPickWave': value.defaultMaxNumberOfShipmentsInPickWave,
        'displayProductImagesInPickWaveDetails': value.displayProductImagesInPickWaveDetails,
        'enablePnpForSTH': value.enablePnpForSTH,
        'enablePnpForBOPIS': value.enablePnpForBOPIS,
        'blockPartialCancel': value.blockPartialCancel,
        'packageSettings': PackageSettingsToJSON(value.packageSettings),
        'maxNumberOfPackingSlipsByGroup': value.maxNumberOfPackingSlipsByGroup,
    };
}

