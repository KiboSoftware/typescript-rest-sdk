/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Location Admin Service
 * OpenAPI Spec for Kibo Location Admin Service
 *
 * The version of the OpenAPI document: v1_admin
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Attribute } from './Attribute';
import {
    AttributeFromJSON,
    AttributeFromJSONTyped,
    AttributeToJSON,
} from './Attribute';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';

/**
 * 
 * @export
 * @interface LocationAttribute
 */
export interface LocationAttribute {
    /**
     * 
     * @type {Attribute}
     * @memberof LocationAttribute
     */
    attributeDefinition?: Attribute;
    /**
     * 
     * @type {AuditInfo}
     * @memberof LocationAttribute
     */
    auditInfo?: AuditInfo;
    /**
     * 
     * @type {string}
     * @memberof LocationAttribute
     */
    fullyQualifiedName?: string | null;
    /**
     * 
     * @type {number}
     * @memberof LocationAttribute
     */
    attributeDefinitionId?: number | null;
    /**
     * 
     * @type {Array<any>}
     * @memberof LocationAttribute
     */
    values?: Array<any> | null;
}

/**
 * Check if a given object implements the LocationAttribute interface.
 */
export function instanceOfLocationAttribute(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LocationAttributeFromJSON(json: any): LocationAttribute {
    return LocationAttributeFromJSONTyped(json, false);
}

export function LocationAttributeFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationAttribute {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributeDefinition': !exists(json, 'attributeDefinition') ? undefined : AttributeFromJSON(json['attributeDefinition']),
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'fullyQualifiedName': !exists(json, 'fullyQualifiedName') ? undefined : json['fullyQualifiedName'],
        'attributeDefinitionId': !exists(json, 'attributeDefinitionId') ? undefined : json['attributeDefinitionId'],
        'values': !exists(json, 'values') ? undefined : json['values'],
    };
}

export function LocationAttributeToJSON(value?: LocationAttribute | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributeDefinition': AttributeToJSON(value.attributeDefinition),
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'fullyQualifiedName': value.fullyQualifiedName,
        'attributeDefinitionId': value.attributeDefinitionId,
        'values': value.values,
    };
}

