/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Location Admin Service
 * OpenAPI Spec for Kibo Location Admin Service
 *
 * The version of the OpenAPI document: v1_admin
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LocationGroup } from './LocationGroup';
import {
    LocationGroupFromJSON,
    LocationGroupFromJSONTyped,
    LocationGroupToJSON,
} from './LocationGroup';

/**
 * 
 * @export
 * @interface LocationGroupCollection
 */
export interface LocationGroupCollection {
    /**
     * 
     * @type {number}
     * @memberof LocationGroupCollection
     */
    startIndex?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupCollection
     */
    pageSize?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupCollection
     */
    pageCount?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationGroupCollection
     */
    totalCount?: number;
    /**
     * 
     * @type {Array<LocationGroup>}
     * @memberof LocationGroupCollection
     */
    items?: Array<LocationGroup> | null;
}

/**
 * Check if a given object implements the LocationGroupCollection interface.
 */
export function instanceOfLocationGroupCollection(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LocationGroupCollectionFromJSON(json: any): LocationGroupCollection {
    return LocationGroupCollectionFromJSONTyped(json, false);
}

export function LocationGroupCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationGroupCollection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startIndex': !exists(json, 'startIndex') ? undefined : json['startIndex'],
        'pageSize': !exists(json, 'pageSize') ? undefined : json['pageSize'],
        'pageCount': !exists(json, 'pageCount') ? undefined : json['pageCount'],
        'totalCount': !exists(json, 'totalCount') ? undefined : json['totalCount'],
        'items': !exists(json, 'items') ? undefined : (json['items'] === null ? null : (json['items'] as Array<any>).map(LocationGroupFromJSON)),
    };
}

export function LocationGroupCollectionToJSON(value?: LocationGroupCollection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startIndex': value.startIndex,
        'pageSize': value.pageSize,
        'pageCount': value.pageCount,
        'totalCount': value.totalCount,
        'items': value.items === undefined ? undefined : (value.items === null ? null : (value.items as Array<any>).map(LocationGroupToJSON)),
    };
}

