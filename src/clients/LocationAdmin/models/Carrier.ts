/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Location Admin Service
 * OpenAPI Spec for Kibo Location Admin Service
 *
 * The version of the OpenAPI document: v1_admin
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ShippingMethodMappings } from './ShippingMethodMappings';
import {
    ShippingMethodMappingsFromJSON,
    ShippingMethodMappingsFromJSONTyped,
    ShippingMethodMappingsToJSON,
} from './ShippingMethodMappings';

/**
 * 
 * @export
 * @interface Carrier
 */
export interface Carrier {
    /**
     * 
     * @type {string}
     * @memberof Carrier
     */
    carrierType?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Carrier
     */
    isEnabled?: boolean;
    /**
     * 
     * @type {ShippingMethodMappings}
     * @memberof Carrier
     */
    shippingMethodMappings?: ShippingMethodMappings;
}

/**
 * Check if a given object implements the Carrier interface.
 */
export function instanceOfCarrier(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CarrierFromJSON(json: any): Carrier {
    return CarrierFromJSONTyped(json, false);
}

export function CarrierFromJSONTyped(json: any, ignoreDiscriminator: boolean): Carrier {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'carrierType': !exists(json, 'carrierType') ? undefined : json['carrierType'],
        'isEnabled': !exists(json, 'isEnabled') ? undefined : json['isEnabled'],
        'shippingMethodMappings': !exists(json, 'shippingMethodMappings') ? undefined : ShippingMethodMappingsFromJSON(json['shippingMethodMappings']),
    };
}

export function CarrierToJSON(value?: Carrier | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'carrierType': value.carrierType,
        'isEnabled': value.isEnabled,
        'shippingMethodMappings': ShippingMethodMappingsToJSON(value.shippingMethodMappings),
    };
}

