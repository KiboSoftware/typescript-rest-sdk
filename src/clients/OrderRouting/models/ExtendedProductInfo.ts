/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Attribute } from './Attribute';
import {
    AttributeFromJSON,
    AttributeFromJSONTyped,
    AttributeToJSON,
} from './Attribute';

/**
 * 
 * @export
 * @interface ExtendedProductInfo
 */
export interface ExtendedProductInfo {
    /**
     * 
     * @type {Array<Attribute>}
     * @memberof ExtendedProductInfo
     */
    attributes?: Array<Attribute>;
}

/**
 * Check if a given object implements the ExtendedProductInfo interface.
 */
export function instanceOfExtendedProductInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExtendedProductInfoFromJSON(json: any): ExtendedProductInfo {
    return ExtendedProductInfoFromJSONTyped(json, false);
}

export function ExtendedProductInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtendedProductInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(AttributeFromJSON)),
    };
}

export function ExtendedProductInfoToJSON(value?: ExtendedProductInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(AttributeToJSON)),
    };
}

