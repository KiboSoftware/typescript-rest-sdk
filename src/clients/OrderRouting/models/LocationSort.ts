/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserContextInformation } from './UserContextInformation';
import {
    UserContextInformationFromJSON,
    UserContextInformationFromJSONTyped,
    UserContextInformationToJSON,
} from './UserContextInformation';

/**
 * 
 * @export
 * @interface LocationSort
 */
export interface LocationSort {
    /**
     * 
     * @type {Date}
     * @memberof LocationSort
     */
    created?: Date;
    /**
     * 
     * @type {string}
     * @memberof LocationSort
     */
    creatorUsername?: string;
    /**
     * 
     * @type {boolean}
     * @memberof LocationSort
     */
    descending?: boolean;
    /**
     * 
     * @type {number}
     * @memberof LocationSort
     */
    environmentID?: number;
    /**
     * 
     * @type {number}
     * @memberof LocationSort
     */
    locationSortID?: number;
    /**
     * 
     * @type {string}
     * @memberof LocationSort
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof LocationSort
     */
    pathString?: string;
    /**
     * 
     * @type {boolean}
     * @memberof LocationSort
     */
    persisted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof LocationSort
     */
    siteID?: number;
    /**
     * 
     * @type {string}
     * @memberof LocationSort
     */
    sortingType?: LocationSortSortingTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof LocationSort
     */
    tenantID?: number;
    /**
     * 
     * @type {Date}
     * @memberof LocationSort
     */
    updated?: Date;
    /**
     * 
     * @type {string}
     * @memberof LocationSort
     */
    updaterUsername?: string;
    /**
     * 
     * @type {UserContextInformation}
     * @memberof LocationSort
     */
    userContext?: UserContextInformation;
}


/**
 * @export
 */
export const LocationSortSortingTypeEnum = {
    Rank: 'RANK',
    Distance: 'DISTANCE',
    Ltd: 'LTD',
    Cost: 'COST',
    Random: 'RANDOM',
    DataSet: 'DATA_SET'
} as const;
export type LocationSortSortingTypeEnum = typeof LocationSortSortingTypeEnum[keyof typeof LocationSortSortingTypeEnum];


/**
 * Check if a given object implements the LocationSort interface.
 */
export function instanceOfLocationSort(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LocationSortFromJSON(json: any): LocationSort {
    return LocationSortFromJSONTyped(json, false);
}

export function LocationSortFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationSort {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'creatorUsername': !exists(json, 'creatorUsername') ? undefined : json['creatorUsername'],
        'descending': !exists(json, 'descending') ? undefined : json['descending'],
        'environmentID': !exists(json, 'environmentID') ? undefined : json['environmentID'],
        'locationSortID': !exists(json, 'locationSortID') ? undefined : json['locationSortID'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'pathString': !exists(json, 'pathString') ? undefined : json['pathString'],
        'persisted': !exists(json, 'persisted') ? undefined : json['persisted'],
        'siteID': !exists(json, 'siteID') ? undefined : json['siteID'],
        'sortingType': !exists(json, 'sortingType') ? undefined : json['sortingType'],
        'tenantID': !exists(json, 'tenantID') ? undefined : json['tenantID'],
        'updated': !exists(json, 'updated') ? undefined : (new Date(json['updated'])),
        'updaterUsername': !exists(json, 'updaterUsername') ? undefined : json['updaterUsername'],
        'userContext': !exists(json, 'userContext') ? undefined : UserContextInformationFromJSON(json['userContext']),
    };
}

export function LocationSortToJSON(value?: LocationSort | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'creatorUsername': value.creatorUsername,
        'descending': value.descending,
        'environmentID': value.environmentID,
        'locationSortID': value.locationSortID,
        'name': value.name,
        'pathString': value.pathString,
        'persisted': value.persisted,
        'siteID': value.siteID,
        'sortingType': value.sortingType,
        'tenantID': value.tenantID,
        'updated': value.updated === undefined ? undefined : (value.updated.toISOString()),
        'updaterUsername': value.updaterUsername,
        'userContext': UserContextInformationToJSON(value.userContext),
    };
}

