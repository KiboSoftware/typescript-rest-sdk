/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomDataListEntry } from './CustomDataListEntry';
import {
    CustomDataListEntryFromJSON,
    CustomDataListEntryFromJSONTyped,
    CustomDataListEntryToJSON,
} from './CustomDataListEntry';
import type { UserContextInformation } from './UserContextInformation';
import {
    UserContextInformationFromJSON,
    UserContextInformationFromJSONTyped,
    UserContextInformationToJSON,
} from './UserContextInformation';

/**
 * 
 * @export
 * @interface CustomDataList
 */
export interface CustomDataList {
    /**
     * 
     * @type {Date}
     * @memberof CustomDataList
     */
    created?: Date;
    /**
     * 
     * @type {string}
     * @memberof CustomDataList
     */
    creatorUsername?: string;
    /**
     * 
     * @type {number}
     * @memberof CustomDataList
     */
    customDataListID?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomDataList
     */
    dataType?: CustomDataListDataTypeEnum;
    /**
     * 
     * @type {Array<CustomDataListEntry>}
     * @memberof CustomDataList
     */
    entries?: Array<CustomDataListEntry>;
    /**
     * 
     * @type {number}
     * @memberof CustomDataList
     */
    environmentID?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomDataList
     */
    fileName?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomDataList
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomDataList
     */
    notes?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomDataList
     */
    pathString?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CustomDataList
     */
    persisted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CustomDataList
     */
    siteID?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomDataList
     */
    state?: CustomDataListStateEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof CustomDataList
     */
    stringValues?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof CustomDataList
     */
    tenantID?: number;
    /**
     * 
     * @type {Date}
     * @memberof CustomDataList
     */
    updated?: Date;
    /**
     * 
     * @type {string}
     * @memberof CustomDataList
     */
    updaterUsername?: string;
    /**
     * 
     * @type {UserContextInformation}
     * @memberof CustomDataList
     */
    userContext?: UserContextInformation;
    /**
     * 
     * @type {Array<object>}
     * @memberof CustomDataList
     */
    values?: Array<object>;
}


/**
 * @export
 */
export const CustomDataListDataTypeEnum = {
    String: 'STRING',
    Number: 'NUMBER',
    Location: 'LOCATION',
    Date: 'DATE'
} as const;
export type CustomDataListDataTypeEnum = typeof CustomDataListDataTypeEnum[keyof typeof CustomDataListDataTypeEnum];

/**
 * @export
 */
export const CustomDataListStateEnum = {
    Ready: 'dataset.ready',
    Processing: 'dataset.processing',
    ErrorProcessing: 'dataset.error.processing'
} as const;
export type CustomDataListStateEnum = typeof CustomDataListStateEnum[keyof typeof CustomDataListStateEnum];


/**
 * Check if a given object implements the CustomDataList interface.
 */
export function instanceOfCustomDataList(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomDataListFromJSON(json: any): CustomDataList {
    return CustomDataListFromJSONTyped(json, false);
}

export function CustomDataListFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomDataList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'creatorUsername': !exists(json, 'creatorUsername') ? undefined : json['creatorUsername'],
        'customDataListID': !exists(json, 'customDataListID') ? undefined : json['customDataListID'],
        'dataType': !exists(json, 'dataType') ? undefined : json['dataType'],
        'entries': !exists(json, 'entries') ? undefined : ((json['entries'] as Array<any>).map(CustomDataListEntryFromJSON)),
        'environmentID': !exists(json, 'environmentID') ? undefined : json['environmentID'],
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'pathString': !exists(json, 'pathString') ? undefined : json['pathString'],
        'persisted': !exists(json, 'persisted') ? undefined : json['persisted'],
        'siteID': !exists(json, 'siteID') ? undefined : json['siteID'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'stringValues': !exists(json, 'stringValues') ? undefined : json['stringValues'],
        'tenantID': !exists(json, 'tenantID') ? undefined : json['tenantID'],
        'updated': !exists(json, 'updated') ? undefined : (new Date(json['updated'])),
        'updaterUsername': !exists(json, 'updaterUsername') ? undefined : json['updaterUsername'],
        'userContext': !exists(json, 'userContext') ? undefined : UserContextInformationFromJSON(json['userContext']),
        'values': !exists(json, 'values') ? undefined : json['values'],
    };
}

export function CustomDataListToJSON(value?: CustomDataList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'creatorUsername': value.creatorUsername,
        'customDataListID': value.customDataListID,
        'dataType': value.dataType,
        'entries': value.entries === undefined ? undefined : ((value.entries as Array<any>).map(CustomDataListEntryToJSON)),
        'environmentID': value.environmentID,
        'fileName': value.fileName,
        'name': value.name,
        'notes': value.notes,
        'pathString': value.pathString,
        'persisted': value.persisted,
        'siteID': value.siteID,
        'state': value.state,
        'stringValues': value.stringValues,
        'tenantID': value.tenantID,
        'updated': value.updated === undefined ? undefined : (value.updated.toISOString()),
        'updaterUsername': value.updaterUsername,
        'userContext': UserContextInformationToJSON(value.userContext),
        'values': value.values,
    };
}

