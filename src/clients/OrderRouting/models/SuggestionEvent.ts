/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SuggestionEvent
 */
export interface SuggestionEvent {
    /**
     * 
     * @type {number}
     * @memberof SuggestionEvent
     */
    causeID?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof SuggestionEvent
     */
    errors?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof SuggestionEvent
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SuggestionEvent
     */
    type?: SuggestionEventTypeEnum;
}


/**
 * @export
 */
export const SuggestionEventTypeEnum = {
    NewRequest: 'NEW_REQUEST',
    RouteSelected: 'ROUTE_SELECTED',
    MakeLocationsAvailable: 'MAKE_LOCATIONS_AVAILABLE',
    NoRouteFound: 'NO_ROUTE_FOUND',
    RemovedInactiveLocations: 'REMOVED_INACTIVE_LOCATIONS',
    RemovedOnHoldLocations: 'REMOVED_ON_HOLD_LOCATIONS',
    RemovedOverfulfilledLocations: 'REMOVED_OVERFULFILLED_LOCATIONS',
    Group: 'GROUP',
    GroupFilter: 'GROUP_FILTER',
    GroupSort: 'GROUP_SORT',
    Filter: 'FILTER',
    Sort: 'SORT',
    AfterAction: 'AFTER_ACTION',
    FoundFullOrderLocation: 'FOUND_FULL_ORDER_LOCATION',
    Response: 'RESPONSE',
    AfterActionSort: 'AFTER_ACTION_SORT',
    DefaultResponse: 'DEFAULT_RESPONSE',
    MaxSplitsExceeded: 'MAX_SPLITS_EXCEEDED',
    AutoAssignLimitExceeded: 'AUTO_ASSIGN_LIMIT_EXCEEDED',
    InventoryRequest: 'INVENTORY_REQUEST',
    RemovedInternationalLocations: 'REMOVED_INTERNATIONAL_LOCATIONS',
    SuggestionUpdated: 'SUGGESTION_UPDATED',
    NonExpressLocationsFiltered: 'NON_EXPRESS_LOCATIONS_FILTERED',
    SthConsolidatedInitiated: 'STH_CONSOLIDATED_INITIATED',
    SthConsolidatedNotUsed: 'STH_CONSOLIDATED_NOT_USED',
    SthConsolidatedUsed: 'STH_CONSOLIDATED_USED',
    FutureAtpInitiated: 'FUTURE_ATP_INITIATED',
    FutureAtpNotUsed: 'FUTURE_ATP_NOT_USED',
    FutureAtpUsed: 'FUTURE_ATP_USED'
} as const;
export type SuggestionEventTypeEnum = typeof SuggestionEventTypeEnum[keyof typeof SuggestionEventTypeEnum];


/**
 * Check if a given object implements the SuggestionEvent interface.
 */
export function instanceOfSuggestionEvent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SuggestionEventFromJSON(json: any): SuggestionEvent {
    return SuggestionEventFromJSONTyped(json, false);
}

export function SuggestionEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuggestionEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'causeID': !exists(json, 'causeID') ? undefined : json['causeID'],
        'errors': !exists(json, 'errors') ? undefined : json['errors'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function SuggestionEventToJSON(value?: SuggestionEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'causeID': value.causeID,
        'errors': value.errors,
        'name': value.name,
        'type': value.type,
    };
}

