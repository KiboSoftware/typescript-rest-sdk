/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomDataListEntryResponse } from './CustomDataListEntryResponse';
import {
    CustomDataListEntryResponseFromJSON,
    CustomDataListEntryResponseFromJSONTyped,
    CustomDataListEntryResponseToJSON,
} from './CustomDataListEntryResponse';

/**
 * 
 * @export
 * @interface CustomDataListResponse
 */
export interface CustomDataListResponse {
    /**
     * 
     * @type {string}
     * @memberof CustomDataListResponse
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomDataListResponse
     */
    creator?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomDataListResponse
     */
    dataType?: CustomDataListResponseDataTypeEnum;
    /**
     * 
     * @type {Array<CustomDataListEntryResponse>}
     * @memberof CustomDataListResponse
     */
    entries?: Array<CustomDataListEntryResponse>;
    /**
     * 
     * @type {number}
     * @memberof CustomDataListResponse
     */
    environmentID?: number;
    /**
     * 
     * @type {number}
     * @memberof CustomDataListResponse
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomDataListResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomDataListResponse
     */
    notes?: string;
    /**
     * 
     * @type {number}
     * @memberof CustomDataListResponse
     */
    siteID?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomDataListResponse
     */
    state?: CustomDataListResponseStateEnum;
    /**
     * 
     * @type {number}
     * @memberof CustomDataListResponse
     */
    tenantID?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomDataListResponse
     */
    updated?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomDataListResponse
     */
    updater?: string;
}


/**
 * @export
 */
export const CustomDataListResponseDataTypeEnum = {
    String: 'STRING',
    Number: 'NUMBER',
    Location: 'LOCATION'
} as const;
export type CustomDataListResponseDataTypeEnum = typeof CustomDataListResponseDataTypeEnum[keyof typeof CustomDataListResponseDataTypeEnum];

/**
 * @export
 */
export const CustomDataListResponseStateEnum = {
    Ready: 'dataset.ready',
    Processing: 'dataset.processing',
    ErrorProcessing: 'dataset.error.processing'
} as const;
export type CustomDataListResponseStateEnum = typeof CustomDataListResponseStateEnum[keyof typeof CustomDataListResponseStateEnum];


/**
 * Check if a given object implements the CustomDataListResponse interface.
 */
export function instanceOfCustomDataListResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomDataListResponseFromJSON(json: any): CustomDataListResponse {
    return CustomDataListResponseFromJSONTyped(json, false);
}

export function CustomDataListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomDataListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created': !exists(json, 'created') ? undefined : json['created'],
        'creator': !exists(json, 'creator') ? undefined : json['creator'],
        'dataType': !exists(json, 'dataType') ? undefined : json['dataType'],
        'entries': !exists(json, 'entries') ? undefined : ((json['entries'] as Array<any>).map(CustomDataListEntryResponseFromJSON)),
        'environmentID': !exists(json, 'environmentID') ? undefined : json['environmentID'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'siteID': !exists(json, 'siteID') ? undefined : json['siteID'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'tenantID': !exists(json, 'tenantID') ? undefined : json['tenantID'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
        'updater': !exists(json, 'updater') ? undefined : json['updater'],
    };
}

export function CustomDataListResponseToJSON(value?: CustomDataListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created': value.created,
        'creator': value.creator,
        'dataType': value.dataType,
        'entries': value.entries === undefined ? undefined : ((value.entries as Array<any>).map(CustomDataListEntryResponseToJSON)),
        'environmentID': value.environmentID,
        'id': value.id,
        'name': value.name,
        'notes': value.notes,
        'siteID': value.siteID,
        'state': value.state,
        'tenantID': value.tenantID,
        'updated': value.updated,
        'updater': value.updater,
    };
}

