/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExclusionListEntryLocationCode } from './ExclusionListEntryLocationCode';
import {
    ExclusionListEntryLocationCodeFromJSON,
    ExclusionListEntryLocationCodeFromJSONTyped,
    ExclusionListEntryLocationCodeToJSON,
} from './ExclusionListEntryLocationCode';
import type { OrderItem } from './OrderItem';
import {
    OrderItemFromJSON,
    OrderItemFromJSONTyped,
    OrderItemToJSON,
} from './OrderItem';
import type { ShippingAddress } from './ShippingAddress';
import {
    ShippingAddressFromJSON,
    ShippingAddressFromJSONTyped,
    ShippingAddressToJSON,
} from './ShippingAddress';

/**
 * 
 * @export
 * @interface SuggestionRequest
 */
export interface SuggestionRequest {
    /**
     * 
     * @type {string}
     * @memberof SuggestionRequest
     */
    bundlingStrategy?: SuggestionRequestBundlingStrategyEnum;
    /**
     * 
     * @type {string}
     * @memberof SuggestionRequest
     */
    cartID?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof SuggestionRequest
     */
    customData?: { [key: string]: string; };
    /**
     * 
     * @type {number}
     * @memberof SuggestionRequest
     */
    environmentID?: number;
    /**
     * 
     * @type {Array<ExclusionListEntryLocationCode>}
     * @memberof SuggestionRequest
     */
    exclusionListLocationCode?: Array<ExclusionListEntryLocationCode>;
    /**
     * 
     * @type {string}
     * @memberof SuggestionRequest
     */
    externalResponseID?: string;
    /**
     * 
     * @type {number}
     * @memberof SuggestionRequest
     */
    fraud?: number;
    /**
     * 
     * @type {Date}
     * @memberof SuggestionRequest
     */
    futureDateLimit?: Date;
    /**
     * 
     * @type {Array<ExclusionListEntryLocationCode>}
     * @memberof SuggestionRequest
     */
    futureExclusionListLocationCode?: Array<ExclusionListEntryLocationCode>;
    /**
     * 
     * @type {string}
     * @memberof SuggestionRequest
     */
    inventoryRequestType?: SuggestionRequestInventoryRequestTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof SuggestionRequest
     */
    isExpress?: boolean;
    /**
     * 
     * @type {Array<OrderItem>}
     * @memberof SuggestionRequest
     */
    items?: Array<OrderItem>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SuggestionRequest
     */
    locationCodeWhiteList?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof SuggestionRequest
     */
    numShipmentsNotInRequest?: number;
    /**
     * 
     * @type {number}
     * @memberof SuggestionRequest
     */
    orderID?: number;
    /**
     * 
     * @type {string}
     * @memberof SuggestionRequest
     */
    orderType?: SuggestionRequestOrderTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SuggestionRequest
     */
    pickupLocationCode?: string;
    /**
     * 
     * @type {ShippingAddress}
     * @memberof SuggestionRequest
     */
    shippingAddress?: ShippingAddress;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof SuggestionRequest
     */
    tags?: { [key: string]: string; };
    /**
     * 
     * @type {number}
     * @memberof SuggestionRequest
     */
    total?: number;
}


/**
 * @export
 */
export const SuggestionRequestBundlingStrategyEnum = {
    ItemDependency: 'ITEM_DEPENDENCY'
} as const;
export type SuggestionRequestBundlingStrategyEnum = typeof SuggestionRequestBundlingStrategyEnum[keyof typeof SuggestionRequestBundlingStrategyEnum];

/**
 * @export
 */
export const SuggestionRequestInventoryRequestTypeEnum = {
    All: 'ALL',
    Partial: 'PARTIAL',
    Any: 'ANY',
    AllStores: 'ALL_STORES'
} as const;
export type SuggestionRequestInventoryRequestTypeEnum = typeof SuggestionRequestInventoryRequestTypeEnum[keyof typeof SuggestionRequestInventoryRequestTypeEnum];

/**
 * @export
 */
export const SuggestionRequestOrderTypeEnum = {
    Directship: 'DIRECTSHIP',
    Transfer: 'TRANSFER',
    SthConsolidated: 'STH_CONSOLIDATED'
} as const;
export type SuggestionRequestOrderTypeEnum = typeof SuggestionRequestOrderTypeEnum[keyof typeof SuggestionRequestOrderTypeEnum];


/**
 * Check if a given object implements the SuggestionRequest interface.
 */
export function instanceOfSuggestionRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SuggestionRequestFromJSON(json: any): SuggestionRequest {
    return SuggestionRequestFromJSONTyped(json, false);
}

export function SuggestionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuggestionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bundlingStrategy': !exists(json, 'bundlingStrategy') ? undefined : json['bundlingStrategy'],
        'cartID': !exists(json, 'cartID') ? undefined : json['cartID'],
        'customData': !exists(json, 'customData') ? undefined : json['customData'],
        'environmentID': !exists(json, 'environmentID') ? undefined : json['environmentID'],
        'exclusionListLocationCode': !exists(json, 'exclusionListLocationCode') ? undefined : ((json['exclusionListLocationCode'] as Array<any>).map(ExclusionListEntryLocationCodeFromJSON)),
        'externalResponseID': !exists(json, 'externalResponseID') ? undefined : json['externalResponseID'],
        'fraud': !exists(json, 'fraud') ? undefined : json['fraud'],
        'futureDateLimit': !exists(json, 'futureDateLimit') ? undefined : (new Date(json['futureDateLimit'])),
        'futureExclusionListLocationCode': !exists(json, 'futureExclusionListLocationCode') ? undefined : ((json['futureExclusionListLocationCode'] as Array<any>).map(ExclusionListEntryLocationCodeFromJSON)),
        'inventoryRequestType': !exists(json, 'inventoryRequestType') ? undefined : json['inventoryRequestType'],
        'isExpress': !exists(json, 'isExpress') ? undefined : json['isExpress'],
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(OrderItemFromJSON)),
        'locationCodeWhiteList': !exists(json, 'locationCodeWhiteList') ? undefined : json['locationCodeWhiteList'],
        'numShipmentsNotInRequest': !exists(json, 'numShipmentsNotInRequest') ? undefined : json['numShipmentsNotInRequest'],
        'orderID': !exists(json, 'orderID') ? undefined : json['orderID'],
        'orderType': !exists(json, 'orderType') ? undefined : json['orderType'],
        'pickupLocationCode': !exists(json, 'pickupLocationCode') ? undefined : json['pickupLocationCode'],
        'shippingAddress': !exists(json, 'shippingAddress') ? undefined : ShippingAddressFromJSON(json['shippingAddress']),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'total': !exists(json, 'total') ? undefined : json['total'],
    };
}

export function SuggestionRequestToJSON(value?: SuggestionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bundlingStrategy': value.bundlingStrategy,
        'cartID': value.cartID,
        'customData': value.customData,
        'environmentID': value.environmentID,
        'exclusionListLocationCode': value.exclusionListLocationCode === undefined ? undefined : ((value.exclusionListLocationCode as Array<any>).map(ExclusionListEntryLocationCodeToJSON)),
        'externalResponseID': value.externalResponseID,
        'fraud': value.fraud,
        'futureDateLimit': value.futureDateLimit === undefined ? undefined : (value.futureDateLimit.toISOString()),
        'futureExclusionListLocationCode': value.futureExclusionListLocationCode === undefined ? undefined : ((value.futureExclusionListLocationCode as Array<any>).map(ExclusionListEntryLocationCodeToJSON)),
        'inventoryRequestType': value.inventoryRequestType,
        'isExpress': value.isExpress,
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(OrderItemToJSON)),
        'locationCodeWhiteList': value.locationCodeWhiteList,
        'numShipmentsNotInRequest': value.numShipmentsNotInRequest,
        'orderID': value.orderID,
        'orderType': value.orderType,
        'pickupLocationCode': value.pickupLocationCode,
        'shippingAddress': ShippingAddressToJSON(value.shippingAddress),
        'tags': value.tags,
        'total': value.total,
    };
}

