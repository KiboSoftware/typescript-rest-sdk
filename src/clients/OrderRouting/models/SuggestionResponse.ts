/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AssignmentSuggestion } from './AssignmentSuggestion';
import {
    AssignmentSuggestionFromJSON,
    AssignmentSuggestionFromJSONTyped,
    AssignmentSuggestionToJSON,
} from './AssignmentSuggestion';
import type { StateChangeSuggestion } from './StateChangeSuggestion';
import {
    StateChangeSuggestionFromJSON,
    StateChangeSuggestionFromJSONTyped,
    StateChangeSuggestionToJSON,
} from './StateChangeSuggestion';
import type { SuggestionLog } from './SuggestionLog';
import {
    SuggestionLogFromJSON,
    SuggestionLogFromJSONTyped,
    SuggestionLogToJSON,
} from './SuggestionLog';

/**
 * 
 * @export
 * @interface SuggestionResponse
 */
export interface SuggestionResponse {
    /**
     * 
     * @type {{ [key: string]: Array<AssignmentSuggestion>; }}
     * @memberof SuggestionResponse
     */
    assignmentSuggestions?: { [key: string]: Array<AssignmentSuggestion>; };
    /**
     * 
     * @type {Array<number>}
     * @memberof SuggestionResponse
     */
    availableLocations?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof SuggestionResponse
     */
    emptyResponse?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SuggestionResponse
     */
    externalResponseID?: string;
    /**
     * 
     * @type {{ [key: string]: Array<AssignmentSuggestion>; }}
     * @memberof SuggestionResponse
     */
    futureAssignmentSuggestions?: { [key: string]: Array<AssignmentSuggestion>; };
    /**
     * 
     * @type {number}
     * @memberof SuggestionResponse
     */
    responseID?: number;
    /**
     * 
     * @type {string}
     * @memberof SuggestionResponse
     */
    route?: SuggestionResponseRouteEnum;
    /**
     * 
     * @type {{ [key: string]: StateChangeSuggestion; }}
     * @memberof SuggestionResponse
     */
    stateChangeSuggestions?: { [key: string]: StateChangeSuggestion; };
    /**
     * 
     * @type {SuggestionLog}
     * @memberof SuggestionResponse
     */
    suggestionLog?: SuggestionLog;
}


/**
 * @export
 */
export const SuggestionResponseRouteEnum = {
    Directship: 'DIRECTSHIP',
    Transfer: 'TRANSFER',
    SthConsolidated: 'STH_CONSOLIDATED'
} as const;
export type SuggestionResponseRouteEnum = typeof SuggestionResponseRouteEnum[keyof typeof SuggestionResponseRouteEnum];


/**
 * Check if a given object implements the SuggestionResponse interface.
 */
export function instanceOfSuggestionResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SuggestionResponseFromJSON(json: any): SuggestionResponse {
    return SuggestionResponseFromJSONTyped(json, false);
}

export function SuggestionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuggestionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'assignmentSuggestions': !exists(json, 'assignmentSuggestions') ? undefined : json['assignmentSuggestions'],
        'availableLocations': !exists(json, 'availableLocations') ? undefined : json['availableLocations'],
        'emptyResponse': !exists(json, 'emptyResponse') ? undefined : json['emptyResponse'],
        'externalResponseID': !exists(json, 'externalResponseID') ? undefined : json['externalResponseID'],
        'futureAssignmentSuggestions': !exists(json, 'futureAssignmentSuggestions') ? undefined : json['futureAssignmentSuggestions'],
        'responseID': !exists(json, 'responseID') ? undefined : json['responseID'],
        'route': !exists(json, 'route') ? undefined : json['route'],
        'stateChangeSuggestions': !exists(json, 'stateChangeSuggestions') ? undefined : (mapValues(json['stateChangeSuggestions'], StateChangeSuggestionFromJSON)),
        'suggestionLog': !exists(json, 'suggestionLog') ? undefined : SuggestionLogFromJSON(json['suggestionLog']),
    };
}

export function SuggestionResponseToJSON(value?: SuggestionResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'assignmentSuggestions': value.assignmentSuggestions,
        'availableLocations': value.availableLocations,
        'emptyResponse': value.emptyResponse,
        'externalResponseID': value.externalResponseID,
        'futureAssignmentSuggestions': value.futureAssignmentSuggestions,
        'responseID': value.responseID,
        'route': value.route,
        'stateChangeSuggestions': value.stateChangeSuggestions === undefined ? undefined : (mapValues(value.stateChangeSuggestions, StateChangeSuggestionToJSON)),
        'suggestionLog': SuggestionLogToJSON(value.suggestionLog),
    };
}

