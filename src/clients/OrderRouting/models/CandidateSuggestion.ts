/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CandidateSuggestionInventory } from './CandidateSuggestionInventory';
import {
    CandidateSuggestionInventoryFromJSON,
    CandidateSuggestionInventoryFromJSONTyped,
    CandidateSuggestionInventoryToJSON,
} from './CandidateSuggestionInventory';

/**
 * 
 * @export
 * @interface CandidateSuggestion
 */
export interface CandidateSuggestion {
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    addressLine1?: string;
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    addressLine2?: string;
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    addressLine3?: string;
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    countryCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CandidateSuggestion
     */
    directShip?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    distance?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CandidateSuggestion
     */
    express?: boolean;
    /**
     * 
     * @type {Array<CandidateSuggestionInventory>}
     * @memberof CandidateSuggestion
     */
    inventory?: Array<CandidateSuggestionInventory>;
    /**
     * 
     * @type {number}
     * @memberof CandidateSuggestion
     */
    latitude?: number;
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    locationCode?: string;
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    locationName?: string;
    /**
     * 
     * @type {number}
     * @memberof CandidateSuggestion
     */
    longitude?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CandidateSuggestion
     */
    pickup?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    postalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof CandidateSuggestion
     */
    state?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CandidateSuggestion
     */
    transferEnabled?: boolean;
}

/**
 * Check if a given object implements the CandidateSuggestion interface.
 */
export function instanceOfCandidateSuggestion(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CandidateSuggestionFromJSON(json: any): CandidateSuggestion {
    return CandidateSuggestionFromJSONTyped(json, false);
}

export function CandidateSuggestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CandidateSuggestion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addressLine1': !exists(json, 'addressLine1') ? undefined : json['addressLine1'],
        'addressLine2': !exists(json, 'addressLine2') ? undefined : json['addressLine2'],
        'addressLine3': !exists(json, 'addressLine3') ? undefined : json['addressLine3'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'directShip': !exists(json, 'directShip') ? undefined : json['directShip'],
        'distance': !exists(json, 'distance') ? undefined : json['distance'],
        'express': !exists(json, 'express') ? undefined : json['express'],
        'inventory': !exists(json, 'inventory') ? undefined : ((json['inventory'] as Array<any>).map(CandidateSuggestionInventoryFromJSON)),
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'locationCode': !exists(json, 'locationCode') ? undefined : json['locationCode'],
        'locationName': !exists(json, 'locationName') ? undefined : json['locationName'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'pickup': !exists(json, 'pickup') ? undefined : json['pickup'],
        'postalCode': !exists(json, 'postalCode') ? undefined : json['postalCode'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'transferEnabled': !exists(json, 'transferEnabled') ? undefined : json['transferEnabled'],
    };
}

export function CandidateSuggestionToJSON(value?: CandidateSuggestion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addressLine1': value.addressLine1,
        'addressLine2': value.addressLine2,
        'addressLine3': value.addressLine3,
        'city': value.city,
        'countryCode': value.countryCode,
        'directShip': value.directShip,
        'distance': value.distance,
        'express': value.express,
        'inventory': value.inventory === undefined ? undefined : ((value.inventory as Array<any>).map(CandidateSuggestionInventoryToJSON)),
        'latitude': value.latitude,
        'locationCode': value.locationCode,
        'locationName': value.locationName,
        'longitude': value.longitude,
        'pickup': value.pickup,
        'postalCode': value.postalCode,
        'state': value.state,
        'transferEnabled': value.transferEnabled,
    };
}

