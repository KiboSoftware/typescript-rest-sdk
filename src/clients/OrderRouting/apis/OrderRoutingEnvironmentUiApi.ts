/* tslint:disable */
/* eslint-disable */
/**
 * Order Routing
 * Order Routing API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  AjaxResponse,
  EnvironmentForm,
  ModelAndView,
  UserContextInformation,
} from '../models';


export namespace orderRoutingEnvironmentUiApiParams { 
    export interface GetCurrentEnvironmentRequest {
        environmentID: number;
        userContextInformation: UserContextInformation;
        xVolTenant: number;
        xVolSite: number;
    }
    export interface GetCurrentEnvironment1Request {
        environmentID: number;
        userContextInformation: UserContextInformation;
        xVolTenant: number;
        xVolSite: number;
    }
    export interface SaveCloneEnvironmentRequest {
        userContextInformation: UserContextInformation;
        xVolTenant: number;
        xVolSite: number;
        environmentForm?: EnvironmentForm;
    }
    export interface SaveCloneEnvironment1Request {
        userContextInformation: UserContextInformation;
        xVolTenant: number;
        xVolSite: number;
        environmentForm?: EnvironmentForm;
    }
    export interface SaveEditEnvironmentRequest {
        userContextInformation: UserContextInformation;
        xVolTenant: number;
        xVolSite: number;
        environmentForm?: EnvironmentForm;
    }
    export interface SaveEditEnvironment1Request {
        userContextInformation: UserContextInformation;
        xVolTenant: number;
        xVolSite: number;
        environmentForm?: EnvironmentForm;
    }
    export interface SaveEnvironmentStatusChangeRequest {
        environmentID: number;
        newStatus: SaveEnvironmentStatusChangeNewStatusEnum;
        userContextInformation: UserContextInformation;
        xVolTenant: number;
        xVolSite: number;
    }
    export interface SaveEnvironmentStatusChange1Request {
        environmentID: number;
        newStatus: SaveEnvironmentStatusChange1NewStatusEnum;
        userContextInformation: UserContextInformation;
        xVolTenant: number;
        xVolSite: number;
    }
}
/**
* OrderRoutingEnvironmentUiApiService - interface
* 
* @export
* @interface OrderRoutingEnvironmentUiApi
*/
export interface OrderRoutingEnvironmentUiApiService {
    /**
    * Get Current Environment
    * @summary Get Current Environment
    * @param {number} environmentID 
    * @param {UserContextInformation} userContextInformation 
    * @param {number} xVolTenant Tenant
    * @param {number} xVolSite Site
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingEnvironmentUiApiInterface
    */
    getCurrentEnvironmentRaw(requestParameters: orderRoutingEnvironmentUiApiParams.GetCurrentEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>>;

    /**
    * Get Current Environment
    * Get Current Environment
    */
    getCurrentEnvironment(requestParameters: orderRoutingEnvironmentUiApiParams.GetCurrentEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse>;

    /**
    * Get Current Environment_1
    * @summary Get Current Environment_1
    * @param {number} environmentID 
    * @param {UserContextInformation} userContextInformation 
    * @param {number} xVolTenant Tenant
    * @param {number} xVolSite Site
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingEnvironmentUiApiInterface
    */
    getCurrentEnvironment1Raw(requestParameters: orderRoutingEnvironmentUiApiParams.GetCurrentEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>>;

    /**
    * Get Current Environment_1
    * Get Current Environment_1
    */
    getCurrentEnvironment1(requestParameters: orderRoutingEnvironmentUiApiParams.GetCurrentEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse>;

    /**
    * Save Clone Environment
    * @summary Save Clone Environment
    * @param {UserContextInformation} userContextInformation 
    * @param {number} xVolTenant Tenant
    * @param {number} xVolSite Site
    * @param {EnvironmentForm} [environmentForm] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingEnvironmentUiApiInterface
    */
    saveCloneEnvironmentRaw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveCloneEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>>;

    /**
    * Save Clone Environment
    * Save Clone Environment
    */
    saveCloneEnvironment(requestParameters: orderRoutingEnvironmentUiApiParams.SaveCloneEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse>;

    /**
    * Save Clone Environment_1
    * @summary Save Clone Environment_1
    * @param {UserContextInformation} userContextInformation 
    * @param {number} xVolTenant Tenant
    * @param {number} xVolSite Site
    * @param {EnvironmentForm} [environmentForm] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingEnvironmentUiApiInterface
    */
    saveCloneEnvironment1Raw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveCloneEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>>;

    /**
    * Save Clone Environment_1
    * Save Clone Environment_1
    */
    saveCloneEnvironment1(requestParameters: orderRoutingEnvironmentUiApiParams.SaveCloneEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse>;

    /**
    * Save Edit Environment
    * @summary Save Edit Environment
    * @param {UserContextInformation} userContextInformation 
    * @param {number} xVolTenant Tenant
    * @param {number} xVolSite Site
    * @param {EnvironmentForm} [environmentForm] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingEnvironmentUiApiInterface
    */
    saveEditEnvironmentRaw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEditEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>>;

    /**
    * Save Edit Environment
    * Save Edit Environment
    */
    saveEditEnvironment(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEditEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse>;

    /**
    * Save Edit Environment_1
    * @summary Save Edit Environment_1
    * @param {UserContextInformation} userContextInformation 
    * @param {number} xVolTenant Tenant
    * @param {number} xVolSite Site
    * @param {EnvironmentForm} [environmentForm] 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingEnvironmentUiApiInterface
    */
    saveEditEnvironment1Raw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEditEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>>;

    /**
    * Save Edit Environment_1
    * Save Edit Environment_1
    */
    saveEditEnvironment1(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEditEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse>;

    /**
    * Save Environment Status Change
    * @summary Save Environment Status Change
    * @param {number} environmentID 
    * @param {'LIVE' | 'STAGED' | 'ARCHIVED'} newStatus 
    * @param {UserContextInformation} userContextInformation 
    * @param {number} xVolTenant Tenant
    * @param {number} xVolSite Site
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingEnvironmentUiApiInterface
    */
    saveEnvironmentStatusChangeRaw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEnvironmentStatusChangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>>;

    /**
    * Save Environment Status Change
    * Save Environment Status Change
    */
    saveEnvironmentStatusChange(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEnvironmentStatusChangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse>;

    /**
    * Save Environment Status Change_1
    * @summary Save Environment Status Change_1
    * @param {number} environmentID 
    * @param {'LIVE' | 'STAGED' | 'ARCHIVED'} newStatus 
    * @param {UserContextInformation} userContextInformation 
    * @param {number} xVolTenant Tenant
    * @param {number} xVolSite Site
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingEnvironmentUiApiInterface
    */
    saveEnvironmentStatusChange1Raw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEnvironmentStatusChange1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>>;

    /**
    * Save Environment Status Change_1
    * Save Environment Status Change_1
    */
    saveEnvironmentStatusChange1(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEnvironmentStatusChange1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse>;

}


/**
 * 
 */
export class OrderRoutingEnvironmentUiApi extends runtime.BaseAPI implements OrderRoutingEnvironmentUiApiService {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Get Current Environment
     * Get Current Environment
     */


    async getCurrentEnvironmentRaw(requestParameters: orderRoutingEnvironmentUiApiParams.GetCurrentEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>> {
        if (requestParameters.environmentID === null || requestParameters.environmentID === undefined) {
            throw new runtime.RequiredError('environmentID','Required parameter requestParameters.environmentID was null or undefined when calling getCurrentEnvironment.');
        }

        if (requestParameters.userContextInformation === null || requestParameters.userContextInformation === undefined) {
            throw new runtime.RequiredError('userContextInformation','Required parameter requestParameters.userContextInformation was null or undefined when calling getCurrentEnvironment.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getCurrentEnvironment.');
        }

        if (requestParameters.xVolSite === null || requestParameters.xVolSite === undefined) {
            throw new runtime.RequiredError('xVolSite','Required parameter requestParameters.xVolSite was null or undefined when calling getCurrentEnvironment.');
        }

        const queryParameters: any = {};

        if (requestParameters.userContextInformation !== undefined) {
            queryParameters['userContextInformation'] = requestParameters.userContextInformation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/{tenantID}/{siteID}/environment/current/{environmentID}`.replace(`{${"environmentID"}}`, encodeURIComponent(String(requestParameters.environmentID))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Get Current Environment
     * Get Current Environment
     */
    async getCurrentEnvironment(requestParameters: orderRoutingEnvironmentUiApiParams.GetCurrentEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse> {
        const response = await this.getCurrentEnvironmentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Current Environment_1
     * Get Current Environment_1
     */


    async getCurrentEnvironment1Raw(requestParameters: orderRoutingEnvironmentUiApiParams.GetCurrentEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>> {
        if (requestParameters.environmentID === null || requestParameters.environmentID === undefined) {
            throw new runtime.RequiredError('environmentID','Required parameter requestParameters.environmentID was null or undefined when calling getCurrentEnvironment1.');
        }

        if (requestParameters.userContextInformation === null || requestParameters.userContextInformation === undefined) {
            throw new runtime.RequiredError('userContextInformation','Required parameter requestParameters.userContextInformation was null or undefined when calling getCurrentEnvironment1.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getCurrentEnvironment1.');
        }

        if (requestParameters.xVolSite === null || requestParameters.xVolSite === undefined) {
            throw new runtime.RequiredError('xVolSite','Required parameter requestParameters.xVolSite was null or undefined when calling getCurrentEnvironment1.');
        }

        const queryParameters: any = {};

        if (requestParameters.userContextInformation !== undefined) {
            queryParameters['userContextInformation'] = requestParameters.userContextInformation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/{tenantID}/{siteID}/{environmentID}/environment/current/{environmentID}`.replace(`{${"environmentID"}}`, encodeURIComponent(String(requestParameters.environmentID))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Get Current Environment_1
     * Get Current Environment_1
     */
    async getCurrentEnvironment1(requestParameters: orderRoutingEnvironmentUiApiParams.GetCurrentEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse> {
        const response = await this.getCurrentEnvironment1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Save Clone Environment
     * Save Clone Environment
     */


    async saveCloneEnvironmentRaw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveCloneEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>> {
        if (requestParameters.userContextInformation === null || requestParameters.userContextInformation === undefined) {
            throw new runtime.RequiredError('userContextInformation','Required parameter requestParameters.userContextInformation was null or undefined when calling saveCloneEnvironment.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling saveCloneEnvironment.');
        }

        if (requestParameters.xVolSite === null || requestParameters.xVolSite === undefined) {
            throw new runtime.RequiredError('xVolSite','Required parameter requestParameters.xVolSite was null or undefined when calling saveCloneEnvironment.');
        }

        const queryParameters: any = {};

        if (requestParameters.userContextInformation !== undefined) {
            queryParameters['userContextInformation'] = requestParameters.userContextInformation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/{tenantID}/{siteID}/environment/save`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.environmentForm,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Save Clone Environment
     * Save Clone Environment
     */
    async saveCloneEnvironment(requestParameters: orderRoutingEnvironmentUiApiParams.SaveCloneEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse> {
        const response = await this.saveCloneEnvironmentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Save Clone Environment_1
     * Save Clone Environment_1
     */


    async saveCloneEnvironment1Raw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveCloneEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>> {
        if (requestParameters.userContextInformation === null || requestParameters.userContextInformation === undefined) {
            throw new runtime.RequiredError('userContextInformation','Required parameter requestParameters.userContextInformation was null or undefined when calling saveCloneEnvironment1.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling saveCloneEnvironment1.');
        }

        if (requestParameters.xVolSite === null || requestParameters.xVolSite === undefined) {
            throw new runtime.RequiredError('xVolSite','Required parameter requestParameters.xVolSite was null or undefined when calling saveCloneEnvironment1.');
        }

        const queryParameters: any = {};

        if (requestParameters.userContextInformation !== undefined) {
            queryParameters['userContextInformation'] = requestParameters.userContextInformation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/{tenantID}/{siteID}/{environmentID}/environment/save`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.environmentForm,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Save Clone Environment_1
     * Save Clone Environment_1
     */
    async saveCloneEnvironment1(requestParameters: orderRoutingEnvironmentUiApiParams.SaveCloneEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse> {
        const response = await this.saveCloneEnvironment1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Save Edit Environment
     * Save Edit Environment
     */


    async saveEditEnvironmentRaw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEditEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>> {
        if (requestParameters.userContextInformation === null || requestParameters.userContextInformation === undefined) {
            throw new runtime.RequiredError('userContextInformation','Required parameter requestParameters.userContextInformation was null or undefined when calling saveEditEnvironment.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling saveEditEnvironment.');
        }

        if (requestParameters.xVolSite === null || requestParameters.xVolSite === undefined) {
            throw new runtime.RequiredError('xVolSite','Required parameter requestParameters.xVolSite was null or undefined when calling saveEditEnvironment.');
        }

        const queryParameters: any = {};

        if (requestParameters.userContextInformation !== undefined) {
            queryParameters['userContextInformation'] = requestParameters.userContextInformation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/{tenantID}/{siteID}/environment/save_edit`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.environmentForm,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Save Edit Environment
     * Save Edit Environment
     */
    async saveEditEnvironment(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEditEnvironmentRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse> {
        const response = await this.saveEditEnvironmentRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Save Edit Environment_1
     * Save Edit Environment_1
     */


    async saveEditEnvironment1Raw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEditEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>> {
        if (requestParameters.userContextInformation === null || requestParameters.userContextInformation === undefined) {
            throw new runtime.RequiredError('userContextInformation','Required parameter requestParameters.userContextInformation was null or undefined when calling saveEditEnvironment1.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling saveEditEnvironment1.');
        }

        if (requestParameters.xVolSite === null || requestParameters.xVolSite === undefined) {
            throw new runtime.RequiredError('xVolSite','Required parameter requestParameters.xVolSite was null or undefined when calling saveEditEnvironment1.');
        }

        const queryParameters: any = {};

        if (requestParameters.userContextInformation !== undefined) {
            queryParameters['userContextInformation'] = requestParameters.userContextInformation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/{tenantID}/{siteID}/{environmentID}/environment/save_edit`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.environmentForm,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Save Edit Environment_1
     * Save Edit Environment_1
     */
    async saveEditEnvironment1(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEditEnvironment1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse> {
        const response = await this.saveEditEnvironment1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Save Environment Status Change
     * Save Environment Status Change
     */


    async saveEnvironmentStatusChangeRaw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEnvironmentStatusChangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>> {
        if (requestParameters.environmentID === null || requestParameters.environmentID === undefined) {
            throw new runtime.RequiredError('environmentID','Required parameter requestParameters.environmentID was null or undefined when calling saveEnvironmentStatusChange.');
        }

        if (requestParameters.newStatus === null || requestParameters.newStatus === undefined) {
            throw new runtime.RequiredError('newStatus','Required parameter requestParameters.newStatus was null or undefined when calling saveEnvironmentStatusChange.');
        }

        if (requestParameters.userContextInformation === null || requestParameters.userContextInformation === undefined) {
            throw new runtime.RequiredError('userContextInformation','Required parameter requestParameters.userContextInformation was null or undefined when calling saveEnvironmentStatusChange.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling saveEnvironmentStatusChange.');
        }

        if (requestParameters.xVolSite === null || requestParameters.xVolSite === undefined) {
            throw new runtime.RequiredError('xVolSite','Required parameter requestParameters.xVolSite was null or undefined when calling saveEnvironmentStatusChange.');
        }

        const queryParameters: any = {};

        if (requestParameters.environmentID !== undefined) {
            queryParameters['environmentID'] = requestParameters.environmentID;
        }

        if (requestParameters.newStatus !== undefined) {
            queryParameters['newStatus'] = requestParameters.newStatus;
        }

        if (requestParameters.userContextInformation !== undefined) {
            queryParameters['userContextInformation'] = requestParameters.userContextInformation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/{tenantID}/{siteID}/environment/change_environment_status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Save Environment Status Change
     * Save Environment Status Change
     */
    async saveEnvironmentStatusChange(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEnvironmentStatusChangeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse> {
        const response = await this.saveEnvironmentStatusChangeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Save Environment Status Change_1
     * Save Environment Status Change_1
     */


    async saveEnvironmentStatusChange1Raw(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEnvironmentStatusChange1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AjaxResponse>> {
        if (requestParameters.environmentID === null || requestParameters.environmentID === undefined) {
            throw new runtime.RequiredError('environmentID','Required parameter requestParameters.environmentID was null or undefined when calling saveEnvironmentStatusChange1.');
        }

        if (requestParameters.newStatus === null || requestParameters.newStatus === undefined) {
            throw new runtime.RequiredError('newStatus','Required parameter requestParameters.newStatus was null or undefined when calling saveEnvironmentStatusChange1.');
        }

        if (requestParameters.userContextInformation === null || requestParameters.userContextInformation === undefined) {
            throw new runtime.RequiredError('userContextInformation','Required parameter requestParameters.userContextInformation was null or undefined when calling saveEnvironmentStatusChange1.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling saveEnvironmentStatusChange1.');
        }

        if (requestParameters.xVolSite === null || requestParameters.xVolSite === undefined) {
            throw new runtime.RequiredError('xVolSite','Required parameter requestParameters.xVolSite was null or undefined when calling saveEnvironmentStatusChange1.');
        }

        const queryParameters: any = {};

        if (requestParameters.environmentID !== undefined) {
            queryParameters['environmentID'] = requestParameters.environmentID;
        }

        if (requestParameters.newStatus !== undefined) {
            queryParameters['newStatus'] = requestParameters.newStatus;
        }

        if (requestParameters.userContextInformation !== undefined) {
            queryParameters['userContextInformation'] = requestParameters.userContextInformation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/{tenantID}/{siteID}/{environmentID}/environment/change_environment_status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Save Environment Status Change_1
     * Save Environment Status Change_1
     */
    async saveEnvironmentStatusChange1(requestParameters: orderRoutingEnvironmentUiApiParams.SaveEnvironmentStatusChange1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AjaxResponse> {
        const response = await this.saveEnvironmentStatusChange1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const SaveEnvironmentStatusChangeNewStatusEnum = {
    Live: 'LIVE',
    Staged: 'STAGED',
    Archived: 'ARCHIVED'
} as const;
export type SaveEnvironmentStatusChangeNewStatusEnum = typeof SaveEnvironmentStatusChangeNewStatusEnum[keyof typeof SaveEnvironmentStatusChangeNewStatusEnum];
/**
 * @export
 */
export const SaveEnvironmentStatusChange1NewStatusEnum = {
    Live: 'LIVE',
    Staged: 'STAGED',
    Archived: 'ARCHIVED'
} as const;
export type SaveEnvironmentStatusChange1NewStatusEnum = typeof SaveEnvironmentStatusChange1NewStatusEnum[keyof typeof SaveEnvironmentStatusChange1NewStatusEnum];
