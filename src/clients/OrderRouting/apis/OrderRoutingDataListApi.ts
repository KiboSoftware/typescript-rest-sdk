/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  CustomDataList,
  CustomDataListResponse,
} from '../models';


export namespace orderRoutingDataListApiParams { 
    export interface CreateCustomDataListRequest {
        customDataList: CustomDataList;
    }
    export interface DeleteCustomDataListRequest {
        dataListID: number;
    }
    export interface GetCustomDataListRequest {
        dataListID: number;
    }
    export interface UpdateCustomDataListRequest {
        dataListID: number;
        newDataList: CustomDataList;
    }
}
/**
* OrderRoutingDataListApiService - interface
* 
* @export
* @interface OrderRoutingDataListApi
*/
export interface OrderRoutingDataListApiService {
    /**
    * createCustomDataList
    * @summary createCustomDataList
    * @param {CustomDataList} customDataList customDataList
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingDataListApiInterface
    */
    createCustomDataListRaw(requestParameters: orderRoutingDataListApiParams.CreateCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomDataListResponse>>;

    /**
    * createCustomDataList
    * createCustomDataList
    */
    createCustomDataList(requestParameters: orderRoutingDataListApiParams.CreateCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomDataListResponse>;

    /**
    * deleteCustomDataList
    * @summary deleteCustomDataList
    * @param {number} dataListID dataListID
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingDataListApiInterface
    */
    deleteCustomDataListRaw(requestParameters: orderRoutingDataListApiParams.DeleteCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
    * deleteCustomDataList
    * deleteCustomDataList
    */
    deleteCustomDataList(requestParameters: orderRoutingDataListApiParams.DeleteCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
    * getCustomDataList
    * @summary getCustomDataList
    * @param {number} dataListID dataListID
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingDataListApiInterface
    */
    getCustomDataListRaw(requestParameters: orderRoutingDataListApiParams.GetCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomDataListResponse>>;

    /**
    * getCustomDataList
    * getCustomDataList
    */
    getCustomDataList(requestParameters: orderRoutingDataListApiParams.GetCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomDataListResponse>;

    /**
    * updateCustomDataList
    * @summary updateCustomDataList
    * @param {number} dataListID dataListID
    * @param {CustomDataList} newDataList newDataList
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof OrderRoutingDataListApiInterface
    */
    updateCustomDataListRaw(requestParameters: orderRoutingDataListApiParams.UpdateCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomDataListResponse>>;

    /**
    * updateCustomDataList
    * updateCustomDataList
    */
    updateCustomDataList(requestParameters: orderRoutingDataListApiParams.UpdateCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomDataListResponse>;

}


/**
 * 
 */
export class OrderRoutingDataListApi extends runtime.BaseAPI implements OrderRoutingDataListApiService {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * createCustomDataList
     * createCustomDataList
     */


    async createCustomDataListRaw(requestParameters: orderRoutingDataListApiParams.CreateCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomDataListResponse>> {
        if (requestParameters.customDataList === null || requestParameters.customDataList === undefined) {
            throw new runtime.RequiredError('customDataList','Required parameter requestParameters.customDataList was null or undefined when calling createCustomDataList.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/orders/orderrouting/api/v1/dataList`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.customDataList,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * createCustomDataList
     * createCustomDataList
     */
    async createCustomDataList(requestParameters: orderRoutingDataListApiParams.CreateCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomDataListResponse> {
        const response = await this.createCustomDataListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * deleteCustomDataList
     * deleteCustomDataList
     */


    async deleteCustomDataListRaw(requestParameters: orderRoutingDataListApiParams.DeleteCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.dataListID === null || requestParameters.dataListID === undefined) {
            throw new runtime.RequiredError('dataListID','Required parameter requestParameters.dataListID was null or undefined when calling deleteCustomDataList.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/orders/orderrouting/api/v1/dataList/{dataListID}`.replace(`{${"dataListID"}}`, encodeURIComponent(String(requestParameters.dataListID))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * deleteCustomDataList
     * deleteCustomDataList
     */
    async deleteCustomDataList(requestParameters: orderRoutingDataListApiParams.DeleteCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteCustomDataListRaw(requestParameters, initOverrides);
    }

    /**
     * getCustomDataList
     * getCustomDataList
     */


    async getCustomDataListRaw(requestParameters: orderRoutingDataListApiParams.GetCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomDataListResponse>> {
        if (requestParameters.dataListID === null || requestParameters.dataListID === undefined) {
            throw new runtime.RequiredError('dataListID','Required parameter requestParameters.dataListID was null or undefined when calling getCustomDataList.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/orders/orderrouting/api/v1/dataList/{dataListID}`.replace(`{${"dataListID"}}`, encodeURIComponent(String(requestParameters.dataListID))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * getCustomDataList
     * getCustomDataList
     */
    async getCustomDataList(requestParameters: orderRoutingDataListApiParams.GetCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomDataListResponse> {
        const response = await this.getCustomDataListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * updateCustomDataList
     * updateCustomDataList
     */


    async updateCustomDataListRaw(requestParameters: orderRoutingDataListApiParams.UpdateCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomDataListResponse>> {
        if (requestParameters.dataListID === null || requestParameters.dataListID === undefined) {
            throw new runtime.RequiredError('dataListID','Required parameter requestParameters.dataListID was null or undefined when calling updateCustomDataList.');
        }

        if (requestParameters.newDataList === null || requestParameters.newDataList === undefined) {
            throw new runtime.RequiredError('newDataList','Required parameter requestParameters.newDataList was null or undefined when calling updateCustomDataList.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/orders/orderrouting/api/v1/dataList/{dataListID}`.replace(`{${"dataListID"}}`, encodeURIComponent(String(requestParameters.dataListID))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.newDataList,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * updateCustomDataList
     * updateCustomDataList
     */
    async updateCustomDataList(requestParameters: orderRoutingDataListApiParams.UpdateCustomDataListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomDataListResponse> {
        const response = await this.updateCustomDataListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
