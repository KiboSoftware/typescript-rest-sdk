/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GatewayGiftCard
 */
export interface GatewayGiftCard {
    /**
     * 
     * @type {string}
     * @memberof GatewayGiftCard
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GatewayGiftCard
     */
    cardNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GatewayGiftCard
     */
    cardPin?: string | null;
    /**
     * 
     * @type {number}
     * @memberof GatewayGiftCard
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof GatewayGiftCard
     */
    currencyCode?: string | null;
}

/**
 * Check if a given object implements the GatewayGiftCard interface.
 */
export function instanceOfGatewayGiftCard(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GatewayGiftCardFromJSON(json: any): GatewayGiftCard {
    return GatewayGiftCardFromJSONTyped(json, false);
}

export function GatewayGiftCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayGiftCard {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'cardNumber': !exists(json, 'cardNumber') ? undefined : json['cardNumber'],
        'cardPin': !exists(json, 'cardPin') ? undefined : json['cardPin'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
    };
}

export function GatewayGiftCardToJSON(value?: GatewayGiftCard | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'cardNumber': value.cardNumber,
        'cardPin': value.cardPin,
        'amount': value.amount,
        'currencyCode': value.currencyCode,
    };
}

