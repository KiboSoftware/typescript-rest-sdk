/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommerceRuntimeMeasurement } from './CommerceRuntimeMeasurement';
import {
    CommerceRuntimeMeasurementFromJSON,
    CommerceRuntimeMeasurementFromJSONTyped,
    CommerceRuntimeMeasurementToJSON,
} from './CommerceRuntimeMeasurement';

/**
 * Physical dimensions of the package required to ship the product and its weight.
 * @export
 * @interface CommerceRuntimePackageMeasurements
 */
export interface CommerceRuntimePackageMeasurements {
    /**
     * 
     * @type {CommerceRuntimeMeasurement}
     * @memberof CommerceRuntimePackageMeasurements
     */
    height?: CommerceRuntimeMeasurement;
    /**
     * 
     * @type {CommerceRuntimeMeasurement}
     * @memberof CommerceRuntimePackageMeasurements
     */
    width?: CommerceRuntimeMeasurement;
    /**
     * 
     * @type {CommerceRuntimeMeasurement}
     * @memberof CommerceRuntimePackageMeasurements
     */
    length?: CommerceRuntimeMeasurement;
    /**
     * 
     * @type {CommerceRuntimeMeasurement}
     * @memberof CommerceRuntimePackageMeasurements
     */
    weight?: CommerceRuntimeMeasurement;
}

/**
 * Check if a given object implements the CommerceRuntimePackageMeasurements interface.
 */
export function instanceOfCommerceRuntimePackageMeasurements(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommerceRuntimePackageMeasurementsFromJSON(json: any): CommerceRuntimePackageMeasurements {
    return CommerceRuntimePackageMeasurementsFromJSONTyped(json, false);
}

export function CommerceRuntimePackageMeasurementsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommerceRuntimePackageMeasurements {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'height': !exists(json, 'height') ? undefined : CommerceRuntimeMeasurementFromJSON(json['height']),
        'width': !exists(json, 'width') ? undefined : CommerceRuntimeMeasurementFromJSON(json['width']),
        'length': !exists(json, 'length') ? undefined : CommerceRuntimeMeasurementFromJSON(json['length']),
        'weight': !exists(json, 'weight') ? undefined : CommerceRuntimeMeasurementFromJSON(json['weight']),
    };
}

export function CommerceRuntimePackageMeasurementsToJSON(value?: CommerceRuntimePackageMeasurements | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'height': CommerceRuntimeMeasurementToJSON(value.height),
        'width': CommerceRuntimeMeasurementToJSON(value.width),
        'length': CommerceRuntimeMeasurementToJSON(value.length),
        'weight': CommerceRuntimeMeasurementToJSON(value.weight),
    };
}

