/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PackageMeasurements } from './PackageMeasurements';
import {
    PackageMeasurementsFromJSON,
    PackageMeasurementsFromJSONTyped,
    PackageMeasurementsToJSON,
} from './PackageMeasurements';
import type { ProductStock } from './ProductStock';
import {
    ProductStockFromJSON,
    ProductStockFromJSONTyped,
    ProductStockToJSON,
} from './ProductStock';

/**
 * 
 * @export
 * @interface ProductBase
 */
export interface ProductBase {
    /**
     * Merchant-created code that uniquely identifies the product.
     * @type {string}
     * @memberof ProductBase
     */
    productCode?: string | null;
    /**
     * Name of the product, this is the current value of the product's name in the language specified by LocaleCode.
     * @type {string}
     * @memberof ProductBase
     */
    name?: string | null;
    /**
     * Short description of the product in the language specified by LocaleCode.
     * @type {string}
     * @memberof ProductBase
     */
    description?: string | null;
    /**
     * Goods Type
     * @type {string}
     * @memberof ProductBase
     */
    goodsType?: string | null;
    /**
     * Indicates that this product ships by itself.
     * @type {boolean}
     * @memberof ProductBase
     */
    isPackagedStandAlone?: boolean;
    /**
     * 
     * @type {ProductStock}
     * @memberof ProductBase
     */
    stock?: ProductStock;
    /**
     * Reservation ID associated with this product in the bundle.
     * @type {number}
     * @memberof ProductBase
     */
    productReservationId?: number | null;
    /**
     * Allocation ID associated with this product on this order.
     * @type {number}
     * @memberof ProductBase
     */
    allocationId?: number | null;
    /**
     * Allocation ID associated with this product on this order.
     * @type {Date}
     * @memberof ProductBase
     */
    allocationExpiration?: Date | null;
    /**
     * 
     * @type {PackageMeasurements}
     * @memberof ProductBase
     */
    measurements?: PackageMeasurements;
    /**
     * Fulfillment status of the product.
     * @type {string}
     * @memberof ProductBase
     */
    fulfillmentStatus?: string | null;
}

/**
 * Check if a given object implements the ProductBase interface.
 */
export function instanceOfProductBase(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductBaseFromJSON(json: any): ProductBase {
    return ProductBaseFromJSONTyped(json, false);
}

export function ProductBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductBase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'goodsType': !exists(json, 'goodsType') ? undefined : json['goodsType'],
        'isPackagedStandAlone': !exists(json, 'isPackagedStandAlone') ? undefined : json['isPackagedStandAlone'],
        'stock': !exists(json, 'stock') ? undefined : ProductStockFromJSON(json['stock']),
        'productReservationId': !exists(json, 'productReservationId') ? undefined : json['productReservationId'],
        'allocationId': !exists(json, 'allocationId') ? undefined : json['allocationId'],
        'allocationExpiration': !exists(json, 'allocationExpiration') ? undefined : (json['allocationExpiration'] === null ? null : new Date(json['allocationExpiration'])),
        'measurements': !exists(json, 'measurements') ? undefined : PackageMeasurementsFromJSON(json['measurements']),
        'fulfillmentStatus': !exists(json, 'fulfillmentStatus') ? undefined : json['fulfillmentStatus'],
    };
}

export function ProductBaseToJSON(value?: ProductBase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productCode': value.productCode,
        'name': value.name,
        'description': value.description,
        'goodsType': value.goodsType,
        'isPackagedStandAlone': value.isPackagedStandAlone,
        'stock': ProductStockToJSON(value.stock),
        'productReservationId': value.productReservationId,
        'allocationId': value.allocationId,
        'allocationExpiration': value.allocationExpiration === undefined ? undefined : (value.allocationExpiration === null ? null : value.allocationExpiration.toISOString()),
        'measurements': PackageMeasurementsToJSON(value.measurements),
        'fulfillmentStatus': value.fulfillmentStatus,
    };
}

