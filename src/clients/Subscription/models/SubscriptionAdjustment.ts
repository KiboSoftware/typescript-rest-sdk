/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SubscriptionReason } from './SubscriptionReason';
import {
    SubscriptionReasonFromJSON,
    SubscriptionReasonFromJSONTyped,
    SubscriptionReasonToJSON,
} from './SubscriptionReason';

/**
 * 
 * @export
 * @interface SubscriptionAdjustment
 */
export interface SubscriptionAdjustment {
    /**
     * 
     * @type {SubscriptionReason}
     * @memberof SubscriptionAdjustment
     */
    reason?: SubscriptionReason;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionAdjustment
     */
    itemAdjustment?: number | null;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionAdjustment
     */
    shippingAdjustment?: number | null;
    /**
     * 
     * @type {number}
     * @memberof SubscriptionAdjustment
     */
    handlingAdjustment?: number | null;
}

/**
 * Check if a given object implements the SubscriptionAdjustment interface.
 */
export function instanceOfSubscriptionAdjustment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SubscriptionAdjustmentFromJSON(json: any): SubscriptionAdjustment {
    return SubscriptionAdjustmentFromJSONTyped(json, false);
}

export function SubscriptionAdjustmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionAdjustment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reason': !exists(json, 'reason') ? undefined : SubscriptionReasonFromJSON(json['reason']),
        'itemAdjustment': !exists(json, 'itemAdjustment') ? undefined : json['itemAdjustment'],
        'shippingAdjustment': !exists(json, 'shippingAdjustment') ? undefined : json['shippingAdjustment'],
        'handlingAdjustment': !exists(json, 'handlingAdjustment') ? undefined : json['handlingAdjustment'],
    };
}

export function SubscriptionAdjustmentToJSON(value?: SubscriptionAdjustment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reason': SubscriptionReasonToJSON(value.reason),
        'itemAdjustment': value.itemAdjustment,
        'shippingAdjustment': value.shippingAdjustment,
        'handlingAdjustment': value.handlingAdjustment,
    };
}

