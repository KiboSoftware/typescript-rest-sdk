/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BundledProduct } from './BundledProduct';
import {
    BundledProductFromJSON,
    BundledProductFromJSONTyped,
    BundledProductToJSON,
} from './BundledProduct';
import type { Category } from './Category';
import {
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
} from './Category';
import type { FulfillmentField } from './FulfillmentField';
import {
    FulfillmentFieldFromJSON,
    FulfillmentFieldFromJSONTyped,
    FulfillmentFieldToJSON,
} from './FulfillmentField';
import type { PackageMeasurements } from './PackageMeasurements';
import {
    PackageMeasurementsFromJSON,
    PackageMeasurementsFromJSONTyped,
    PackageMeasurementsToJSON,
} from './PackageMeasurements';
import type { ProductOption } from './ProductOption';
import {
    ProductOptionFromJSON,
    ProductOptionFromJSONTyped,
    ProductOptionToJSON,
} from './ProductOption';
import type { ProductPrice } from './ProductPrice';
import {
    ProductPriceFromJSON,
    ProductPriceFromJSONTyped,
    ProductPriceToJSON,
} from './ProductPrice';
import type { ProductProperty } from './ProductProperty';
import {
    ProductPropertyFromJSON,
    ProductPropertyFromJSONTyped,
    ProductPropertyToJSON,
} from './ProductProperty';
import type { ProductStock } from './ProductStock';
import {
    ProductStockFromJSON,
    ProductStockFromJSONTyped,
    ProductStockToJSON,
} from './ProductStock';

/**
 * The product as it appears on the order item.
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * Manufacturing Part Number of the product.
     * @type {string}
     * @memberof Product
     */
    mfgPartNumber?: string | null;
    /**
     * Universal Product Code of the product.
     * @type {string}
     * @memberof Product
     */
    upc?: string | null;
    /**
     * Product Identifier specific to the store
     * @type {string}
     * @memberof Product
     */
    sku?: string | null;
    /**
     * Types of fulfillment that are supported for this product.
     * @type {Array<string>}
     * @memberof Product
     */
    fulfillmentTypesSupported?: Array<string> | null;
    /**
     * Descriptive text of the image associated with the product in the language specified by LocaleCode.
     * @type {string}
     * @memberof Product
     */
    imageAlternateText?: string | null;
    /**
     * URL of the image that appears next to the product on the order item. Optional.
     * @type {string}
     * @memberof Product
     */
    imageUrl?: string | null;
    /**
     * For configurable products, the unique identifier of the product variation that has been selected.
     * @type {string}
     * @memberof Product
     */
    variationProductCode?: string | null;
    /**
     * If the product contains configurable or stand-alone options, the list of product options that the shopper selected for this product.
     * @type {Array<ProductOption>}
     * @memberof Product
     */
    options?: Array<ProductOption> | null;
    /**
     * If the product contains properties, the list of properties that the shopper selected for this product.
     * @type {Array<ProductProperty>}
     * @memberof Product
     */
    properties?: Array<ProductProperty> | null;
    /**
     * Categories to which this product belongs.
     * @type {Array<Category>}
     * @memberof Product
     */
    categories?: Array<Category> | null;
    /**
     * 
     * @type {ProductPrice}
     * @memberof Product
     */
    price?: ProductPrice;
    /**
     * Is the product discount restricted
     * @type {boolean}
     * @memberof Product
     */
    discountsRestricted?: boolean | null;
    /**
     * Product discount restriction start date
     * @type {Date}
     * @memberof Product
     */
    discountsRestrictedStartDate?: Date | null;
    /**
     * Product discount restriction end date
     * @type {Date}
     * @memberof Product
     */
    discountsRestrictedEndDate?: Date | null;
    /**
     * If true, the product is purchased or fulfilled at regular intervals, for example, a monthly billing or a subscription.
     * @type {boolean}
     * @memberof Product
     */
    isRecurring?: boolean | null;
    /**
     * If true, the product is eligible for tax.
     * @type {boolean}
     * @memberof Product
     */
    isTaxable?: boolean | null;
    /**
     * Type of product, which can be a product with configurable options, a product with stand-alone options, or a simple product with no options.
     * @type {string}
     * @memberof Product
     */
    productType?: string | null;
    /**
     * Usage of the product, primarily used to indicate a bundle in this context
     * @type {string}
     * @memberof Product
     */
    productUsage?: string | null;
    /**
     * Products bundled with this product (if the current product is a bundle)
     * @type {Array<BundledProduct>}
     * @memberof Product
     */
    bundledProducts?: Array<BundledProduct> | null;
    /**
     * List of unique product identifiers for an item on shipment
     * @type {Array<FulfillmentField>}
     * @memberof Product
     */
    fulfillmentFields?: Array<FulfillmentField> | null;
    /**
     * Merchant-created code that uniquely identifies the product.
     * @type {string}
     * @memberof Product
     */
    productCode?: string | null;
    /**
     * Name of the product, this is the current value of the product's name in the language specified by LocaleCode.
     * @type {string}
     * @memberof Product
     */
    name?: string | null;
    /**
     * Short description of the product in the language specified by LocaleCode.
     * @type {string}
     * @memberof Product
     */
    description?: string | null;
    /**
     * Goods Type
     * @type {string}
     * @memberof Product
     */
    goodsType?: string | null;
    /**
     * Indicates that this product ships by itself.
     * @type {boolean}
     * @memberof Product
     */
    isPackagedStandAlone?: boolean;
    /**
     * 
     * @type {ProductStock}
     * @memberof Product
     */
    stock?: ProductStock;
    /**
     * Reservation ID associated with this product in the bundle.
     * @type {number}
     * @memberof Product
     */
    productReservationId?: number | null;
    /**
     * Allocation ID associated with this product on this order.
     * @type {number}
     * @memberof Product
     */
    allocationId?: number | null;
    /**
     * Allocation ID associated with this product on this order.
     * @type {Date}
     * @memberof Product
     */
    allocationExpiration?: Date | null;
    /**
     * 
     * @type {PackageMeasurements}
     * @memberof Product
     */
    measurements?: PackageMeasurements;
    /**
     * Fulfillment status of the product.
     * @type {string}
     * @memberof Product
     */
    fulfillmentStatus?: string | null;
}

/**
 * Check if a given object implements the Product interface.
 */
export function instanceOfProduct(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mfgPartNumber': !exists(json, 'mfgPartNumber') ? undefined : json['mfgPartNumber'],
        'upc': !exists(json, 'upc') ? undefined : json['upc'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'fulfillmentTypesSupported': !exists(json, 'fulfillmentTypesSupported') ? undefined : json['fulfillmentTypesSupported'],
        'imageAlternateText': !exists(json, 'imageAlternateText') ? undefined : json['imageAlternateText'],
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'variationProductCode': !exists(json, 'variationProductCode') ? undefined : json['variationProductCode'],
        'options': !exists(json, 'options') ? undefined : (json['options'] === null ? null : (json['options'] as Array<any>).map(ProductOptionFromJSON)),
        'properties': !exists(json, 'properties') ? undefined : (json['properties'] === null ? null : (json['properties'] as Array<any>).map(ProductPropertyFromJSON)),
        'categories': !exists(json, 'categories') ? undefined : (json['categories'] === null ? null : (json['categories'] as Array<any>).map(CategoryFromJSON)),
        'price': !exists(json, 'price') ? undefined : ProductPriceFromJSON(json['price']),
        'discountsRestricted': !exists(json, 'discountsRestricted') ? undefined : json['discountsRestricted'],
        'discountsRestrictedStartDate': !exists(json, 'discountsRestrictedStartDate') ? undefined : (json['discountsRestrictedStartDate'] === null ? null : new Date(json['discountsRestrictedStartDate'])),
        'discountsRestrictedEndDate': !exists(json, 'discountsRestrictedEndDate') ? undefined : (json['discountsRestrictedEndDate'] === null ? null : new Date(json['discountsRestrictedEndDate'])),
        'isRecurring': !exists(json, 'isRecurring') ? undefined : json['isRecurring'],
        'isTaxable': !exists(json, 'isTaxable') ? undefined : json['isTaxable'],
        'productType': !exists(json, 'productType') ? undefined : json['productType'],
        'productUsage': !exists(json, 'productUsage') ? undefined : json['productUsage'],
        'bundledProducts': !exists(json, 'bundledProducts') ? undefined : (json['bundledProducts'] === null ? null : (json['bundledProducts'] as Array<any>).map(BundledProductFromJSON)),
        'fulfillmentFields': !exists(json, 'fulfillmentFields') ? undefined : (json['fulfillmentFields'] === null ? null : (json['fulfillmentFields'] as Array<any>).map(FulfillmentFieldFromJSON)),
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'goodsType': !exists(json, 'goodsType') ? undefined : json['goodsType'],
        'isPackagedStandAlone': !exists(json, 'isPackagedStandAlone') ? undefined : json['isPackagedStandAlone'],
        'stock': !exists(json, 'stock') ? undefined : ProductStockFromJSON(json['stock']),
        'productReservationId': !exists(json, 'productReservationId') ? undefined : json['productReservationId'],
        'allocationId': !exists(json, 'allocationId') ? undefined : json['allocationId'],
        'allocationExpiration': !exists(json, 'allocationExpiration') ? undefined : (json['allocationExpiration'] === null ? null : new Date(json['allocationExpiration'])),
        'measurements': !exists(json, 'measurements') ? undefined : PackageMeasurementsFromJSON(json['measurements']),
        'fulfillmentStatus': !exists(json, 'fulfillmentStatus') ? undefined : json['fulfillmentStatus'],
    };
}

export function ProductToJSON(value?: Product | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mfgPartNumber': value.mfgPartNumber,
        'upc': value.upc,
        'sku': value.sku,
        'fulfillmentTypesSupported': value.fulfillmentTypesSupported,
        'imageAlternateText': value.imageAlternateText,
        'imageUrl': value.imageUrl,
        'variationProductCode': value.variationProductCode,
        'options': value.options === undefined ? undefined : (value.options === null ? null : (value.options as Array<any>).map(ProductOptionToJSON)),
        'properties': value.properties === undefined ? undefined : (value.properties === null ? null : (value.properties as Array<any>).map(ProductPropertyToJSON)),
        'categories': value.categories === undefined ? undefined : (value.categories === null ? null : (value.categories as Array<any>).map(CategoryToJSON)),
        'price': ProductPriceToJSON(value.price),
        'discountsRestricted': value.discountsRestricted,
        'discountsRestrictedStartDate': value.discountsRestrictedStartDate === undefined ? undefined : (value.discountsRestrictedStartDate === null ? null : value.discountsRestrictedStartDate.toISOString()),
        'discountsRestrictedEndDate': value.discountsRestrictedEndDate === undefined ? undefined : (value.discountsRestrictedEndDate === null ? null : value.discountsRestrictedEndDate.toISOString()),
        'isRecurring': value.isRecurring,
        'isTaxable': value.isTaxable,
        'productType': value.productType,
        'productUsage': value.productUsage,
        'bundledProducts': value.bundledProducts === undefined ? undefined : (value.bundledProducts === null ? null : (value.bundledProducts as Array<any>).map(BundledProductToJSON)),
        'fulfillmentFields': value.fulfillmentFields === undefined ? undefined : (value.fulfillmentFields === null ? null : (value.fulfillmentFields as Array<any>).map(FulfillmentFieldToJSON)),
        'productCode': value.productCode,
        'name': value.name,
        'description': value.description,
        'goodsType': value.goodsType,
        'isPackagedStandAlone': value.isPackagedStandAlone,
        'stock': ProductStockToJSON(value.stock),
        'productReservationId': value.productReservationId,
        'allocationId': value.allocationId,
        'allocationExpiration': value.allocationExpiration === undefined ? undefined : (value.allocationExpiration === null ? null : value.allocationExpiration.toISOString()),
        'measurements': PackageMeasurementsToJSON(value.measurements),
        'fulfillmentStatus': value.fulfillmentStatus,
    };
}

