/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PaymentActionTarget
 */
export interface PaymentActionTarget {
    /**
     * Specifies if the Mozu.CommerceRuntime.Contracts.Payments.PaymentActionTarget.TargetId is a Checkout Id, Order Id, or Return Id.
     * @type {string}
     * @memberof PaymentActionTarget
     */
    targetType?: string | null;
    /**
     * The Id of the Checkout/Order/Return to target.
     * @type {string}
     * @memberof PaymentActionTarget
     */
    targetId?: string | null;
    /**
     * The number of the Checkout/Order/Return to target.
     * @type {number}
     * @memberof PaymentActionTarget
     */
    targetNumber?: number | null;
}

/**
 * Check if a given object implements the PaymentActionTarget interface.
 */
export function instanceOfPaymentActionTarget(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PaymentActionTargetFromJSON(json: any): PaymentActionTarget {
    return PaymentActionTargetFromJSONTyped(json, false);
}

export function PaymentActionTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentActionTarget {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'targetType': !exists(json, 'targetType') ? undefined : json['targetType'],
        'targetId': !exists(json, 'targetId') ? undefined : json['targetId'],
        'targetNumber': !exists(json, 'targetNumber') ? undefined : json['targetNumber'],
    };
}

export function PaymentActionTargetToJSON(value?: PaymentActionTarget | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'targetType': value.targetType,
        'targetId': value.targetId,
        'targetNumber': value.targetNumber,
    };
}

