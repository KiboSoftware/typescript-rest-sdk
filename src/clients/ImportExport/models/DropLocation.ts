/* tslint:disable */
/* eslint-disable */
/**
 * Kibo MongoAdmin Service
 * OpenAPI Spec for Kibo MongoAdmin Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DropLocation
 */
export interface DropLocation {
    /**
     * 
     * @type {string}
     * @memberof DropLocation
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DropLocation
     */
    uri?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DropLocation
     */
    locationType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DropLocation
     */
    fileName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DropLocation
     */
    fileType?: string | null;
}

/**
 * Check if a given object implements the DropLocation interface.
 */
export function instanceOfDropLocation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DropLocationFromJSON(json: any): DropLocation {
    return DropLocationFromJSONTyped(json, false);
}

export function DropLocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): DropLocation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'uri': !exists(json, 'uri') ? undefined : json['uri'],
        'locationType': !exists(json, 'locationType') ? undefined : json['locationType'],
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'fileType': !exists(json, 'fileType') ? undefined : json['fileType'],
    };
}

export function DropLocationToJSON(value?: DropLocation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'uri': value.uri,
        'locationType': value.locationType,
        'fileName': value.fileName,
        'fileType': value.fileType,
    };
}

