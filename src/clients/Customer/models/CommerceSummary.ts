/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmount } from './CurrencyAmount';
import {
    CurrencyAmountFromJSON,
    CurrencyAmountFromJSONTyped,
    CurrencyAmountToJSON,
} from './CurrencyAmount';

/**
 * Commerce (orders and wishlists) on a customer account which lists all the orders the customer has made with the order date, order amount, and status. Includes cancellations and returns.  Also includes wishlist information.
 * @export
 * @interface CommerceSummary
 */
export interface CommerceSummary {
    /**
     * 
     * @type {CurrencyAmount}
     * @memberof CommerceSummary
     */
    totalOrderAmount?: CurrencyAmount;
    /**
     * Number of orders listed in the order history of a customer account.
     * @type {number}
     * @memberof CommerceSummary
     */
    orderCount?: number;
    /**
     * When the last order was placed.
     * @type {Date}
     * @memberof CommerceSummary
     */
    lastOrderDate?: Date | null;
    /**
     * Number of wishlists listed in the wishlist count of a customer account
     * @type {number}
     * @memberof CommerceSummary
     */
    wishlistCount?: number;
    /**
     * Number of visits for this customer across the entire tenant.
     * @type {number}
     * @memberof CommerceSummary
     */
    visitsCount?: number;
}

/**
 * Check if a given object implements the CommerceSummary interface.
 */
export function instanceOfCommerceSummary(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommerceSummaryFromJSON(json: any): CommerceSummary {
    return CommerceSummaryFromJSONTyped(json, false);
}

export function CommerceSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommerceSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalOrderAmount': !exists(json, 'totalOrderAmount') ? undefined : CurrencyAmountFromJSON(json['totalOrderAmount']),
        'orderCount': !exists(json, 'orderCount') ? undefined : json['orderCount'],
        'lastOrderDate': !exists(json, 'lastOrderDate') ? undefined : (json['lastOrderDate'] === null ? null : new Date(json['lastOrderDate'])),
        'wishlistCount': !exists(json, 'wishlistCount') ? undefined : json['wishlistCount'],
        'visitsCount': !exists(json, 'visitsCount') ? undefined : json['visitsCount'],
    };
}

export function CommerceSummaryToJSON(value?: CommerceSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalOrderAmount': CurrencyAmountToJSON(value.totalOrderAmount),
        'orderCount': value.orderCount,
        'lastOrderDate': value.lastOrderDate === undefined ? undefined : (value.lastOrderDate === null ? null : value.lastOrderDate.toISOString()),
        'wishlistCount': value.wishlistCount,
        'visitsCount': value.visitsCount,
    };
}

