/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';

/**
 * Log entry for any change made to a Credit.
 * 
 * The system will generate all entries.  Contract is for display only.
 * All values are ReadOnly.
 * @export
 * @interface CreditAuditEntry
 */
export interface CreditAuditEntry {
    /**
     * Mozu.Customer.Contracts.Credit.CreditAuditEntry.CreditAuditActivityType
     * @type {string}
     * @memberof CreditAuditEntry
     */
    activityType?: string | null;
    /**
     * Detials of what was done
     * @type {string}
     * @memberof CreditAuditEntry
     */
    details?: string | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof CreditAuditEntry
     */
    auditInfo?: AuditInfo;
    /**
     * 
     * @type {number}
     * @memberof CreditAuditEntry
     */
    activityTypeId?: number;
}

/**
 * Check if a given object implements the CreditAuditEntry interface.
 */
export function instanceOfCreditAuditEntry(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreditAuditEntryFromJSON(json: any): CreditAuditEntry {
    return CreditAuditEntryFromJSONTyped(json, false);
}

export function CreditAuditEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreditAuditEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'activityType': !exists(json, 'activityType') ? undefined : json['activityType'],
        'details': !exists(json, 'details') ? undefined : json['details'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'activityTypeId': !exists(json, 'activityTypeId') ? undefined : json['activityTypeId'],
    };
}

export function CreditAuditEntryToJSON(value?: CreditAuditEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activityType': value.activityType,
        'details': value.details,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'activityTypeId': value.activityTypeId,
    };
}

