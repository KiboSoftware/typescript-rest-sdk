/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountHierarchyNode } from './AccountHierarchyNode';
import {
    AccountHierarchyNodeFromJSON,
    AccountHierarchyNodeFromJSONTyped,
    AccountHierarchyNodeToJSON,
} from './AccountHierarchyNode';
import type { B2BAccount } from './B2BAccount';
import {
    B2BAccountFromJSON,
    B2BAccountFromJSONTyped,
    B2BAccountToJSON,
} from './B2BAccount';

/**
 * 
 * @export
 * @interface B2BAccountHierarchyResult
 */
export interface B2BAccountHierarchyResult {
    /**
     * All accounts belonging to this account hierarchy.
     * @type {Array<B2BAccount>}
     * @memberof B2BAccountHierarchyResult
     */
    accounts?: Array<B2BAccount> | null;
    /**
     * 
     * @type {AccountHierarchyNode}
     * @memberof B2BAccountHierarchyResult
     */
    hierarchy?: AccountHierarchyNode;
}

/**
 * Check if a given object implements the B2BAccountHierarchyResult interface.
 */
export function instanceOfB2BAccountHierarchyResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function B2BAccountHierarchyResultFromJSON(json: any): B2BAccountHierarchyResult {
    return B2BAccountHierarchyResultFromJSONTyped(json, false);
}

export function B2BAccountHierarchyResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): B2BAccountHierarchyResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accounts': !exists(json, 'accounts') ? undefined : (json['accounts'] === null ? null : (json['accounts'] as Array<any>).map(B2BAccountFromJSON)),
        'hierarchy': !exists(json, 'hierarchy') ? undefined : AccountHierarchyNodeFromJSON(json['hierarchy']),
    };
}

export function B2BAccountHierarchyResultToJSON(value?: B2BAccountHierarchyResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accounts': value.accounts === undefined ? undefined : (value.accounts === null ? null : (value.accounts as Array<any>).map(B2BAccountToJSON)),
        'hierarchy': AccountHierarchyNodeToJSON(value.hierarchy),
    };
}

