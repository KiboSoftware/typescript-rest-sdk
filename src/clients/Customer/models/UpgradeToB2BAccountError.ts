/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This class is used for reporting errors while upgrading the B2C account to B2B.
 * @export
 * @interface UpgradeToB2BAccountError
 */
export interface UpgradeToB2BAccountError {
    /**
     * 
     * @type {number}
     * @memberof UpgradeToB2BAccountError
     */
    accountID?: number;
    /**
     * 
     * @type {string}
     * @memberof UpgradeToB2BAccountError
     */
    errorMessage?: string | null;
}

/**
 * Check if a given object implements the UpgradeToB2BAccountError interface.
 */
export function instanceOfUpgradeToB2BAccountError(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpgradeToB2BAccountErrorFromJSON(json: any): UpgradeToB2BAccountError {
    return UpgradeToB2BAccountErrorFromJSONTyped(json, false);
}

export function UpgradeToB2BAccountErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpgradeToB2BAccountError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountID': !exists(json, 'accountID') ? undefined : json['accountID'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
    };
}

export function UpgradeToB2BAccountErrorToJSON(value?: UpgradeToB2BAccountError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountID': value.accountID,
        'errorMessage': value.errorMessage,
    };
}

