/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomerAccount } from './CustomerAccount';
import {
    CustomerAccountFromJSON,
    CustomerAccountFromJSONTyped,
    CustomerAccountToJSON,
} from './CustomerAccount';

/**
 * 
 * @export
 * @interface CustomerAuthTicket
 */
export interface CustomerAuthTicket {
    /**
     * 
     * @type {CustomerAccount}
     * @memberof CustomerAuthTicket
     */
    customerAccount?: CustomerAccount;
    /**
     * 
     * @type {string}
     * @memberof CustomerAuthTicket
     */
    accessToken?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CustomerAuthTicket
     */
    accessTokenExpiration?: Date;
    /**
     * 
     * @type {string}
     * @memberof CustomerAuthTicket
     */
    refreshToken?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CustomerAuthTicket
     */
    refreshTokenExpiration?: Date;
    /**
     * 
     * @type {string}
     * @memberof CustomerAuthTicket
     */
    userId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerAuthTicket
     */
    jwtAccessToken?: string | null;
}

/**
 * Check if a given object implements the CustomerAuthTicket interface.
 */
export function instanceOfCustomerAuthTicket(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerAuthTicketFromJSON(json: any): CustomerAuthTicket {
    return CustomerAuthTicketFromJSONTyped(json, false);
}

export function CustomerAuthTicketFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerAuthTicket {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customerAccount': !exists(json, 'customerAccount') ? undefined : CustomerAccountFromJSON(json['customerAccount']),
        'accessToken': !exists(json, 'accessToken') ? undefined : json['accessToken'],
        'accessTokenExpiration': !exists(json, 'accessTokenExpiration') ? undefined : (new Date(json['accessTokenExpiration'])),
        'refreshToken': !exists(json, 'refreshToken') ? undefined : json['refreshToken'],
        'refreshTokenExpiration': !exists(json, 'refreshTokenExpiration') ? undefined : (new Date(json['refreshTokenExpiration'])),
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'jwtAccessToken': !exists(json, 'jwtAccessToken') ? undefined : json['jwtAccessToken'],
    };
}

export function CustomerAuthTicketToJSON(value?: CustomerAuthTicket | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customerAccount': CustomerAccountToJSON(value.customerAccount),
        'accessToken': value.accessToken,
        'accessTokenExpiration': value.accessTokenExpiration === undefined ? undefined : (value.accessTokenExpiration.toISOString()),
        'refreshToken': value.refreshToken,
        'refreshTokenExpiration': value.refreshTokenExpiration === undefined ? undefined : (value.refreshTokenExpiration.toISOString()),
        'userId': value.userId,
        'jwtAccessToken': value.jwtAccessToken,
    };
}

