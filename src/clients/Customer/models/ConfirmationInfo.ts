/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Used to update a user's forgotten password. Contains the user's email address, new password, and the confirmation code 
 * that is required to update the password.
 * @export
 * @interface ConfirmationInfo
 */
export interface ConfirmationInfo {
    /**
     * UserName of the user who has requested a new password.
     * @type {string}
     * @memberof ConfirmationInfo
     */
    userName?: string | null;
    /**
     * Confirmation code that a user supplies when requesting a new password.
     * @type {string}
     * @memberof ConfirmationInfo
     */
    confirmationCode?: string | null;
    /**
     * The user's new password.
     * @type {string}
     * @memberof ConfirmationInfo
     */
    newPassword?: string | null;
}

/**
 * Check if a given object implements the ConfirmationInfo interface.
 */
export function instanceOfConfirmationInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConfirmationInfoFromJSON(json: any): ConfirmationInfo {
    return ConfirmationInfoFromJSONTyped(json, false);
}

export function ConfirmationInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfirmationInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'confirmationCode': !exists(json, 'confirmationCode') ? undefined : json['confirmationCode'],
        'newPassword': !exists(json, 'newPassword') ? undefined : json['newPassword'],
    };
}

export function ConfirmationInfoToJSON(value?: ConfirmationInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userName': value.userName,
        'confirmationCode': value.confirmationCode,
        'newPassword': value.newPassword,
    };
}

