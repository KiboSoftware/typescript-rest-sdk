/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PasswordInfo } from './PasswordInfo';
import {
    PasswordInfoFromJSON,
    PasswordInfoFromJSONTyped,
    PasswordInfoToJSON,
} from './PasswordInfo';

/**
 * Password information for an Account
 * @export
 * @interface AccountPasswordInfo
 */
export interface AccountPasswordInfo {
    /**
     * The Id of the Account which this password info applies
     * @type {number}
     * @memberof AccountPasswordInfo
     */
    accountId?: number;
    /**
     * If the account has multiple users, provide the Id of a specific user
     * @type {string}
     * @memberof AccountPasswordInfo
     */
    userId?: string | null;
    /**
     * Indicates to unlock the Account
     * @type {boolean}
     * @memberof AccountPasswordInfo
     */
    unlockAccount?: boolean | null;
    /**
     * 
     * @type {PasswordInfo}
     * @memberof AccountPasswordInfo
     */
    passwordInfo?: PasswordInfo;
}

/**
 * Check if a given object implements the AccountPasswordInfo interface.
 */
export function instanceOfAccountPasswordInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AccountPasswordInfoFromJSON(json: any): AccountPasswordInfo {
    return AccountPasswordInfoFromJSONTyped(json, false);
}

export function AccountPasswordInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountPasswordInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'unlockAccount': !exists(json, 'unlockAccount') ? undefined : json['unlockAccount'],
        'passwordInfo': !exists(json, 'passwordInfo') ? undefined : PasswordInfoFromJSON(json['passwordInfo']),
    };
}

export function AccountPasswordInfoToJSON(value?: AccountPasswordInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'userId': value.userId,
        'unlockAccount': value.unlockAccount,
        'passwordInfo': PasswordInfoToJSON(value.passwordInfo),
    };
}

