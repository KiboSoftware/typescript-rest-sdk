/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { CustomerSetAggregateInfo } from './CustomerSetAggregateInfo';
import {
    CustomerSetAggregateInfoFromJSON,
    CustomerSetAggregateInfoFromJSONTyped,
    CustomerSetAggregateInfoToJSON,
} from './CustomerSetAggregateInfo';
import type { CustomerSetSite } from './CustomerSetSite';
import {
    CustomerSetSiteFromJSON,
    CustomerSetSiteFromJSONTyped,
    CustomerSetSiteToJSON,
} from './CustomerSetSite';

/**
 * A customer segment.
 * @export
 * @interface CustomerSet
 */
export interface CustomerSet {
    /**
     * Unique identifier of the customer segment.
     * @type {string}
     * @memberof CustomerSet
     */
    code?: string | null;
    /**
     * Name of the customer segment.
     * @type {string}
     * @memberof CustomerSet
     */
    name?: string | null;
    /**
     * Description of the customer segment.
     * @type {string}
     * @memberof CustomerSet
     */
    description?: string | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof CustomerSet
     */
    auditInfo?: AuditInfo;
    /**
     * 
     * @type {Array<CustomerSetSite>}
     * @memberof CustomerSet
     */
    sites?: Array<CustomerSetSite> | null;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerSet
     */
    isDefault?: boolean;
    /**
     * 
     * @type {CustomerSetAggregateInfo}
     * @memberof CustomerSet
     */
    aggregateInfo?: CustomerSetAggregateInfo;
}

/**
 * Check if a given object implements the CustomerSet interface.
 */
export function instanceOfCustomerSet(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerSetFromJSON(json: any): CustomerSet {
    return CustomerSetFromJSONTyped(json, false);
}

export function CustomerSetFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerSet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'sites': !exists(json, 'sites') ? undefined : (json['sites'] === null ? null : (json['sites'] as Array<any>).map(CustomerSetSiteFromJSON)),
        'isDefault': !exists(json, 'isDefault') ? undefined : json['isDefault'],
        'aggregateInfo': !exists(json, 'aggregateInfo') ? undefined : CustomerSetAggregateInfoFromJSON(json['aggregateInfo']),
    };
}

export function CustomerSetToJSON(value?: CustomerSet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'name': value.name,
        'description': value.description,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'sites': value.sites === undefined ? undefined : (value.sites === null ? null : (value.sites as Array<any>).map(CustomerSetSiteToJSON)),
        'isDefault': value.isDefault,
        'aggregateInfo': CustomerSetAggregateInfoToJSON(value.aggregateInfo),
    };
}

