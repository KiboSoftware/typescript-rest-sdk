/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UpgradeToB2BAccountError } from './UpgradeToB2BAccountError';
import {
    UpgradeToB2BAccountErrorFromJSON,
    UpgradeToB2BAccountErrorFromJSONTyped,
    UpgradeToB2BAccountErrorToJSON,
} from './UpgradeToB2BAccountError';

/**
 * This class is used for sending custom response while upgrading the B2C accounts to B2B.
 * The custom response returns a list of success, skipped and error accountIDs while upgrade.
 * @export
 * @interface UpgradeToB2BAccountResponse
 */
export interface UpgradeToB2BAccountResponse {
    /**
     * 
     * @type {Array<number>}
     * @memberof UpgradeToB2BAccountResponse
     */
    successAccountIds?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof UpgradeToB2BAccountResponse
     */
    skippedAccountIds?: Array<number> | null;
    /**
     * 
     * @type {Array<UpgradeToB2BAccountError>}
     * @memberof UpgradeToB2BAccountResponse
     */
    errorAccountIds?: Array<UpgradeToB2BAccountError> | null;
}

/**
 * Check if a given object implements the UpgradeToB2BAccountResponse interface.
 */
export function instanceOfUpgradeToB2BAccountResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpgradeToB2BAccountResponseFromJSON(json: any): UpgradeToB2BAccountResponse {
    return UpgradeToB2BAccountResponseFromJSONTyped(json, false);
}

export function UpgradeToB2BAccountResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpgradeToB2BAccountResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'successAccountIds': !exists(json, 'successAccountIds') ? undefined : json['successAccountIds'],
        'skippedAccountIds': !exists(json, 'skippedAccountIds') ? undefined : json['skippedAccountIds'],
        'errorAccountIds': !exists(json, 'errorAccountIds') ? undefined : (json['errorAccountIds'] === null ? null : (json['errorAccountIds'] as Array<any>).map(UpgradeToB2BAccountErrorFromJSON)),
    };
}

export function UpgradeToB2BAccountResponseToJSON(value?: UpgradeToB2BAccountResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'successAccountIds': value.successAccountIds,
        'skippedAccountIds': value.skippedAccountIds,
        'errorAccountIds': value.errorAccountIds === undefined ? undefined : (value.errorAccountIds === null ? null : (value.errorAccountIds as Array<any>).map(UpgradeToB2BAccountErrorToJSON)),
    };
}

