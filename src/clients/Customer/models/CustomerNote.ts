/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';

/**
 * Note added to the customer account. Merchants can add internal notes, for example, to keep track of a customer's interests or complaints.
 * @export
 * @interface CustomerNote
 */
export interface CustomerNote {
    /**
     * Unique identifier of the note.
     * @type {number}
     * @memberof CustomerNote
     */
    id?: number;
    /**
     * Content of the note that the merchant added.
     * @type {string}
     * @memberof CustomerNote
     */
    content?: string | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof CustomerNote
     */
    auditInfo?: AuditInfo;
}

/**
 * Check if a given object implements the CustomerNote interface.
 */
export function instanceOfCustomerNote(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerNoteFromJSON(json: any): CustomerNote {
    return CustomerNoteFromJSONTyped(json, false);
}

export function CustomerNoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerNote {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
    };
}

export function CustomerNoteToJSON(value?: CustomerNote | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'content': value.content,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
    };
}

