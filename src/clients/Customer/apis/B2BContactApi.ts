/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  ExtendedCustomerContactCollection,
} from '../models';

export interface GetB2BContactsRequest {
    startIndex?: number;
    pageSize?: number;
    sortBy?: string;
    filter?: string;
    q?: string;
    qLimit?: number;
    responseFields?: string;
}

/**
 * B2BContactApi - interface
 * 
 * @export
 * @interface B2BContactApiInterface
 */
export interface B2BContactApiInterface {
    /**
     * Retrieves a list of B2B contacts according to any specified filter criteria and sort options.
     * @summary Get B2B Contacts
     * @param {number} [startIndex] Used to page results from a query. Indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, startIndex&#x3D;3. The default value is 0. Optional.
     * @param {number} [pageSize] Used to page results from a query. Indicates the maximum number of entities to return from a query. The default value is 20 and the maximum value is 200. Optional.
     * @param {string} [sortBy] The element to sort the results by and the order in which the results appear. Either ascending (a-z) or descending (z-a) order. Optional.
     * @param {string} [filter] A set of filter expressions representing the search parameters for a query: eq&#x3D;equals, ne&#x3D;not equals, gt&#x3D;greater than, lt &#x3D; less than or equals, gt &#x3D; greater than or equals, lt &#x3D; less than or equals, sw &#x3D; starts with, or cont &#x3D; contains. Optional.
     * @param {string} [q] 
     * @param {number} [qLimit] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof B2BContactApiInterface
     */
    getB2BContactsRaw(requestParameters: GetB2BContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExtendedCustomerContactCollection>>;

    /**
     * Retrieves a list of B2B contacts according to any specified filter criteria and sort options.
     * Get B2B Contacts
     */
    getB2BContacts(requestParameters: GetB2BContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExtendedCustomerContactCollection>;

}

/**
 * 
 */
export class B2BContactApi extends runtime.BaseAPI implements B2BContactApiInterface {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Retrieves a list of B2B contacts according to any specified filter criteria and sort options.
     * Get B2B Contacts
     */


    async getB2BContactsRaw(requestParameters: GetB2BContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExtendedCustomerContactCollection>> {
        const queryParameters: any = {};

        if (requestParameters.startIndex !== undefined) {
            queryParameters['startIndex'] = requestParameters.startIndex;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['pageSize'] = requestParameters.pageSize;
        }

        if (requestParameters.sortBy !== undefined) {
            queryParameters['sortBy'] = requestParameters.sortBy;
        }

        if (requestParameters.filter !== undefined) {
            queryParameters['filter'] = requestParameters.filter;
        }

        if (requestParameters.q !== undefined) {
            queryParameters['q'] = requestParameters.q;
        }

        if (requestParameters.qLimit !== undefined) {
            queryParameters['qLimit'] = requestParameters.qLimit;
        }

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/customer/b2bcontacts`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a list of B2B contacts according to any specified filter criteria and sort options.
     * Get B2B Contacts
     */
    async getB2BContacts(requestParameters: GetB2BContactsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExtendedCustomerContactCollection> {
        const response = await this.getB2BContactsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
