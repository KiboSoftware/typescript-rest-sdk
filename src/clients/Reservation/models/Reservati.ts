/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Reservation Web API
 * OpenAPI Spec for Kibo Reservation Web API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInf } from './AuditInf';
import {
    AuditInfFromJSON,
    AuditInfFromJSONTyped,
    AuditInfToJSON,
} from './AuditInf';
import type { ChangeMessage } from './ChangeMessage';
import {
    ChangeMessageFromJSON,
    ChangeMessageFromJSONTyped,
    ChangeMessageToJSON,
} from './ChangeMessage';
import type { ReservationItem } from './ReservationItem';
import {
    ReservationItemFromJSON,
    ReservationItemFromJSONTyped,
    ReservationItemToJSON,
} from './ReservationItem';

/**
 * 
 * @export
 * @interface Reservati
 */
export interface Reservati {
    /**
     * 
     * @type {string}
     * @memberof Reservati
     */
    id?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Reservati
     */
    siteId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Reservati
     */
    tenantId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Reservati
     */
    userId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Reservati
     */
    customerAccountId?: number | null;
    /**
     * 
     * @type {Array<ReservationItem>}
     * @memberof Reservati
     */
    items?: Array<ReservationItem> | null;
    /**
     * 
     * @type {string}
     * @memberof Reservati
     */
    cartId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Reservati
     */
    expirationDateTime?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Reservati
     */
    zipCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Reservati
     */
    status?: string | null;
    /**
     * 
     * @type {AuditInf}
     * @memberof Reservati
     */
    auditInfo?: AuditInf;
    /**
     * 
     * @type {Array<ChangeMessage>}
     * @memberof Reservati
     */
    changeMessages?: Array<ChangeMessage> | null;
}

/**
 * Check if a given object implements the Reservati interface.
 */
export function instanceOfReservati(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReservatiFromJSON(json: any): Reservati {
    return ReservatiFromJSONTyped(json, false);
}

export function ReservatiFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reservati {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'siteId': !exists(json, 'siteId') ? undefined : json['siteId'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'customerAccountId': !exists(json, 'customerAccountId') ? undefined : json['customerAccountId'],
        'items': !exists(json, 'items') ? undefined : (json['items'] === null ? null : (json['items'] as Array<any>).map(ReservationItemFromJSON)),
        'cartId': !exists(json, 'cartId') ? undefined : json['cartId'],
        'expirationDateTime': !exists(json, 'expirationDateTime') ? undefined : (json['expirationDateTime'] === null ? null : new Date(json['expirationDateTime'])),
        'zipCode': !exists(json, 'zipCode') ? undefined : json['zipCode'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfFromJSON(json['auditInfo']),
        'changeMessages': !exists(json, 'changeMessages') ? undefined : (json['changeMessages'] === null ? null : (json['changeMessages'] as Array<any>).map(ChangeMessageFromJSON)),
    };
}

export function ReservatiToJSON(value?: Reservati | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'siteId': value.siteId,
        'tenantId': value.tenantId,
        'userId': value.userId,
        'customerAccountId': value.customerAccountId,
        'items': value.items === undefined ? undefined : (value.items === null ? null : (value.items as Array<any>).map(ReservationItemToJSON)),
        'cartId': value.cartId,
        'expirationDateTime': value.expirationDateTime === undefined ? undefined : (value.expirationDateTime === null ? null : value.expirationDateTime.toISOString()),
        'zipCode': value.zipCode,
        'status': value.status,
        'auditInfo': AuditInfToJSON(value.auditInfo),
        'changeMessages': value.changeMessages === undefined ? undefined : (value.changeMessages === null ? null : (value.changeMessages as Array<any>).map(ChangeMessageToJSON)),
    };
}

