/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Reference Service
 * OpenAPI Spec for Kibo Reference Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TimeZone
 */
export interface TimeZone {
    /**
     * The Id of the TimeZone (examples include: "Central Standard Time", ...)
     * @type {string}
     * @memberof TimeZone
     */
    id?: string | null;
    /**
     * The current offset for this TimeZone in hours
     * @type {number}
     * @memberof TimeZone
     */
    offset?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TimeZone
     */
    isDaylightSavingsTime?: boolean;
}

/**
 * Check if a given object implements the TimeZone interface.
 */
export function instanceOfTimeZone(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TimeZoneFromJSON(json: any): TimeZone {
    return TimeZoneFromJSONTyped(json, false);
}

export function TimeZoneFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeZone {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'isDaylightSavingsTime': !exists(json, 'isDaylightSavingsTime') ? undefined : json['isDaylightSavingsTime'],
    };
}

export function TimeZoneToJSON(value?: TimeZone | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'offset': value.offset,
        'isDaylightSavingsTime': value.isDaylightSavingsTime,
    };
}

