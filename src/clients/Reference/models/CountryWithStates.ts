/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Reference Service
 * OpenAPI Spec for Kibo Reference Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { State } from './State';
import {
    StateFromJSON,
    StateFromJSONTyped,
    StateToJSON,
} from './State';

/**
 * 
 * @export
 * @interface CountryWithStates
 */
export interface CountryWithStates {
    /**
     * 
     * @type {string}
     * @memberof CountryWithStates
     */
    code?: string | null;
    /**
     * 
     * @type {Array<State>}
     * @memberof CountryWithStates
     */
    states?: Array<State> | null;
}

/**
 * Check if a given object implements the CountryWithStates interface.
 */
export function instanceOfCountryWithStates(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CountryWithStatesFromJSON(json: any): CountryWithStates {
    return CountryWithStatesFromJSONTyped(json, false);
}

export function CountryWithStatesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CountryWithStates {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'states': !exists(json, 'states') ? undefined : (json['states'] === null ? null : (json['states'] as Array<any>).map(StateFromJSON)),
    };
}

export function CountryWithStatesToJSON(value?: CountryWithStates | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'states': value.states === undefined ? undefined : (value.states === null ? null : (value.states as Array<any>).map(StateToJSON)),
    };
}

