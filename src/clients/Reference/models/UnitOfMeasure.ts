/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Reference Service
 * OpenAPI Spec for Kibo Reference Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UnitOfMeasure
 */
export interface UnitOfMeasure {
    /**
     * 
     * @type {string}
     * @memberof UnitOfMeasure
     */
    symbol?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UnitOfMeasure
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UnitOfMeasure
     */
    pluralName?: string | null;
    /**
     * This value can be "Length", "Weight", or "Volume"
     * @type {string}
     * @memberof UnitOfMeasure
     */
    unitOfMeasureType?: string | null;
}

/**
 * Check if a given object implements the UnitOfMeasure interface.
 */
export function instanceOfUnitOfMeasure(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UnitOfMeasureFromJSON(json: any): UnitOfMeasure {
    return UnitOfMeasureFromJSONTyped(json, false);
}

export function UnitOfMeasureFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnitOfMeasure {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'pluralName': !exists(json, 'pluralName') ? undefined : json['pluralName'],
        'unitOfMeasureType': !exists(json, 'unitOfMeasureType') ? undefined : json['unitOfMeasureType'],
    };
}

export function UnitOfMeasureToJSON(value?: UnitOfMeasure | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'symbol': value.symbol,
        'name': value.name,
        'pluralName': value.pluralName,
        'unitOfMeasureType': value.unitOfMeasureType,
    };
}

