/* tslint:disable */
/* eslint-disable */
/**
 * Kibo ShippingRuntime Service
 * OpenAPI Spec for Kibo ShippingRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
} from './Address';
import type { CustomAttribute } from './CustomAttribute';
import {
    CustomAttributeFromJSON,
    CustomAttributeFromJSONTyped,
    CustomAttributeToJSON,
} from './CustomAttribute';
import type { RateRequestAttribute } from './RateRequestAttribute';
import {
    RateRequestAttributeFromJSON,
    RateRequestAttributeFromJSONTyped,
    RateRequestAttributeToJSON,
} from './RateRequestAttribute';
import type { RateRequestItem } from './RateRequestItem';
import {
    RateRequestItemFromJSON,
    RateRequestItemFromJSONTyped,
    RateRequestItemToJSON,
} from './RateRequestItem';

/**
 * 
 * @export
 * @interface RateRequest
 */
export interface RateRequest {
    /**
     * 
     * @type {string}
     * @memberof RateRequest
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RateRequest
     */
    isoCurrencyCode?: string | null;
    /**
     * 
     * @type {Address}
     * @memberof RateRequest
     */
    originAddress?: Address;
    /**
     * 
     * @type {Address}
     * @memberof RateRequest
     */
    destinationAddress?: Address;
    /**
     * Optional.  If one or more Carrier Ids are specified then only the rates for the specified carrier('s/s') configured service types or shipping methods will be calculated resulting in better performance.
     * @type {Array<string>}
     * @memberof RateRequest
     */
    carrierIds?: Array<string> | null;
    /**
     * Optional.  If one or more Shipping Service Type Codes are specified then only the specified rates for the specified carrier('s/s') configured service types or shipping methods will be calculated resulting in better performance.
     * @type {Array<string>}
     * @memberof RateRequest
     */
    shippingServiceTypes?: Array<string> | null;
    /**
     * The OrderTotal to be used in rate calculation
     * @type {number}
     * @memberof RateRequest
     */
    orderTotal?: number | null;
    /**
     * The Order SubTotal After Discounts to be used in rate calculation
     * @type {number}
     * @memberof RateRequest
     */
    orderDiscountedSubTotal?: number | null;
    /**
     * The order Handling total after discounts to be used in rate calculation
     * @type {number}
     * @memberof RateRequest
     */
    handlingTotal?: number | null;
    /**
     * The Order ID to be used in rate calculation
     * Informational only
     * @type {string}
     * @memberof RateRequest
     */
    relatedOrderId?: string | null;
    /**
     * The Order Number to be used in rate calculation
     * Informational only
     * @type {number}
     * @memberof RateRequest
     */
    relatedOrderNumber?: number | null;
    /**
     * Is the destination address a commercial address?
     * @type {boolean}
     * @memberof RateRequest
     */
    isDestinationAddressCommercial?: boolean | null;
    /**
     * 
     * @type {Array<RateRequestItem>}
     * @memberof RateRequest
     */
    items?: Array<RateRequestItem> | null;
    /**
     * Estimate Date/Time when the shipment for this will be sent.  Primarily utilize to estimate delivery date.
     * @type {Date}
     * @memberof RateRequest
     */
    estimatedShipmentDate?: Date | null;
    /**
     * Order Attributes. Made available for Arc.js to use
     * @type {Array<RateRequestAttribute>}
     * @memberof RateRequest
     */
    attributes?: Array<RateRequestAttribute> | null;
    /**
     * 
     * @type {Array<CustomAttribute>}
     * @memberof RateRequest
     * @deprecated
     */
    customAttributes?: Array<CustomAttribute> | null;
    /**
     * 
     * @type {object}
     * @memberof RateRequest
     */
    data?: object | null;
}

/**
 * Check if a given object implements the RateRequest interface.
 */
export function instanceOfRateRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RateRequestFromJSON(json: any): RateRequest {
    return RateRequestFromJSONTyped(json, false);
}

export function RateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isoCurrencyCode': !exists(json, 'isoCurrencyCode') ? undefined : json['isoCurrencyCode'],
        'originAddress': !exists(json, 'originAddress') ? undefined : AddressFromJSON(json['originAddress']),
        'destinationAddress': !exists(json, 'destinationAddress') ? undefined : AddressFromJSON(json['destinationAddress']),
        'carrierIds': !exists(json, 'carrierIds') ? undefined : json['carrierIds'],
        'shippingServiceTypes': !exists(json, 'shippingServiceTypes') ? undefined : json['shippingServiceTypes'],
        'orderTotal': !exists(json, 'orderTotal') ? undefined : json['orderTotal'],
        'orderDiscountedSubTotal': !exists(json, 'orderDiscountedSubTotal') ? undefined : json['orderDiscountedSubTotal'],
        'handlingTotal': !exists(json, 'handlingTotal') ? undefined : json['handlingTotal'],
        'relatedOrderId': !exists(json, 'relatedOrderId') ? undefined : json['relatedOrderId'],
        'relatedOrderNumber': !exists(json, 'relatedOrderNumber') ? undefined : json['relatedOrderNumber'],
        'isDestinationAddressCommercial': !exists(json, 'isDestinationAddressCommercial') ? undefined : json['isDestinationAddressCommercial'],
        'items': !exists(json, 'items') ? undefined : (json['items'] === null ? null : (json['items'] as Array<any>).map(RateRequestItemFromJSON)),
        'estimatedShipmentDate': !exists(json, 'estimatedShipmentDate') ? undefined : (json['estimatedShipmentDate'] === null ? null : new Date(json['estimatedShipmentDate'])),
        'attributes': !exists(json, 'attributes') ? undefined : (json['attributes'] === null ? null : (json['attributes'] as Array<any>).map(RateRequestAttributeFromJSON)),
        'customAttributes': !exists(json, 'customAttributes') ? undefined : (json['customAttributes'] === null ? null : (json['customAttributes'] as Array<any>).map(CustomAttributeFromJSON)),
        'data': !exists(json, 'data') ? undefined : json['data'],
    };
}

export function RateRequestToJSON(value?: RateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'isoCurrencyCode': value.isoCurrencyCode,
        'originAddress': AddressToJSON(value.originAddress),
        'destinationAddress': AddressToJSON(value.destinationAddress),
        'carrierIds': value.carrierIds,
        'shippingServiceTypes': value.shippingServiceTypes,
        'orderTotal': value.orderTotal,
        'orderDiscountedSubTotal': value.orderDiscountedSubTotal,
        'handlingTotal': value.handlingTotal,
        'relatedOrderId': value.relatedOrderId,
        'relatedOrderNumber': value.relatedOrderNumber,
        'isDestinationAddressCommercial': value.isDestinationAddressCommercial,
        'items': value.items === undefined ? undefined : (value.items === null ? null : (value.items as Array<any>).map(RateRequestItemToJSON)),
        'estimatedShipmentDate': value.estimatedShipmentDate === undefined ? undefined : (value.estimatedShipmentDate === null ? null : value.estimatedShipmentDate.toISOString()),
        'attributes': value.attributes === undefined ? undefined : (value.attributes === null ? null : (value.attributes as Array<any>).map(RateRequestAttributeToJSON)),
        'customAttributes': value.customAttributes === undefined ? undefined : (value.customAttributes === null ? null : (value.customAttributes as Array<any>).map(CustomAttributeToJSON)),
        'data': value.data,
    };
}

