/* tslint:disable */
/* eslint-disable */
/**
 * Kibo ShippingRuntime Service
 * OpenAPI Spec for Kibo ShippingRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Category } from './Category';
import {
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
} from './Category';
import type { ItemMeasurements } from './ItemMeasurements';
import {
    ItemMeasurementsFromJSON,
    ItemMeasurementsFromJSONTyped,
    ItemMeasurementsToJSON,
} from './ItemMeasurements';
import type { ProductOption } from './ProductOption';
import {
    ProductOptionFromJSON,
    ProductOptionFromJSONTyped,
    ProductOptionToJSON,
} from './ProductOption';
import type { ProductProperty } from './ProductProperty';
import {
    ProductPropertyFromJSON,
    ProductPropertyFromJSONTyped,
    ProductPropertyToJSON,
} from './ProductProperty';

/**
 * 
 * @export
 * @interface ProductSummary
 */
export interface ProductSummary {
    /**
     * Merchant-created code that uniquely identifies the product.
     * @type {string}
     * @memberof ProductSummary
     */
    productCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductSummary
     */
    productType?: string | null;
    /**
     * 
     * @type {Array<Category>}
     * @memberof ProductSummary
     */
    categories?: Array<Category> | null;
    /**
     * 
     * @type {ItemMeasurements}
     * @memberof ProductSummary
     */
    unitMeasurements?: ItemMeasurements;
    /**
     * 
     * @type {Array<ProductProperty>}
     * @memberof ProductSummary
     */
    properties?: Array<ProductProperty> | null;
    /**
     * 
     * @type {Array<ProductOption>}
     * @memberof ProductSummary
     */
    options?: Array<ProductOption> | null;
    /**
     * Product name/description
     * @type {string}
     * @memberof ProductSummary
     */
    productDescription?: string | null;
    /**
     * Product quantity
     * @type {number}
     * @memberof ProductSummary
     */
    quantity?: number;
    /**
     * Price (unit price * quantity)
     * @type {number}
     * @memberof ProductSummary
     */
    price?: number;
}

/**
 * Check if a given object implements the ProductSummary interface.
 */
export function instanceOfProductSummary(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductSummaryFromJSON(json: any): ProductSummary {
    return ProductSummaryFromJSONTyped(json, false);
}

export function ProductSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'productType': !exists(json, 'productType') ? undefined : json['productType'],
        'categories': !exists(json, 'categories') ? undefined : (json['categories'] === null ? null : (json['categories'] as Array<any>).map(CategoryFromJSON)),
        'unitMeasurements': !exists(json, 'unitMeasurements') ? undefined : ItemMeasurementsFromJSON(json['unitMeasurements']),
        'properties': !exists(json, 'properties') ? undefined : (json['properties'] === null ? null : (json['properties'] as Array<any>).map(ProductPropertyFromJSON)),
        'options': !exists(json, 'options') ? undefined : (json['options'] === null ? null : (json['options'] as Array<any>).map(ProductOptionFromJSON)),
        'productDescription': !exists(json, 'productDescription') ? undefined : json['productDescription'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'price': !exists(json, 'price') ? undefined : json['price'],
    };
}

export function ProductSummaryToJSON(value?: ProductSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productCode': value.productCode,
        'productType': value.productType,
        'categories': value.categories === undefined ? undefined : (value.categories === null ? null : (value.categories as Array<any>).map(CategoryToJSON)),
        'unitMeasurements': ItemMeasurementsToJSON(value.unitMeasurements),
        'properties': value.properties === undefined ? undefined : (value.properties === null ? null : (value.properties as Array<any>).map(ProductPropertyToJSON)),
        'options': value.options === undefined ? undefined : (value.options === null ? null : (value.options as Array<any>).map(ProductOptionToJSON)),
        'productDescription': value.productDescription,
        'quantity': value.quantity,
        'price': value.price,
    };
}

