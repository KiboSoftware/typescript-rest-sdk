/* tslint:disable */
/* eslint-disable */
/**
 * Kibo ShippingRuntime Service
 * OpenAPI Spec for Kibo ShippingRuntime Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomAttribute
 */
export interface CustomAttribute {
    /**
     * 
     * @type {Array<CustomAttribute>}
     * @memberof CustomAttribute
     */
    childAttributes?: Array<CustomAttribute> | null;
    /**
     * 
     * @type {string}
     * @memberof CustomAttribute
     */
    key?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CustomAttribute
     */
    value?: string | null;
}

/**
 * Check if a given object implements the CustomAttribute interface.
 */
export function instanceOfCustomAttribute(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomAttributeFromJSON(json: any): CustomAttribute {
    return CustomAttributeFromJSONTyped(json, false);
}

export function CustomAttributeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomAttribute {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'childAttributes': !exists(json, 'childAttributes') ? undefined : (json['childAttributes'] === null ? null : (json['childAttributes'] as Array<any>).map(CustomAttributeFromJSON)),
        'key': !exists(json, 'key') ? undefined : json['key'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function CustomAttributeToJSON(value?: CustomAttribute | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'childAttributes': value.childAttributes === undefined ? undefined : (value.childAttributes === null ? null : (value.childAttributes as Array<any>).map(CustomAttributeToJSON)),
        'key': value.key,
        'value': value.value,
    };
}

