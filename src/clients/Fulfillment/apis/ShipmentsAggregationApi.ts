/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  ErrorItem,
  GetShipmentsAggregationRequest,
  RemoveSpecificShipmentFromConsolidationGroup400Response,
  ShipmentsAggregationResponseDto,
} from '../models';


export namespace shipmentsAggregationApiParams { 
    export interface GetShipmentsAggregationOperationRequest {
        request: GetShipmentsAggregationRequest;
    }
}
/**
* ShipmentsAggregationApiService - interface
* 
* @export
* @interface ShipmentsAggregationApi
*/
export interface ShipmentsAggregationApiService {
    /**
    * Get Shipments Aggregation
    * @summary Get Shipments Aggregation
    * @param {GetShipmentsAggregationRequest} request 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ShipmentsAggregationApiInterface
    */
    getShipmentsAggregationRaw(requestParameters: shipmentsAggregationApiParams.GetShipmentsAggregationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentsAggregationResponseDto>>;

    /**
    * Get Shipments Aggregation
    * Get Shipments Aggregation
    */
    getShipmentsAggregation(requestParameters: shipmentsAggregationApiParams.GetShipmentsAggregationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentsAggregationResponseDto>;

}


/**
 * 
 */
export class ShipmentsAggregationApi extends runtime.BaseAPI implements ShipmentsAggregationApiService {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Get Shipments Aggregation
     * Get Shipments Aggregation
     */


    async getShipmentsAggregationRaw(requestParameters: shipmentsAggregationApiParams.GetShipmentsAggregationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentsAggregationResponseDto>> {
        if (requestParameters.request === null || requestParameters.request === undefined) {
            throw new runtime.RequiredError('request','Required parameter requestParameters.request was null or undefined when calling getShipmentsAggregation.');
        }

        const queryParameters: any = {};

        if (requestParameters.request !== undefined) {
            queryParameters['request'] = requestParameters.request;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/aggregation`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Get Shipments Aggregation
     * Get Shipments Aggregation
     */
    async getShipmentsAggregation(requestParameters: shipmentsAggregationApiParams.GetShipmentsAggregationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentsAggregationResponseDto> {
        const response = await this.getShipmentsAggregationRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
