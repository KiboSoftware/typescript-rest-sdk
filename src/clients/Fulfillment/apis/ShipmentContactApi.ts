/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  EntityModelOfContact,
  UpdateContactRequest,
} from '../models';

export interface ShipmentContactApiDeleteAlternateContactUsingDELETERequest {
    shipmentNumber: number;
    xVolTenant: number;
    ifMatch?: string;
    xVolSite?: number;
}

export interface ShipmentContactApiGetAlternateContactUsingGETRequest {
    shipmentNumber: number;
    xVolTenant: number;
    xVolSite?: number;
    responseFields?: string;
}

export interface ShipmentContactApiGetCustomerContactUsingGETRequest {
    shipmentNumber: number;
    xVolTenant: number;
    xVolSite?: number;
    responseFields?: string;
}

export interface ShipmentContactApiGetDestinationContactUsingGETRequest {
    shipmentNumber: number;
    xVolTenant: number;
    xVolSite?: number;
    responseFields?: string;
}

export interface ShipmentContactApiUpdateAlternateContactUsingPUTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    updateContactRequest: UpdateContactRequest;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

export interface ShipmentContactApiUpdateCustomerContactUsingPUTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    updateContactRequest: UpdateContactRequest;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

export interface ShipmentContactApiUpdateDestinationContactUsingPUTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    updateContactRequest: UpdateContactRequest;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

/**
 * ShipmentContactApi - interface
 * 
 * @export
 * @interface ShipmentContactApiInterface
 */
export interface ShipmentContactApiInterface {
    /**
     * deleteAlternateContact
     * @summary deleteAlternateContact
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentContactApiInterface
     */
    deleteAlternateContactUsingDELETERaw(requestParameters: ShipmentContactApiDeleteAlternateContactUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * deleteAlternateContact
     * deleteAlternateContact
     */
    deleteAlternateContactUsingDELETE(requestParameters: ShipmentContactApiDeleteAlternateContactUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * getAlternateContact
     * @summary getAlternateContact
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentContactApiInterface
     */
    getAlternateContactUsingGETRaw(requestParameters: ShipmentContactApiGetAlternateContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>>;

    /**
     * getAlternateContact
     * getAlternateContact
     */
    getAlternateContactUsingGET(requestParameters: ShipmentContactApiGetAlternateContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact>;

    /**
     * getCustomerContact
     * @summary getCustomerContact
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentContactApiInterface
     */
    getCustomerContactUsingGETRaw(requestParameters: ShipmentContactApiGetCustomerContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>>;

    /**
     * getCustomerContact
     * getCustomerContact
     */
    getCustomerContactUsingGET(requestParameters: ShipmentContactApiGetCustomerContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact>;

    /**
     * getDestinationContact
     * @summary getDestinationContact
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentContactApiInterface
     */
    getDestinationContactUsingGETRaw(requestParameters: ShipmentContactApiGetDestinationContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>>;

    /**
     * getDestinationContact
     * getDestinationContact
     */
    getDestinationContactUsingGET(requestParameters: ShipmentContactApiGetDestinationContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact>;

    /**
     * updateAlternateContact
     * @summary updateAlternateContact
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {UpdateContactRequest} updateContactRequest updateContactRequest
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentContactApiInterface
     */
    updateAlternateContactUsingPUTRaw(requestParameters: ShipmentContactApiUpdateAlternateContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>>;

    /**
     * updateAlternateContact
     * updateAlternateContact
     */
    updateAlternateContactUsingPUT(requestParameters: ShipmentContactApiUpdateAlternateContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact>;

    /**
     * updateCustomerContact
     * @summary updateCustomerContact
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {UpdateContactRequest} updateContactRequest updateContactRequest
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentContactApiInterface
     */
    updateCustomerContactUsingPUTRaw(requestParameters: ShipmentContactApiUpdateCustomerContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>>;

    /**
     * updateCustomerContact
     * updateCustomerContact
     */
    updateCustomerContactUsingPUT(requestParameters: ShipmentContactApiUpdateCustomerContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact>;

    /**
     * updateDestinationContact
     * @summary updateDestinationContact
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {UpdateContactRequest} updateContactRequest updateContactRequest
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentContactApiInterface
     */
    updateDestinationContactUsingPUTRaw(requestParameters: ShipmentContactApiUpdateDestinationContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>>;

    /**
     * updateDestinationContact
     * updateDestinationContact
     */
    updateDestinationContactUsingPUT(requestParameters: ShipmentContactApiUpdateDestinationContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact>;

}

/**
 * 
 */
export class ShipmentContactApi extends runtime.BaseAPI implements ShipmentContactApiInterface {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * deleteAlternateContact
     * deleteAlternateContact
     */


    async deleteAlternateContactUsingDELETERaw(requestParameters: ShipmentContactApiDeleteAlternateContactUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling deleteAlternateContactUsingDELETE.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling deleteAlternateContactUsingDELETE.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/alternateContact`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * deleteAlternateContact
     * deleteAlternateContact
     */
    async deleteAlternateContactUsingDELETE(requestParameters: ShipmentContactApiDeleteAlternateContactUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteAlternateContactUsingDELETERaw(requestParameters, initOverrides);
    }

    /**
     * getAlternateContact
     * getAlternateContact
     */


    async getAlternateContactUsingGETRaw(requestParameters: ShipmentContactApiGetAlternateContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling getAlternateContactUsingGET.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getAlternateContactUsingGET.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/alternateContact`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * getAlternateContact
     * getAlternateContact
     */
    async getAlternateContactUsingGET(requestParameters: ShipmentContactApiGetAlternateContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact> {
        const response = await this.getAlternateContactUsingGETRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * getCustomerContact
     * getCustomerContact
     */


    async getCustomerContactUsingGETRaw(requestParameters: ShipmentContactApiGetCustomerContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling getCustomerContactUsingGET.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getCustomerContactUsingGET.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/customerContact`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * getCustomerContact
     * getCustomerContact
     */
    async getCustomerContactUsingGET(requestParameters: ShipmentContactApiGetCustomerContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact> {
        const response = await this.getCustomerContactUsingGETRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * getDestinationContact
     * getDestinationContact
     */


    async getDestinationContactUsingGETRaw(requestParameters: ShipmentContactApiGetDestinationContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling getDestinationContactUsingGET.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getDestinationContactUsingGET.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/destinationContact`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * getDestinationContact
     * getDestinationContact
     */
    async getDestinationContactUsingGET(requestParameters: ShipmentContactApiGetDestinationContactUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact> {
        const response = await this.getDestinationContactUsingGETRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * updateAlternateContact
     * updateAlternateContact
     */


    async updateAlternateContactUsingPUTRaw(requestParameters: ShipmentContactApiUpdateAlternateContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling updateAlternateContactUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling updateAlternateContactUsingPUT.');
        }

        if (requestParameters.updateContactRequest === null || requestParameters.updateContactRequest === undefined) {
            throw new runtime.RequiredError('updateContactRequest','Required parameter requestParameters.updateContactRequest was null or undefined when calling updateAlternateContactUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/alternateContact`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.updateContactRequest,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * updateAlternateContact
     * updateAlternateContact
     */
    async updateAlternateContactUsingPUT(requestParameters: ShipmentContactApiUpdateAlternateContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact> {
        const response = await this.updateAlternateContactUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * updateCustomerContact
     * updateCustomerContact
     */


    async updateCustomerContactUsingPUTRaw(requestParameters: ShipmentContactApiUpdateCustomerContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling updateCustomerContactUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling updateCustomerContactUsingPUT.');
        }

        if (requestParameters.updateContactRequest === null || requestParameters.updateContactRequest === undefined) {
            throw new runtime.RequiredError('updateContactRequest','Required parameter requestParameters.updateContactRequest was null or undefined when calling updateCustomerContactUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/customerContact`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.updateContactRequest,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * updateCustomerContact
     * updateCustomerContact
     */
    async updateCustomerContactUsingPUT(requestParameters: ShipmentContactApiUpdateCustomerContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact> {
        const response = await this.updateCustomerContactUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * updateDestinationContact
     * updateDestinationContact
     */


    async updateDestinationContactUsingPUTRaw(requestParameters: ShipmentContactApiUpdateDestinationContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfContact>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling updateDestinationContactUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling updateDestinationContactUsingPUT.');
        }

        if (requestParameters.updateContactRequest === null || requestParameters.updateContactRequest === undefined) {
            throw new runtime.RequiredError('updateContactRequest','Required parameter requestParameters.updateContactRequest was null or undefined when calling updateDestinationContactUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/destinationContact`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.updateContactRequest,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * updateDestinationContact
     * updateDestinationContact
     */
    async updateDestinationContactUsingPUT(requestParameters: ShipmentContactApiUpdateDestinationContactUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfContact> {
        const response = await this.updateDestinationContactUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
