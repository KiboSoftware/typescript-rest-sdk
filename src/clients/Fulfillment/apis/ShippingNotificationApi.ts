/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';

export interface ShippingNotificationApiHandleCarrierNotificationUsingPOSTRequest {
    carrier: string;
}

/**
 * 
 */
export class ShippingNotificationApi extends runtime.BaseAPI {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Handle Carrier Notification
     * Handle Carrier Notification
     */


    async handleCarrierNotificationUsingPOSTRaw(requestParameters: ShippingNotificationApiHandleCarrierNotificationUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters.carrier === null || requestParameters.carrier === undefined) {
            throw new runtime.RequiredError('carrier','Required parameter requestParameters.carrier was null or undefined when calling handleCarrierNotificationUsingPOST.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/fulfillment/shipping/notifications/{carrier}`.replace(`{${"carrier"}}`, encodeURIComponent(String(requestParameters.carrier))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Handle Carrier Notification
     * Handle Carrier Notification
     */
    async handleCarrierNotificationUsingPOST(requestParameters: ShippingNotificationApiHandleCarrierNotificationUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.handleCarrierNotificationUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
