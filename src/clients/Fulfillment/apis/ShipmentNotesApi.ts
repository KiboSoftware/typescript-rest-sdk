/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  EntityModelOfShipment,
  FulfillmentAPIProductionProfileShipmentNote,
} from '../models';

export interface DeleteShipmentNoteUsingDELETERequest {
    noteId: string;
    shipmentNumber: number;
    xVolTenant: number;
    ifMatch?: string;
    xVolSite?: number;
}

export interface NewShipmentNoteUsingPOSTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    shipmentNoteDto: FulfillmentAPIProductionProfileShipmentNote;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

export interface UpdateShipmentNoteUsingPUTRequest {
    noteId: string;
    shipmentNumber: number;
    xVolTenant: number;
    shipmentNoteDto: FulfillmentAPIProductionProfileShipmentNote;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

/**
 * ShipmentNotesApi - interface
 * 
 * @export
 * @interface ShipmentNotesApiInterface
 */
export interface ShipmentNotesApiInterface {
    /**
     * deleteShipmentNote
     * @summary deleteShipmentNote
     * @param {string} noteId noteId
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentNotesApiInterface
     */
    deleteShipmentNoteUsingDELETERaw(requestParameters: DeleteShipmentNoteUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * deleteShipmentNote
     * deleteShipmentNote
     */
    deleteShipmentNoteUsingDELETE(requestParameters: DeleteShipmentNoteUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * newShipmentNote
     * @summary newShipmentNote
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {FulfillmentAPIProductionProfileShipmentNote} shipmentNoteDto shipmentNoteDto
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentNotesApiInterface
     */
    newShipmentNoteUsingPOSTRaw(requestParameters: NewShipmentNoteUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * newShipmentNote
     * newShipmentNote
     */
    newShipmentNoteUsingPOST(requestParameters: NewShipmentNoteUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

    /**
     * updateShipmentNote
     * @summary updateShipmentNote
     * @param {string} noteId noteId
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {FulfillmentAPIProductionProfileShipmentNote} shipmentNoteDto shipmentNoteDto
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentNotesApiInterface
     */
    updateShipmentNoteUsingPUTRaw(requestParameters: UpdateShipmentNoteUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * updateShipmentNote
     * updateShipmentNote
     */
    updateShipmentNoteUsingPUT(requestParameters: UpdateShipmentNoteUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

}

/**
 * 
 */
export class ShipmentNotesApi extends runtime.BaseAPI implements ShipmentNotesApiInterface {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * deleteShipmentNote
     * deleteShipmentNote
     */


    async deleteShipmentNoteUsingDELETERaw(requestParameters: DeleteShipmentNoteUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.noteId === null || requestParameters.noteId === undefined) {
            throw new runtime.RequiredError('noteId','Required parameter requestParameters.noteId was null or undefined when calling deleteShipmentNoteUsingDELETE.');
        }

        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling deleteShipmentNoteUsingDELETE.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling deleteShipmentNoteUsingDELETE.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/notes/{noteId}`.replace(`{${"noteId"}}`, encodeURIComponent(String(requestParameters.noteId))).replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * deleteShipmentNote
     * deleteShipmentNote
     */
    async deleteShipmentNoteUsingDELETE(requestParameters: DeleteShipmentNoteUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteShipmentNoteUsingDELETERaw(requestParameters, initOverrides);
    }

    /**
     * newShipmentNote
     * newShipmentNote
     */


    async newShipmentNoteUsingPOSTRaw(requestParameters: NewShipmentNoteUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling newShipmentNoteUsingPOST.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling newShipmentNoteUsingPOST.');
        }

        if (requestParameters.shipmentNoteDto === null || requestParameters.shipmentNoteDto === undefined) {
            throw new runtime.RequiredError('shipmentNoteDto','Required parameter requestParameters.shipmentNoteDto was null or undefined when calling newShipmentNoteUsingPOST.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/notes`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.shipmentNoteDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * newShipmentNote
     * newShipmentNote
     */
    async newShipmentNoteUsingPOST(requestParameters: NewShipmentNoteUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.newShipmentNoteUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * updateShipmentNote
     * updateShipmentNote
     */


    async updateShipmentNoteUsingPUTRaw(requestParameters: UpdateShipmentNoteUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.noteId === null || requestParameters.noteId === undefined) {
            throw new runtime.RequiredError('noteId','Required parameter requestParameters.noteId was null or undefined when calling updateShipmentNoteUsingPUT.');
        }

        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling updateShipmentNoteUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling updateShipmentNoteUsingPUT.');
        }

        if (requestParameters.shipmentNoteDto === null || requestParameters.shipmentNoteDto === undefined) {
            throw new runtime.RequiredError('shipmentNoteDto','Required parameter requestParameters.shipmentNoteDto was null or undefined when calling updateShipmentNoteUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/notes/{noteId}`.replace(`{${"noteId"}}`, encodeURIComponent(String(requestParameters.noteId))).replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.shipmentNoteDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * updateShipmentNote
     * updateShipmentNote
     */
    async updateShipmentNoteUsingPUT(requestParameters: UpdateShipmentNoteUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.updateShipmentNoteUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
