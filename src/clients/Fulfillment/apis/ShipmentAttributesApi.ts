/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  ShipmentAttribute,
} from '../models';

export interface DeleteShipmentAttributeUsingDELETERequest {
    key: string;
    shipmentNumber: number;
    xVolTenant: number;
    xVolSite?: number;
}

export interface GetShipmentAttributeUsingGETRequest {
    key: string;
    shipmentNumber: number;
    xVolTenant: number;
    xVolSite?: number;
    responseFields?: string;
}

export interface GetShipmentAttributesUsingGETRequest {
    shipmentNumber: number;
    xVolTenant: number;
    xVolSite?: number;
    responseFields?: string;
}

export interface SetShipmentAttributeUsingPUTRequest {
    key: string;
    shipmentNumber: number;
    xVolTenant: number;
    attribute: ShipmentAttribute;
    xVolSite?: number;
    responseFields?: string;
}

export interface SetShipmentAttributesUsingPUTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    attributes: Array<ShipmentAttribute>;
    xVolSite?: number;
    responseFields?: string;
}

/**
 * ShipmentAttributesApi - interface
 * 
 * @export
 * @interface ShipmentAttributesApiInterface
 */
export interface ShipmentAttributesApiInterface {
    /**
     * deleteShipmentAttribute
     * @summary deleteShipmentAttribute
     * @param {string} key key
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {number} [xVolSite] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentAttributesApiInterface
     */
    deleteShipmentAttributeUsingDELETERaw(requestParameters: DeleteShipmentAttributeUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * deleteShipmentAttribute
     * deleteShipmentAttribute
     */
    deleteShipmentAttributeUsingDELETE(requestParameters: DeleteShipmentAttributeUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * getShipmentAttribute
     * @summary getShipmentAttribute
     * @param {string} key key
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentAttributesApiInterface
     */
    getShipmentAttributeUsingGETRaw(requestParameters: GetShipmentAttributeUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentAttribute>>;

    /**
     * getShipmentAttribute
     * getShipmentAttribute
     */
    getShipmentAttributeUsingGET(requestParameters: GetShipmentAttributeUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentAttribute>;

    /**
     * getShipmentAttributes
     * @summary getShipmentAttributes
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentAttributesApiInterface
     */
    getShipmentAttributesUsingGETRaw(requestParameters: GetShipmentAttributesUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ShipmentAttribute>>>;

    /**
     * getShipmentAttributes
     * getShipmentAttributes
     */
    getShipmentAttributesUsingGET(requestParameters: GetShipmentAttributesUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ShipmentAttribute>>;

    /**
     * setShipmentAttribute
     * @summary setShipmentAttribute
     * @param {string} key key
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {ShipmentAttribute} attribute attribute
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentAttributesApiInterface
     */
    setShipmentAttributeUsingPUTRaw(requestParameters: SetShipmentAttributeUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentAttribute>>;

    /**
     * setShipmentAttribute
     * setShipmentAttribute
     */
    setShipmentAttributeUsingPUT(requestParameters: SetShipmentAttributeUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentAttribute>;

    /**
     * setShipmentAttributes
     * @summary setShipmentAttributes
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {Array<ShipmentAttribute>} attributes attributes
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentAttributesApiInterface
     */
    setShipmentAttributesUsingPUTRaw(requestParameters: SetShipmentAttributesUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ShipmentAttribute>>>;

    /**
     * setShipmentAttributes
     * setShipmentAttributes
     */
    setShipmentAttributesUsingPUT(requestParameters: SetShipmentAttributesUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ShipmentAttribute>>;

}

/**
 * 
 */
export class ShipmentAttributesApi extends runtime.BaseAPI implements ShipmentAttributesApiInterface {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * deleteShipmentAttribute
     * deleteShipmentAttribute
     */


    async deleteShipmentAttributeUsingDELETERaw(requestParameters: DeleteShipmentAttributeUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.key === null || requestParameters.key === undefined) {
            throw new runtime.RequiredError('key','Required parameter requestParameters.key was null or undefined when calling deleteShipmentAttributeUsingDELETE.');
        }

        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling deleteShipmentAttributeUsingDELETE.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling deleteShipmentAttributeUsingDELETE.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes/{key}`.replace(`{${"key"}}`, encodeURIComponent(String(requestParameters.key))).replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * deleteShipmentAttribute
     * deleteShipmentAttribute
     */
    async deleteShipmentAttributeUsingDELETE(requestParameters: DeleteShipmentAttributeUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteShipmentAttributeUsingDELETERaw(requestParameters, initOverrides);
    }

    /**
     * getShipmentAttribute
     * getShipmentAttribute
     */


    async getShipmentAttributeUsingGETRaw(requestParameters: GetShipmentAttributeUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentAttribute>> {
        if (requestParameters.key === null || requestParameters.key === undefined) {
            throw new runtime.RequiredError('key','Required parameter requestParameters.key was null or undefined when calling getShipmentAttributeUsingGET.');
        }

        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling getShipmentAttributeUsingGET.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getShipmentAttributeUsingGET.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes/{key}`.replace(`{${"key"}}`, encodeURIComponent(String(requestParameters.key))).replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * getShipmentAttribute
     * getShipmentAttribute
     */
    async getShipmentAttributeUsingGET(requestParameters: GetShipmentAttributeUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentAttribute> {
        const response = await this.getShipmentAttributeUsingGETRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * getShipmentAttributes
     * getShipmentAttributes
     */


    async getShipmentAttributesUsingGETRaw(requestParameters: GetShipmentAttributesUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ShipmentAttribute>>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling getShipmentAttributesUsingGET.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getShipmentAttributesUsingGET.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * getShipmentAttributes
     * getShipmentAttributes
     */
    async getShipmentAttributesUsingGET(requestParameters: GetShipmentAttributesUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ShipmentAttribute>> {
        const response = await this.getShipmentAttributesUsingGETRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * setShipmentAttribute
     * setShipmentAttribute
     */


    async setShipmentAttributeUsingPUTRaw(requestParameters: SetShipmentAttributeUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentAttribute>> {
        if (requestParameters.key === null || requestParameters.key === undefined) {
            throw new runtime.RequiredError('key','Required parameter requestParameters.key was null or undefined when calling setShipmentAttributeUsingPUT.');
        }

        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling setShipmentAttributeUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling setShipmentAttributeUsingPUT.');
        }

        if (requestParameters.attribute === null || requestParameters.attribute === undefined) {
            throw new runtime.RequiredError('attribute','Required parameter requestParameters.attribute was null or undefined when calling setShipmentAttributeUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes/{key}`.replace(`{${"key"}}`, encodeURIComponent(String(requestParameters.key))).replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.attribute,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * setShipmentAttribute
     * setShipmentAttribute
     */
    async setShipmentAttributeUsingPUT(requestParameters: SetShipmentAttributeUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentAttribute> {
        const response = await this.setShipmentAttributeUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * setShipmentAttributes
     * setShipmentAttributes
     */


    async setShipmentAttributesUsingPUTRaw(requestParameters: SetShipmentAttributesUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ShipmentAttribute>>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling setShipmentAttributesUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling setShipmentAttributesUsingPUT.');
        }

        if (requestParameters.attributes === null || requestParameters.attributes === undefined) {
            throw new runtime.RequiredError('attributes','Required parameter requestParameters.attributes was null or undefined when calling setShipmentAttributesUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.attributes,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * setShipmentAttributes
     * setShipmentAttributes
     */
    async setShipmentAttributesUsingPUT(requestParameters: SetShipmentAttributesUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ShipmentAttribute>> {
        const response = await this.setShipmentAttributesUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
