/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  ErrorItem,
  RemoveSpecificShipmentFromConsolidationGroup400Response,
  ShipmentAttributeDto,
} from '../models';


export namespace shipmentAttributesApiParams { 
    export interface DeleteShipmentAttributeRequest {
        shipmentNumber: number;
        key: string;
    }
    export interface GetShipmentAttributeRequest {
        shipmentNumber: number;
        key: string;
    }
    export interface GetShipmentAttributesRequest {
        shipmentNumber: number;
    }
    export interface SetShipmentAttributeRequest {
        shipmentNumber: number;
        key: string;
        shipmentAttributeDto: ShipmentAttributeDto;
    }
    export interface SetShipmentAttributesRequest {
        shipmentNumber: number;
        shipmentAttributeDto: Array<ShipmentAttributeDto>;
    }
}
/**
* ShipmentAttributesApiService - interface
* 
* @export
* @interface ShipmentAttributesApi
*/
export interface ShipmentAttributesApiService {
    /**
    * Delete Shipment Attribute
    * @summary Delete Shipment Attribute
    * @param {number} shipmentNumber 
    * @param {string} key 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ShipmentAttributesApiInterface
    */
    deleteShipmentAttributeRaw(requestParameters: shipmentAttributesApiParams.DeleteShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
    * Delete Shipment Attribute
    * Delete Shipment Attribute
    */
    deleteShipmentAttribute(requestParameters: shipmentAttributesApiParams.DeleteShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
    * Get Shipment Attribute
    * @summary Get Shipment Attribute
    * @param {number} shipmentNumber 
    * @param {string} key 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ShipmentAttributesApiInterface
    */
    getShipmentAttributeRaw(requestParameters: shipmentAttributesApiParams.GetShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentAttributeDto>>;

    /**
    * Get Shipment Attribute
    * Get Shipment Attribute
    */
    getShipmentAttribute(requestParameters: shipmentAttributesApiParams.GetShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentAttributeDto>;

    /**
    * Get Shipment Attributes
    * @summary Get Shipment Attributes
    * @param {number} shipmentNumber 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ShipmentAttributesApiInterface
    */
    getShipmentAttributesRaw(requestParameters: shipmentAttributesApiParams.GetShipmentAttributesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ShipmentAttributeDto>>>;

    /**
    * Get Shipment Attributes
    * Get Shipment Attributes
    */
    getShipmentAttributes(requestParameters: shipmentAttributesApiParams.GetShipmentAttributesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ShipmentAttributeDto>>;

    /**
    * Set Shipment Attribute
    * @summary Set Shipment Attribute
    * @param {number} shipmentNumber 
    * @param {string} key 
    * @param {ShipmentAttributeDto} shipmentAttributeDto 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ShipmentAttributesApiInterface
    */
    setShipmentAttributeRaw(requestParameters: shipmentAttributesApiParams.SetShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentAttributeDto>>;

    /**
    * Set Shipment Attribute
    * Set Shipment Attribute
    */
    setShipmentAttribute(requestParameters: shipmentAttributesApiParams.SetShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentAttributeDto>;

    /**
    * Set Shipment Attributes
    * @summary Set Shipment Attributes
    * @param {number} shipmentNumber 
    * @param {Array<ShipmentAttributeDto>} shipmentAttributeDto 
    * @param {*} [options] Override http request option.
    * @throws {RequiredError}
    * @memberof ShipmentAttributesApiInterface
    */
    setShipmentAttributesRaw(requestParameters: shipmentAttributesApiParams.SetShipmentAttributesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ShipmentAttributeDto>>>;

    /**
    * Set Shipment Attributes
    * Set Shipment Attributes
    */
    setShipmentAttributes(requestParameters: shipmentAttributesApiParams.SetShipmentAttributesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ShipmentAttributeDto>>;

}


/**
 * 
 */
export class ShipmentAttributesApi extends runtime.BaseAPI implements ShipmentAttributesApiService {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Delete Shipment Attribute
     * Delete Shipment Attribute
     */


    async deleteShipmentAttributeRaw(requestParameters: shipmentAttributesApiParams.DeleteShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling deleteShipmentAttribute.');
        }

        if (requestParameters.key === null || requestParameters.key === undefined) {
            throw new runtime.RequiredError('key','Required parameter requestParameters.key was null or undefined when calling deleteShipmentAttribute.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes/{key}`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))).replace(`{${"key"}}`, encodeURIComponent(String(requestParameters.key))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete Shipment Attribute
     * Delete Shipment Attribute
     */
    async deleteShipmentAttribute(requestParameters: shipmentAttributesApiParams.DeleteShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteShipmentAttributeRaw(requestParameters, initOverrides);
    }

    /**
     * Get Shipment Attribute
     * Get Shipment Attribute
     */


    async getShipmentAttributeRaw(requestParameters: shipmentAttributesApiParams.GetShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentAttributeDto>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling getShipmentAttribute.');
        }

        if (requestParameters.key === null || requestParameters.key === undefined) {
            throw new runtime.RequiredError('key','Required parameter requestParameters.key was null or undefined when calling getShipmentAttribute.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes/{key}`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))).replace(`{${"key"}}`, encodeURIComponent(String(requestParameters.key))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Get Shipment Attribute
     * Get Shipment Attribute
     */
    async getShipmentAttribute(requestParameters: shipmentAttributesApiParams.GetShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentAttributeDto> {
        const response = await this.getShipmentAttributeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Shipment Attributes
     * Get Shipment Attributes
     */


    async getShipmentAttributesRaw(requestParameters: shipmentAttributesApiParams.GetShipmentAttributesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ShipmentAttributeDto>>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling getShipmentAttributes.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Get Shipment Attributes
     * Get Shipment Attributes
     */
    async getShipmentAttributes(requestParameters: shipmentAttributesApiParams.GetShipmentAttributesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ShipmentAttributeDto>> {
        const response = await this.getShipmentAttributesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Set Shipment Attribute
     * Set Shipment Attribute
     */


    async setShipmentAttributeRaw(requestParameters: shipmentAttributesApiParams.SetShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ShipmentAttributeDto>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling setShipmentAttribute.');
        }

        if (requestParameters.key === null || requestParameters.key === undefined) {
            throw new runtime.RequiredError('key','Required parameter requestParameters.key was null or undefined when calling setShipmentAttribute.');
        }

        if (requestParameters.shipmentAttributeDto === null || requestParameters.shipmentAttributeDto === undefined) {
            throw new runtime.RequiredError('shipmentAttributeDto','Required parameter requestParameters.shipmentAttributeDto was null or undefined when calling setShipmentAttribute.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes/{key}`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))).replace(`{${"key"}}`, encodeURIComponent(String(requestParameters.key))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.shipmentAttributeDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Set Shipment Attribute
     * Set Shipment Attribute
     */
    async setShipmentAttribute(requestParameters: shipmentAttributesApiParams.SetShipmentAttributeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ShipmentAttributeDto> {
        const response = await this.setShipmentAttributeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Set Shipment Attributes
     * Set Shipment Attributes
     */


    async setShipmentAttributesRaw(requestParameters: shipmentAttributesApiParams.SetShipmentAttributesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ShipmentAttributeDto>>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling setShipmentAttributes.');
        }

        if (requestParameters.shipmentAttributeDto === null || requestParameters.shipmentAttributeDto === undefined) {
            throw new runtime.RequiredError('shipmentAttributeDto','Required parameter requestParameters.shipmentAttributeDto was null or undefined when calling setShipmentAttributes.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/attributes`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.shipmentAttributeDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Set Shipment Attributes
     * Set Shipment Attributes
     */
    async setShipmentAttributes(requestParameters: shipmentAttributesApiParams.SetShipmentAttributesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ShipmentAttributeDto>> {
        const response = await this.setShipmentAttributesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
