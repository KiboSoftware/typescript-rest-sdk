/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  CollectionModelOfEntityModelOfShipment,
  EntityModelOfShipment,
  FutureItemsRequest,
  FutureShipmentUpdateDateRequest,
} from '../models';

export interface CreateFutureShipmentsForFutureAllocatableItemsUsingPOSTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    futureItemsRequestDto: FutureItemsRequest;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

export interface CreateFutureShipmentsForItemsUsingPOSTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    futureItemsRequestDto: FutureItemsRequest;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

export interface FutureShipmentToReadyUsingPUTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

export interface UpdateFutureShipmentDateUsingPUTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    futureShipmentUpdateDateRequestDto: FutureShipmentUpdateDateRequest;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

/**
 * FutureShipmentApi - interface
 * 
 * @export
 * @interface FutureShipmentApiInterface
 */
export interface FutureShipmentApiInterface {
    /**
     * createFutureShipmentsForFutureAllocatableItems
     * @summary createFutureShipmentsForFutureAllocatableItems
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {FutureItemsRequest} futureItemsRequestDto futureItemsRequestDto
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FutureShipmentApiInterface
     */
    createFutureShipmentsForFutureAllocatableItemsUsingPOSTRaw(requestParameters: CreateFutureShipmentsForFutureAllocatableItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelOfEntityModelOfShipment>>;

    /**
     * createFutureShipmentsForFutureAllocatableItems
     * createFutureShipmentsForFutureAllocatableItems
     */
    createFutureShipmentsForFutureAllocatableItemsUsingPOST(requestParameters: CreateFutureShipmentsForFutureAllocatableItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelOfEntityModelOfShipment>;

    /**
     * createFutureShipmentsForItems
     * @summary createFutureShipmentsForItems
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {FutureItemsRequest} futureItemsRequestDto futureItemsRequestDto
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FutureShipmentApiInterface
     */
    createFutureShipmentsForItemsUsingPOSTRaw(requestParameters: CreateFutureShipmentsForItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelOfEntityModelOfShipment>>;

    /**
     * createFutureShipmentsForItems
     * createFutureShipmentsForItems
     */
    createFutureShipmentsForItemsUsingPOST(requestParameters: CreateFutureShipmentsForItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelOfEntityModelOfShipment>;

    /**
     * futureShipmentToReady
     * @summary futureShipmentToReady
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FutureShipmentApiInterface
     */
    futureShipmentToReadyUsingPUTRaw(requestParameters: FutureShipmentToReadyUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * futureShipmentToReady
     * futureShipmentToReady
     */
    futureShipmentToReadyUsingPUT(requestParameters: FutureShipmentToReadyUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

    /**
     * updateFutureShipmentDate
     * @summary updateFutureShipmentDate
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {FutureShipmentUpdateDateRequest} futureShipmentUpdateDateRequestDto futureShipmentUpdateDateRequestDto
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FutureShipmentApiInterface
     */
    updateFutureShipmentDateUsingPUTRaw(requestParameters: UpdateFutureShipmentDateUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * updateFutureShipmentDate
     * updateFutureShipmentDate
     */
    updateFutureShipmentDateUsingPUT(requestParameters: UpdateFutureShipmentDateUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

}

/**
 * 
 */
export class FutureShipmentApi extends runtime.BaseAPI implements FutureShipmentApiInterface {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * createFutureShipmentsForFutureAllocatableItems
     * createFutureShipmentsForFutureAllocatableItems
     */


    async createFutureShipmentsForFutureAllocatableItemsUsingPOSTRaw(requestParameters: CreateFutureShipmentsForFutureAllocatableItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelOfEntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling createFutureShipmentsForFutureAllocatableItemsUsingPOST.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling createFutureShipmentsForFutureAllocatableItemsUsingPOST.');
        }

        if (requestParameters.futureItemsRequestDto === null || requestParameters.futureItemsRequestDto === undefined) {
            throw new runtime.RequiredError('futureItemsRequestDto','Required parameter requestParameters.futureItemsRequestDto was null or undefined when calling createFutureShipmentsForFutureAllocatableItemsUsingPOST.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/futureAllocatableItems`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.futureItemsRequestDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * createFutureShipmentsForFutureAllocatableItems
     * createFutureShipmentsForFutureAllocatableItems
     */
    async createFutureShipmentsForFutureAllocatableItemsUsingPOST(requestParameters: CreateFutureShipmentsForFutureAllocatableItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelOfEntityModelOfShipment> {
        const response = await this.createFutureShipmentsForFutureAllocatableItemsUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * createFutureShipmentsForItems
     * createFutureShipmentsForItems
     */


    async createFutureShipmentsForItemsUsingPOSTRaw(requestParameters: CreateFutureShipmentsForItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelOfEntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling createFutureShipmentsForItemsUsingPOST.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling createFutureShipmentsForItemsUsingPOST.');
        }

        if (requestParameters.futureItemsRequestDto === null || requestParameters.futureItemsRequestDto === undefined) {
            throw new runtime.RequiredError('futureItemsRequestDto','Required parameter requestParameters.futureItemsRequestDto was null or undefined when calling createFutureShipmentsForItemsUsingPOST.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/futureItems`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.futureItemsRequestDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * createFutureShipmentsForItems
     * createFutureShipmentsForItems
     */
    async createFutureShipmentsForItemsUsingPOST(requestParameters: CreateFutureShipmentsForItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelOfEntityModelOfShipment> {
        const response = await this.createFutureShipmentsForItemsUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * futureShipmentToReady
     * futureShipmentToReady
     */


    async futureShipmentToReadyUsingPUTRaw(requestParameters: FutureShipmentToReadyUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling futureShipmentToReadyUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling futureShipmentToReadyUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/futureToReady`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * futureShipmentToReady
     * futureShipmentToReady
     */
    async futureShipmentToReadyUsingPUT(requestParameters: FutureShipmentToReadyUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.futureShipmentToReadyUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * updateFutureShipmentDate
     * updateFutureShipmentDate
     */


    async updateFutureShipmentDateUsingPUTRaw(requestParameters: UpdateFutureShipmentDateUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling updateFutureShipmentDateUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling updateFutureShipmentDateUsingPUT.');
        }

        if (requestParameters.futureShipmentUpdateDateRequestDto === null || requestParameters.futureShipmentUpdateDateRequestDto === undefined) {
            throw new runtime.RequiredError('futureShipmentUpdateDateRequestDto','Required parameter requestParameters.futureShipmentUpdateDateRequestDto was null or undefined when calling updateFutureShipmentDateUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/futureUpdateDate`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.futureShipmentUpdateDateRequestDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * updateFutureShipmentDate
     * updateFutureShipmentDate
     */
    async updateFutureShipmentDateUsingPUT(requestParameters: UpdateFutureShipmentDateUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.updateFutureShipmentDateUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
