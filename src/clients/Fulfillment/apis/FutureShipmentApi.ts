/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  CollectionModelOfEntityModelOfShipment,
  EntityModelOfShipment,
  FutureItemsRequest,
  FutureShipmentUpdateDateRequest,
} from '../models';
import {
    CollectionModelOfEntityModelOfShipmentFromJSON,
    CollectionModelOfEntityModelOfShipmentToJSON,
    EntityModelOfShipmentFromJSON,
    EntityModelOfShipmentToJSON,
    FutureItemsRequestFromJSON,
    FutureItemsRequestToJSON,
    FutureShipmentUpdateDateRequestFromJSON,
    FutureShipmentUpdateDateRequestToJSON,
} from '../models';

export interface FutureShipmentApiCreateFutureShipmentsForItemsUsingPOSTRequest {
    shipmentNumber: number;
    ifMatch?: string;
    futureItemsRequest?: FutureItemsRequest;
}

export interface FutureShipmentApiFutureShipmentToReadyUsingPUTRequest {
    shipmentNumber: number;
    ifMatch?: string;
}

export interface FutureShipmentApiUpdateFutureShipmentDateUsingPUTRequest {
    shipmentNumber: number;
    ifMatch?: string;
    futureShipmentUpdateDateRequest?: FutureShipmentUpdateDateRequest;
}

/**
 * 
 */
export class FutureShipmentApi extends runtime.BaseAPI {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Create Future Shipments for Items
     * Create Future Shipments for Items
     */


    async createFutureShipmentsForItemsUsingPOSTRaw(requestParameters: FutureShipmentApiCreateFutureShipmentsForItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelOfEntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling createFutureShipmentsForItemsUsingPOST.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }


        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/futureItems`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: FutureItemsRequestToJSON(requestParameters.futureItemsRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionModelOfEntityModelOfShipmentFromJSON(jsonValue));
    }

    /**
     * Create Future Shipments for Items
     * Create Future Shipments for Items
     */
    async createFutureShipmentsForItemsUsingPOST(requestParameters: FutureShipmentApiCreateFutureShipmentsForItemsUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelOfEntityModelOfShipment> {
        const response = await this.createFutureShipmentsForItemsUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Future Shipment to Ready
     * Future Shipment to Ready
     */


    async futureShipmentToReadyUsingPUTRaw(requestParameters: FutureShipmentApiFutureShipmentToReadyUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling futureShipmentToReadyUsingPUT.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }


        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/futureToReady`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelOfShipmentFromJSON(jsonValue));
    }

    /**
     * Future Shipment to Ready
     * Future Shipment to Ready
     */
    async futureShipmentToReadyUsingPUT(requestParameters: FutureShipmentApiFutureShipmentToReadyUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.futureShipmentToReadyUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update Future Shipment Date
     * Update Future Shipment Date
     */


    async updateFutureShipmentDateUsingPUTRaw(requestParameters: FutureShipmentApiUpdateFutureShipmentDateUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling updateFutureShipmentDateUsingPUT.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }


        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/futureUpdateDate`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: FutureShipmentUpdateDateRequestToJSON(requestParameters.futureShipmentUpdateDateRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityModelOfShipmentFromJSON(jsonValue));
    }

    /**
     * Update Future Shipment Date
     * Update Future Shipment Date
     */
    async updateFutureShipmentDateUsingPUT(requestParameters: FutureShipmentApiUpdateFutureShipmentDateUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.updateFutureShipmentDateUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
