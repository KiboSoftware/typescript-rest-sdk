/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  EntityModelOfShipment,
  FulfillmentAPIProductionProfilePackage,
  SaveMpsPackagesRequest,
} from '../models';

export interface ShipmentPackagesApiDeleteShipmentPackageUsingDELETERequest {
    packageId: string;
    shipmentNumber: number;
    xVolTenant: number;
    ifMatch?: string;
    xVolSite?: number;
}

export interface ShipmentPackagesApiDeleteShipmentPackagesUsingDELETERequest {
    shipmentNumber: number;
    xVolTenant: number;
    ifMatch?: string;
    xVolSite?: number;
}

export interface ShipmentPackagesApiNewPackageUsingPOSTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    packageDto: FulfillmentAPIProductionProfilePackage;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

export interface ShipmentPackagesApiNewPackagesUsingPOSTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    packageDtoList: Array<FulfillmentAPIProductionProfilePackage>;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

export interface ShipmentPackagesApiRemoveShippingInformationUsingDELETERequest {
    shipmentNumber: number;
    xVolTenant: number;
    ifMatch?: string;
    xVolSite?: number;
}

export interface ShipmentPackagesApiSaveMultiPieceShipmentPackagesUsingPUTRequest {
    shipmentNumber: number;
    xVolTenant: number;
    saveMpsPackagesRequestDto: SaveMpsPackagesRequest;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

export interface ShipmentPackagesApiUpdatePackageUsingPUTRequest {
    packageId: string;
    shipmentNumber: number;
    xVolTenant: number;
    packageDto: FulfillmentAPIProductionProfilePackage;
    ifMatch?: string;
    xVolSite?: number;
    responseFields?: string;
}

/**
 * ShipmentPackagesApi - interface
 * 
 * @export
 * @interface ShipmentPackagesApiInterface
 */
export interface ShipmentPackagesApiInterface {
    /**
     * deleteShipmentPackage
     * @summary deleteShipmentPackage
     * @param {string} packageId packageId
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentPackagesApiInterface
     */
    deleteShipmentPackageUsingDELETERaw(requestParameters: ShipmentPackagesApiDeleteShipmentPackageUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * deleteShipmentPackage
     * deleteShipmentPackage
     */
    deleteShipmentPackageUsingDELETE(requestParameters: ShipmentPackagesApiDeleteShipmentPackageUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * deleteShipmentPackages
     * @summary deleteShipmentPackages
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentPackagesApiInterface
     */
    deleteShipmentPackagesUsingDELETERaw(requestParameters: ShipmentPackagesApiDeleteShipmentPackagesUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * deleteShipmentPackages
     * deleteShipmentPackages
     */
    deleteShipmentPackagesUsingDELETE(requestParameters: ShipmentPackagesApiDeleteShipmentPackagesUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

    /**
     * newPackage
     * @summary newPackage
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {FulfillmentAPIProductionProfilePackage} packageDto packageDto
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentPackagesApiInterface
     */
    newPackageUsingPOSTRaw(requestParameters: ShipmentPackagesApiNewPackageUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * newPackage
     * newPackage
     */
    newPackageUsingPOST(requestParameters: ShipmentPackagesApiNewPackageUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

    /**
     * newPackages
     * @summary newPackages
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {Array<FulfillmentAPIProductionProfilePackage>} packageDtoList packageDtoList
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentPackagesApiInterface
     */
    newPackagesUsingPOSTRaw(requestParameters: ShipmentPackagesApiNewPackagesUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * newPackages
     * newPackages
     */
    newPackagesUsingPOST(requestParameters: ShipmentPackagesApiNewPackagesUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

    /**
     * removeShippingInformation
     * @summary removeShippingInformation
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentPackagesApiInterface
     */
    removeShippingInformationUsingDELETERaw(requestParameters: ShipmentPackagesApiRemoveShippingInformationUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * removeShippingInformation
     * removeShippingInformation
     */
    removeShippingInformationUsingDELETE(requestParameters: ShipmentPackagesApiRemoveShippingInformationUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

    /**
     * saveMultiPieceShipmentPackages
     * @summary saveMultiPieceShipmentPackages
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {SaveMpsPackagesRequest} saveMpsPackagesRequestDto saveMpsPackagesRequestDto
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentPackagesApiInterface
     */
    saveMultiPieceShipmentPackagesUsingPUTRaw(requestParameters: ShipmentPackagesApiSaveMultiPieceShipmentPackagesUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * saveMultiPieceShipmentPackages
     * saveMultiPieceShipmentPackages
     */
    saveMultiPieceShipmentPackagesUsingPUT(requestParameters: ShipmentPackagesApiSaveMultiPieceShipmentPackagesUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

    /**
     * updatePackage
     * @summary updatePackage
     * @param {string} packageId packageId
     * @param {number} shipmentNumber shipmentNumber
     * @param {number} xVolTenant 
     * @param {FulfillmentAPIProductionProfilePackage} packageDto packageDto
     * @param {string} [ifMatch] If-Match
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShipmentPackagesApiInterface
     */
    updatePackageUsingPUTRaw(requestParameters: ShipmentPackagesApiUpdatePackageUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>>;

    /**
     * updatePackage
     * updatePackage
     */
    updatePackageUsingPUT(requestParameters: ShipmentPackagesApiUpdatePackageUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment>;

}

/**
 * 
 */
export class ShipmentPackagesApi extends runtime.BaseAPI implements ShipmentPackagesApiInterface {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * deleteShipmentPackage
     * deleteShipmentPackage
     */


    async deleteShipmentPackageUsingDELETERaw(requestParameters: ShipmentPackagesApiDeleteShipmentPackageUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.packageId === null || requestParameters.packageId === undefined) {
            throw new runtime.RequiredError('packageId','Required parameter requestParameters.packageId was null or undefined when calling deleteShipmentPackageUsingDELETE.');
        }

        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling deleteShipmentPackageUsingDELETE.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling deleteShipmentPackageUsingDELETE.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/packages/{packageId}`.replace(`{${"packageId"}}`, encodeURIComponent(String(requestParameters.packageId))).replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * deleteShipmentPackage
     * deleteShipmentPackage
     */
    async deleteShipmentPackageUsingDELETE(requestParameters: ShipmentPackagesApiDeleteShipmentPackageUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteShipmentPackageUsingDELETERaw(requestParameters, initOverrides);
    }

    /**
     * deleteShipmentPackages
     * deleteShipmentPackages
     */


    async deleteShipmentPackagesUsingDELETERaw(requestParameters: ShipmentPackagesApiDeleteShipmentPackagesUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling deleteShipmentPackagesUsingDELETE.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling deleteShipmentPackagesUsingDELETE.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/packages/bulk`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * deleteShipmentPackages
     * deleteShipmentPackages
     */
    async deleteShipmentPackagesUsingDELETE(requestParameters: ShipmentPackagesApiDeleteShipmentPackagesUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.deleteShipmentPackagesUsingDELETERaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * newPackage
     * newPackage
     */


    async newPackageUsingPOSTRaw(requestParameters: ShipmentPackagesApiNewPackageUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling newPackageUsingPOST.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling newPackageUsingPOST.');
        }

        if (requestParameters.packageDto === null || requestParameters.packageDto === undefined) {
            throw new runtime.RequiredError('packageDto','Required parameter requestParameters.packageDto was null or undefined when calling newPackageUsingPOST.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/packages`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.packageDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * newPackage
     * newPackage
     */
    async newPackageUsingPOST(requestParameters: ShipmentPackagesApiNewPackageUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.newPackageUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * newPackages
     * newPackages
     */


    async newPackagesUsingPOSTRaw(requestParameters: ShipmentPackagesApiNewPackagesUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling newPackagesUsingPOST.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling newPackagesUsingPOST.');
        }

        if (requestParameters.packageDtoList === null || requestParameters.packageDtoList === undefined) {
            throw new runtime.RequiredError('packageDtoList','Required parameter requestParameters.packageDtoList was null or undefined when calling newPackagesUsingPOST.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/packages/bulk`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.packageDtoList,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * newPackages
     * newPackages
     */
    async newPackagesUsingPOST(requestParameters: ShipmentPackagesApiNewPackagesUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.newPackagesUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * removeShippingInformation
     * removeShippingInformation
     */


    async removeShippingInformationUsingDELETERaw(requestParameters: ShipmentPackagesApiRemoveShippingInformationUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling removeShippingInformationUsingDELETE.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling removeShippingInformationUsingDELETE.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/packages/bulk/shipping`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * removeShippingInformation
     * removeShippingInformation
     */
    async removeShippingInformationUsingDELETE(requestParameters: ShipmentPackagesApiRemoveShippingInformationUsingDELETERequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.removeShippingInformationUsingDELETERaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * saveMultiPieceShipmentPackages
     * saveMultiPieceShipmentPackages
     */


    async saveMultiPieceShipmentPackagesUsingPUTRaw(requestParameters: ShipmentPackagesApiSaveMultiPieceShipmentPackagesUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling saveMultiPieceShipmentPackagesUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling saveMultiPieceShipmentPackagesUsingPUT.');
        }

        if (requestParameters.saveMpsPackagesRequestDto === null || requestParameters.saveMpsPackagesRequestDto === undefined) {
            throw new runtime.RequiredError('saveMpsPackagesRequestDto','Required parameter requestParameters.saveMpsPackagesRequestDto was null or undefined when calling saveMultiPieceShipmentPackagesUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/packages/mps`.replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.saveMpsPackagesRequestDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * saveMultiPieceShipmentPackages
     * saveMultiPieceShipmentPackages
     */
    async saveMultiPieceShipmentPackagesUsingPUT(requestParameters: ShipmentPackagesApiSaveMultiPieceShipmentPackagesUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.saveMultiPieceShipmentPackagesUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * updatePackage
     * updatePackage
     */


    async updatePackageUsingPUTRaw(requestParameters: ShipmentPackagesApiUpdatePackageUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfShipment>> {
        if (requestParameters.packageId === null || requestParameters.packageId === undefined) {
            throw new runtime.RequiredError('packageId','Required parameter requestParameters.packageId was null or undefined when calling updatePackageUsingPUT.');
        }

        if (requestParameters.shipmentNumber === null || requestParameters.shipmentNumber === undefined) {
            throw new runtime.RequiredError('shipmentNumber','Required parameter requestParameters.shipmentNumber was null or undefined when calling updatePackageUsingPUT.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling updatePackageUsingPUT.');
        }

        if (requestParameters.packageDto === null || requestParameters.packageDto === undefined) {
            throw new runtime.RequiredError('packageDto','Required parameter requestParameters.packageDto was null or undefined when calling updatePackageUsingPUT.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.ifMatch !== undefined && requestParameters.ifMatch !== null) {
            headerParameters['If-Match'] = String(requestParameters.ifMatch);
        }

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/shipments/{shipmentNumber}/packages/{packageId}`.replace(`{${"packageId"}}`, encodeURIComponent(String(requestParameters.packageId))).replace(`{${"shipmentNumber"}}`, encodeURIComponent(String(requestParameters.shipmentNumber))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.packageDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * updatePackage
     * updatePackage
     */
    async updatePackageUsingPUT(requestParameters: ShipmentPackagesApiUpdatePackageUsingPUTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfShipment> {
        const response = await this.updatePackageUsingPUTRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
