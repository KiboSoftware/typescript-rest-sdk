/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  CollectionModelOfManifest,
  CollectionModelOfShipment,
  EntityModelOfManifest,
  ManifestRequest,
} from '../models';

export interface CreateManifestUsingPOSTRequest {
    xVolTenant: number;
    manifestRequestDto: ManifestRequest;
    xVolSite?: number;
    responseFields?: string;
}

export interface GetEligibleShipmentsUsingGETRequest {
    carrier: string;
    fulfillmentLocationCode: string;
    xVolTenant: number;
    fromDays?: number;
    xVolSite?: number;
    responseFields?: string;
}

export interface GetManifestUsingGETRequest {
    manifestId: string;
    xVolTenant: number;
    xVolSite?: number;
    responseFields?: string;
}

export interface GetManifestsUsingGETRequest {
    fulfillmentLocationCode: string;
    xVolTenant: number;
    fromDays?: number;
    xVolSite?: number;
    responseFields?: string;
}

/**
 * ManifestApi - interface
 * 
 * @export
 * @interface ManifestApiInterface
 */
export interface ManifestApiInterface {
    /**
     * createManifest
     * @summary createManifest
     * @param {number} xVolTenant 
     * @param {ManifestRequest} manifestRequestDto manifestRequestDto
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManifestApiInterface
     */
    createManifestUsingPOSTRaw(requestParameters: CreateManifestUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfManifest>>;

    /**
     * createManifest
     * createManifest
     */
    createManifestUsingPOST(requestParameters: CreateManifestUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfManifest>;

    /**
     * getEligibleShipments
     * @summary getEligibleShipments
     * @param {string} carrier carrier
     * @param {string} fulfillmentLocationCode fulfillmentLocationCode
     * @param {number} xVolTenant 
     * @param {number} [fromDays] fromDays
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManifestApiInterface
     */
    getEligibleShipmentsUsingGETRaw(requestParameters: GetEligibleShipmentsUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelOfShipment>>;

    /**
     * getEligibleShipments
     * getEligibleShipments
     */
    getEligibleShipmentsUsingGET(requestParameters: GetEligibleShipmentsUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelOfShipment>;

    /**
     * getManifest
     * @summary getManifest
     * @param {string} manifestId manifestId
     * @param {number} xVolTenant 
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManifestApiInterface
     */
    getManifestUsingGETRaw(requestParameters: GetManifestUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfManifest>>;

    /**
     * getManifest
     * getManifest
     */
    getManifestUsingGET(requestParameters: GetManifestUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfManifest>;

    /**
     * getManifests
     * @summary getManifests
     * @param {string} fulfillmentLocationCode fulfillmentLocationCode
     * @param {number} xVolTenant 
     * @param {number} [fromDays] fromDays
     * @param {number} [xVolSite] 
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManifestApiInterface
     */
    getManifestsUsingGETRaw(requestParameters: GetManifestsUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelOfManifest>>;

    /**
     * getManifests
     * getManifests
     */
    getManifestsUsingGET(requestParameters: GetManifestsUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelOfManifest>;

}

/**
 * 
 */
export class ManifestApi extends runtime.BaseAPI implements ManifestApiInterface {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * createManifest
     * createManifest
     */


    async createManifestUsingPOSTRaw(requestParameters: CreateManifestUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfManifest>> {
        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling createManifestUsingPOST.');
        }

        if (requestParameters.manifestRequestDto === null || requestParameters.manifestRequestDto === undefined) {
            throw new runtime.RequiredError('manifestRequestDto','Required parameter requestParameters.manifestRequestDto was null or undefined when calling createManifestUsingPOST.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/fulfillment/shipping/manifests`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.manifestRequestDto,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * createManifest
     * createManifest
     */
    async createManifestUsingPOST(requestParameters: CreateManifestUsingPOSTRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfManifest> {
        const response = await this.createManifestUsingPOSTRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * getEligibleShipments
     * getEligibleShipments
     */


    async getEligibleShipmentsUsingGETRaw(requestParameters: GetEligibleShipmentsUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelOfShipment>> {
        if (requestParameters.carrier === null || requestParameters.carrier === undefined) {
            throw new runtime.RequiredError('carrier','Required parameter requestParameters.carrier was null or undefined when calling getEligibleShipmentsUsingGET.');
        }

        if (requestParameters.fulfillmentLocationCode === null || requestParameters.fulfillmentLocationCode === undefined) {
            throw new runtime.RequiredError('fulfillmentLocationCode','Required parameter requestParameters.fulfillmentLocationCode was null or undefined when calling getEligibleShipmentsUsingGET.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getEligibleShipmentsUsingGET.');
        }

        const queryParameters: any = {};

        if (requestParameters.carrier !== undefined) {
            queryParameters['carrier'] = requestParameters.carrier;
        }

        if (requestParameters.fromDays !== undefined) {
            queryParameters['fromDays'] = requestParameters.fromDays;
        }

        if (requestParameters.fulfillmentLocationCode !== undefined) {
            queryParameters['fulfillmentLocationCode'] = requestParameters.fulfillmentLocationCode;
        }

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/fulfillment/shipping/manifests/eligibleShipments`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * getEligibleShipments
     * getEligibleShipments
     */
    async getEligibleShipmentsUsingGET(requestParameters: GetEligibleShipmentsUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelOfShipment> {
        const response = await this.getEligibleShipmentsUsingGETRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * getManifest
     * getManifest
     */


    async getManifestUsingGETRaw(requestParameters: GetManifestUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityModelOfManifest>> {
        if (requestParameters.manifestId === null || requestParameters.manifestId === undefined) {
            throw new runtime.RequiredError('manifestId','Required parameter requestParameters.manifestId was null or undefined when calling getManifestUsingGET.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getManifestUsingGET.');
        }

        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/fulfillment/shipping/manifests/{manifestId}`.replace(`{${"manifestId"}}`, encodeURIComponent(String(requestParameters.manifestId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * getManifest
     * getManifest
     */
    async getManifestUsingGET(requestParameters: GetManifestUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityModelOfManifest> {
        const response = await this.getManifestUsingGETRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * getManifests
     * getManifests
     */


    async getManifestsUsingGETRaw(requestParameters: GetManifestsUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionModelOfManifest>> {
        if (requestParameters.fulfillmentLocationCode === null || requestParameters.fulfillmentLocationCode === undefined) {
            throw new runtime.RequiredError('fulfillmentLocationCode','Required parameter requestParameters.fulfillmentLocationCode was null or undefined when calling getManifestsUsingGET.');
        }

        if (requestParameters.xVolTenant === null || requestParameters.xVolTenant === undefined) {
            throw new runtime.RequiredError('xVolTenant','Required parameter requestParameters.xVolTenant was null or undefined when calling getManifestsUsingGET.');
        }

        const queryParameters: any = {};

        if (requestParameters.fromDays !== undefined) {
            queryParameters['fromDays'] = requestParameters.fromDays;
        }

        if (requestParameters.fulfillmentLocationCode !== undefined) {
            queryParameters['fulfillmentLocationCode'] = requestParameters.fulfillmentLocationCode;
        }

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xVolSite !== undefined && requestParameters.xVolSite !== null) {
            headerParameters['x-vol-site'] = String(requestParameters.xVolSite);
        }

        if (requestParameters.xVolTenant !== undefined && requestParameters.xVolTenant !== null) {
            headerParameters['x-vol-tenant'] = String(requestParameters.xVolTenant);
        }





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/fulfillment/shipping/manifests`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * getManifests
     * getManifests
     */
    async getManifestsUsingGET(requestParameters: GetManifestsUsingGETRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionModelOfManifest> {
        const response = await this.getManifestsUsingGETRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
