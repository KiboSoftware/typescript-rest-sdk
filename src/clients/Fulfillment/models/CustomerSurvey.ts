/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { CustomerSurveyEntry } from './CustomerSurveyEntry';
import {
    CustomerSurveyEntryFromJSON,
    CustomerSurveyEntryFromJSONTyped,
    CustomerSurveyEntryToJSON,
} from './CustomerSurveyEntry';

/**
 * 
 * @export
 * @interface CustomerSurvey
 */
export interface CustomerSurvey {
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof CustomerSurvey
     */
    attributes?: { [key: string]: object; };
    /**
     * 
     * @type {AuditInfo}
     * @memberof CustomerSurvey
     */
    auditInfo?: AuditInfo;
    /**
     * 
     * @type {Array<CustomerSurveyEntry>}
     * @memberof CustomerSurvey
     */
    entries?: Array<CustomerSurveyEntry>;
    /**
     * 
     * @type {string}
     * @memberof CustomerSurvey
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof CustomerSurvey
     */
    shipmentNumber?: number;
    /**
     * 
     * @type {number}
     * @memberof CustomerSurvey
     */
    siteId?: number;
    /**
     * 
     * @type {number}
     * @memberof CustomerSurvey
     */
    tenantId?: number;
}

/**
 * Check if a given object implements the CustomerSurvey interface.
 */
export function instanceOfCustomerSurvey(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerSurveyFromJSON(json: any): CustomerSurvey {
    return CustomerSurveyFromJSONTyped(json, false);
}

export function CustomerSurveyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerSurvey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'entries': !exists(json, 'entries') ? undefined : ((json['entries'] as Array<any>).map(CustomerSurveyEntryFromJSON)),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'shipmentNumber': !exists(json, 'shipmentNumber') ? undefined : json['shipmentNumber'],
        'siteId': !exists(json, 'siteId') ? undefined : json['siteId'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
    };
}

export function CustomerSurveyToJSON(value?: CustomerSurvey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributes': value.attributes,
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'entries': value.entries === undefined ? undefined : ((value.entries as Array<any>).map(CustomerSurveyEntryToJSON)),
        'id': value.id,
        'shipmentNumber': value.shipmentNumber,
        'siteId': value.siteId,
        'tenantId': value.tenantId,
    };
}

