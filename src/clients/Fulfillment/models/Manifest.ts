/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo0 } from './AuditInfo0';
import {
    AuditInfo0FromJSON,
    AuditInfo0FromJSONTyped,
    AuditInfo0ToJSON,
} from './AuditInfo0';
import type { ManifestShipment } from './ManifestShipment';
import {
    ManifestShipmentFromJSON,
    ManifestShipmentFromJSONTyped,
    ManifestShipmentToJSON,
} from './ManifestShipment';

/**
 * 
 * @export
 * @interface Manifest
 */
export interface Manifest {
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof Manifest
     */
    attributes?: { [key: string]: object; };
    /**
     * 
     * @type {AuditInfo0}
     * @memberof Manifest
     */
    auditInfo?: AuditInfo0;
    /**
     * 
     * @type {string}
     * @memberof Manifest
     */
    carrierId?: string;
    /**
     * 
     * @type {string}
     * @memberof Manifest
     */
    internalId?: string;
    /**
     * 
     * @type {string}
     * @memberof Manifest
     */
    locationCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Manifest
     */
    manifestId?: string;
    /**
     * 
     * @type {string}
     * @memberof Manifest
     */
    manifestUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof Manifest
     */
    numberOfPackages?: number;
    /**
     * 
     * @type {number}
     * @memberof Manifest
     */
    numberOfShipments?: number;
    /**
     * 
     * @type {Array<ManifestShipment>}
     * @memberof Manifest
     */
    shipments?: Array<ManifestShipment>;
    /**
     * 
     * @type {number}
     * @memberof Manifest
     */
    tenantId?: number;
    /**
     * 
     * @type {string}
     * @memberof Manifest
     */
    userDisplayName?: string;
    /**
     * 
     * @type {string}
     * @memberof Manifest
     */
    userId?: string;
}

/**
 * Check if a given object implements the Manifest interface.
 */
export function instanceOfManifest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ManifestFromJSON(json: any): Manifest {
    return ManifestFromJSONTyped(json, false);
}

export function ManifestFromJSONTyped(json: any, ignoreDiscriminator: boolean): Manifest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfo0FromJSON(json['auditInfo']),
        'carrierId': !exists(json, 'carrierId') ? undefined : json['carrierId'],
        'internalId': !exists(json, 'internalId') ? undefined : json['internalId'],
        'locationCode': !exists(json, 'locationCode') ? undefined : json['locationCode'],
        'manifestId': !exists(json, 'manifestId') ? undefined : json['manifestId'],
        'manifestUrl': !exists(json, 'manifestUrl') ? undefined : json['manifestUrl'],
        'numberOfPackages': !exists(json, 'numberOfPackages') ? undefined : json['numberOfPackages'],
        'numberOfShipments': !exists(json, 'numberOfShipments') ? undefined : json['numberOfShipments'],
        'shipments': !exists(json, 'shipments') ? undefined : ((json['shipments'] as Array<any>).map(ManifestShipmentFromJSON)),
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'userDisplayName': !exists(json, 'userDisplayName') ? undefined : json['userDisplayName'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function ManifestToJSON(value?: Manifest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributes': value.attributes,
        'auditInfo': AuditInfo0ToJSON(value.auditInfo),
        'carrierId': value.carrierId,
        'internalId': value.internalId,
        'locationCode': value.locationCode,
        'manifestId': value.manifestId,
        'manifestUrl': value.manifestUrl,
        'numberOfPackages': value.numberOfPackages,
        'numberOfShipments': value.numberOfShipments,
        'shipments': value.shipments === undefined ? undefined : ((value.shipments as Array<any>).map(ManifestShipmentToJSON)),
        'tenantId': value.tenantId,
        'userDisplayName': value.userDisplayName,
        'userId': value.userId,
    };
}

