/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FulfillmentTaskInput
 */
export interface FulfillmentTaskInput {
    /**
     * 
     * @type {string}
     * @memberof FulfillmentTaskInput
     */
    helpMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentTaskInput
     */
    label?: string;
    /**
     * 
     * @type {number}
     * @memberof FulfillmentTaskInput
     */
    maxLength?: number;
    /**
     * 
     * @type {number}
     * @memberof FulfillmentTaskInput
     */
    maximum?: number;
    /**
     * 
     * @type {number}
     * @memberof FulfillmentTaskInput
     */
    minLength?: number;
    /**
     * 
     * @type {number}
     * @memberof FulfillmentTaskInput
     */
    minimum?: number;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentTaskInput
     */
    name?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof FulfillmentTaskInput
     */
    options?: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentTaskInput
     */
    pattern?: string;
    /**
     * 
     * @type {boolean}
     * @memberof FulfillmentTaskInput
     */
    required?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentTaskInput
     */
    type?: FulfillmentTaskInputTypeEnum;
}


/**
 * @export
 */
export const FulfillmentTaskInputTypeEnum = {
    Boolean: 'BOOLEAN',
    Integer: 'INTEGER',
    List: 'LIST',
    Number: 'NUMBER',
    Object: 'OBJECT',
    String: 'STRING',
    Unknown: 'UNKNOWN'
} as const;
export type FulfillmentTaskInputTypeEnum = typeof FulfillmentTaskInputTypeEnum[keyof typeof FulfillmentTaskInputTypeEnum];


/**
 * Check if a given object implements the FulfillmentTaskInput interface.
 */
export function instanceOfFulfillmentTaskInput(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FulfillmentTaskInputFromJSON(json: any): FulfillmentTaskInput {
    return FulfillmentTaskInputFromJSONTyped(json, false);
}

export function FulfillmentTaskInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): FulfillmentTaskInput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'helpMessage': !exists(json, 'helpMessage') ? undefined : json['helpMessage'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'maxLength': !exists(json, 'maxLength') ? undefined : json['maxLength'],
        'maximum': !exists(json, 'maximum') ? undefined : json['maximum'],
        'minLength': !exists(json, 'minLength') ? undefined : json['minLength'],
        'minimum': !exists(json, 'minimum') ? undefined : json['minimum'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'options': !exists(json, 'options') ? undefined : json['options'],
        'pattern': !exists(json, 'pattern') ? undefined : json['pattern'],
        'required': !exists(json, 'required') ? undefined : json['required'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function FulfillmentTaskInputToJSON(value?: FulfillmentTaskInput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'helpMessage': value.helpMessage,
        'label': value.label,
        'maxLength': value.maxLength,
        'maximum': value.maximum,
        'minLength': value.minLength,
        'minimum': value.minimum,
        'name': value.name,
        'options': value.options,
        'pattern': value.pattern,
        'required': value.required,
        'type': value.type,
    };
}

