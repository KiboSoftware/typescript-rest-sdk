/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TransferredReason } from './TransferredReason';
import {
    TransferredReasonFromJSON,
    TransferredReasonFromJSONTyped,
    TransferredReasonToJSON,
} from './TransferredReason';

/**
 * 
 * @export
 * @interface TransferItem
 */
export interface TransferItem {
    /**
     * 
     * @type {boolean}
     * @memberof TransferItem
     */
    blockAssignment?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TransferItem
     */
    fulfillmentLocationCode?: string;
    /**
     * 
     * @type {number}
     * @memberof TransferItem
     */
    lineId: number;
    /**
     * 
     * @type {number}
     * @memberof TransferItem
     */
    quantity: number;
    /**
     * 
     * @type {TransferredReason}
     * @memberof TransferItem
     */
    transferredReason?: TransferredReason;
}

/**
 * Check if a given object implements the TransferItem interface.
 */
export function instanceOfTransferItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lineId" in value;
    isInstance = isInstance && "quantity" in value;

    return isInstance;
}

export function TransferItemFromJSON(json: any): TransferItem {
    return TransferItemFromJSONTyped(json, false);
}

export function TransferItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockAssignment': !exists(json, 'blockAssignment') ? undefined : json['blockAssignment'],
        'fulfillmentLocationCode': !exists(json, 'fulfillmentLocationCode') ? undefined : json['fulfillmentLocationCode'],
        'lineId': json['lineId'],
        'quantity': json['quantity'],
        'transferredReason': !exists(json, 'transferredReason') ? undefined : TransferredReasonFromJSON(json['transferredReason']),
    };
}

export function TransferItemToJSON(value?: TransferItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockAssignment': value.blockAssignment,
        'fulfillmentLocationCode': value.fulfillmentLocationCode,
        'lineId': value.lineId,
        'quantity': value.quantity,
        'transferredReason': TransferredReasonToJSON(value.transferredReason),
    };
}

