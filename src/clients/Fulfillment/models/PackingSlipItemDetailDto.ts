/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PackingSlipItemDetailDto
 */
export interface PackingSlipItemDetailDto {
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof PackingSlipItemDetailDto
     */
    attributes?: { [key: string]: object; };
    /**
     * 
     * @type {number}
     * @memberof PackingSlipItemDetailDto
     */
    lineId?: number;
    /**
     * 
     * @type {string}
     * @memberof PackingSlipItemDetailDto
     */
    originalOrderItemId?: string;
    /**
     * 
     * @type {number}
     * @memberof PackingSlipItemDetailDto
     */
    quantity?: number;
}

/**
 * Check if a given object implements the PackingSlipItemDetailDto interface.
 */
export function instanceOfPackingSlipItemDetailDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PackingSlipItemDetailDtoFromJSON(json: any): PackingSlipItemDetailDto {
    return PackingSlipItemDetailDtoFromJSONTyped(json, false);
}

export function PackingSlipItemDetailDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackingSlipItemDetailDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'lineId': !exists(json, 'lineId') ? undefined : json['lineId'],
        'originalOrderItemId': !exists(json, 'originalOrderItemId') ? undefined : json['originalOrderItemId'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
    };
}

export function PackingSlipItemDetailDtoToJSON(value?: PackingSlipItemDetailDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributes': value.attributes,
        'lineId': value.lineId,
        'originalOrderItemId': value.originalOrderItemId,
        'quantity': value.quantity,
    };
}

