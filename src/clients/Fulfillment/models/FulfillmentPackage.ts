/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FulfillmentAuditInfo } from './FulfillmentAuditInfo';
import {
    FulfillmentAuditInfoFromJSON,
    FulfillmentAuditInfoFromJSONTyped,
    FulfillmentAuditInfoToJSON,
} from './FulfillmentAuditInfo';
import type { FulfillmentPackageMeasurements } from './FulfillmentPackageMeasurements';
import {
    FulfillmentPackageMeasurementsFromJSON,
    FulfillmentPackageMeasurementsFromJSONTyped,
    FulfillmentPackageMeasurementsToJSON,
} from './FulfillmentPackageMeasurements';
import type { FulfillmentTracking } from './FulfillmentTracking';
import {
    FulfillmentTrackingFromJSON,
    FulfillmentTrackingFromJSONTyped,
    FulfillmentTrackingToJSON,
} from './FulfillmentTracking';
import type { PackingSlipItemDetailDto } from './PackingSlipItemDetailDto';
import {
    PackingSlipItemDetailDtoFromJSON,
    PackingSlipItemDetailDtoFromJSONTyped,
    PackingSlipItemDetailDtoToJSON,
} from './PackingSlipItemDetailDto';

/**
 * 
 * @export
 * @interface FulfillmentPackage
 */
export interface FulfillmentPackage {
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof FulfillmentPackage
     */
    attributes?: { [key: string]: object; };
    /**
     * 
     * @type {FulfillmentAuditInfo}
     * @memberof FulfillmentPackage
     */
    auditInfo?: FulfillmentAuditInfo;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    carrier?: string;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    fxcbDocumentsUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    fxcbPackNotificationId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof FulfillmentPackage
     */
    hasLabel?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    integratorId?: string;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    labelFormat?: string;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    manifestId?: string;
    /**
     * 
     * @type {FulfillmentPackageMeasurements}
     * @memberof FulfillmentPackage
     */
    measurements?: FulfillmentPackageMeasurements;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    packageId?: string;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    packagingType?: string;
    /**
     * 
     * @type {Array<PackingSlipItemDetailDto>}
     * @memberof FulfillmentPackage
     */
    packingSlipItemDetails?: Array<PackingSlipItemDetailDto>;
    /**
     * 
     * @type {number}
     * @memberof FulfillmentPackage
     */
    packingSlipNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    returnCarrier?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof FulfillmentPackage
     */
    returnTrackingNumbers?: Array<string>;
    /**
     * 
     * @type {Array<FulfillmentTracking>}
     * @memberof FulfillmentPackage
     */
    returnTrackings?: Array<FulfillmentTracking>;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    shippingMethodCode?: string;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    shippingMethodName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof FulfillmentPackage
     */
    signatureRequired?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FulfillmentPackage
     */
    stringBarcode?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof FulfillmentPackage
     */
    trackingNumbers?: Array<string>;
    /**
     * 
     * @type {Array<FulfillmentTracking>}
     * @memberof FulfillmentPackage
     */
    trackings?: Array<FulfillmentTracking>;
}

/**
 * Check if a given object implements the FulfillmentPackage interface.
 */
export function instanceOfFulfillmentPackage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FulfillmentPackageFromJSON(json: any): FulfillmentPackage {
    return FulfillmentPackageFromJSONTyped(json, false);
}

export function FulfillmentPackageFromJSONTyped(json: any, ignoreDiscriminator: boolean): FulfillmentPackage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : FulfillmentAuditInfoFromJSON(json['auditInfo']),
        'carrier': !exists(json, 'carrier') ? undefined : json['carrier'],
        'fxcbDocumentsUrl': !exists(json, 'fxcbDocumentsUrl') ? undefined : json['fxcbDocumentsUrl'],
        'fxcbPackNotificationId': !exists(json, 'fxcbPackNotificationId') ? undefined : json['fxcbPackNotificationId'],
        'hasLabel': !exists(json, 'hasLabel') ? undefined : json['hasLabel'],
        'integratorId': !exists(json, 'integratorId') ? undefined : json['integratorId'],
        'labelFormat': !exists(json, 'labelFormat') ? undefined : json['labelFormat'],
        'manifestId': !exists(json, 'manifestId') ? undefined : json['manifestId'],
        'measurements': !exists(json, 'measurements') ? undefined : FulfillmentPackageMeasurementsFromJSON(json['measurements']),
        'packageId': !exists(json, 'packageId') ? undefined : json['packageId'],
        'packagingType': !exists(json, 'packagingType') ? undefined : json['packagingType'],
        'packingSlipItemDetails': !exists(json, 'packingSlipItemDetails') ? undefined : ((json['packingSlipItemDetails'] as Array<any>).map(PackingSlipItemDetailDtoFromJSON)),
        'packingSlipNumber': !exists(json, 'packingSlipNumber') ? undefined : json['packingSlipNumber'],
        'returnCarrier': !exists(json, 'returnCarrier') ? undefined : json['returnCarrier'],
        'returnTrackingNumbers': !exists(json, 'returnTrackingNumbers') ? undefined : json['returnTrackingNumbers'],
        'returnTrackings': !exists(json, 'returnTrackings') ? undefined : ((json['returnTrackings'] as Array<any>).map(FulfillmentTrackingFromJSON)),
        'shippingMethodCode': !exists(json, 'shippingMethodCode') ? undefined : json['shippingMethodCode'],
        'shippingMethodName': !exists(json, 'shippingMethodName') ? undefined : json['shippingMethodName'],
        'signatureRequired': !exists(json, 'signatureRequired') ? undefined : json['signatureRequired'],
        'stringBarcode': !exists(json, 'stringBarcode') ? undefined : json['stringBarcode'],
        'trackingNumbers': !exists(json, 'trackingNumbers') ? undefined : json['trackingNumbers'],
        'trackings': !exists(json, 'trackings') ? undefined : ((json['trackings'] as Array<any>).map(FulfillmentTrackingFromJSON)),
    };
}

export function FulfillmentPackageToJSON(value?: FulfillmentPackage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributes': value.attributes,
        'auditInfo': FulfillmentAuditInfoToJSON(value.auditInfo),
        'carrier': value.carrier,
        'fxcbDocumentsUrl': value.fxcbDocumentsUrl,
        'fxcbPackNotificationId': value.fxcbPackNotificationId,
        'hasLabel': value.hasLabel,
        'integratorId': value.integratorId,
        'labelFormat': value.labelFormat,
        'manifestId': value.manifestId,
        'measurements': FulfillmentPackageMeasurementsToJSON(value.measurements),
        'packageId': value.packageId,
        'packagingType': value.packagingType,
        'packingSlipItemDetails': value.packingSlipItemDetails === undefined ? undefined : ((value.packingSlipItemDetails as Array<any>).map(PackingSlipItemDetailDtoToJSON)),
        'packingSlipNumber': value.packingSlipNumber,
        'returnCarrier': value.returnCarrier,
        'returnTrackingNumbers': value.returnTrackingNumbers,
        'returnTrackings': value.returnTrackings === undefined ? undefined : ((value.returnTrackings as Array<any>).map(FulfillmentTrackingToJSON)),
        'shippingMethodCode': value.shippingMethodCode,
        'shippingMethodName': value.shippingMethodName,
        'signatureRequired': value.signatureRequired,
        'stringBarcode': value.stringBarcode,
        'trackingNumbers': value.trackingNumbers,
        'trackings': value.trackings === undefined ? undefined : ((value.trackings as Array<any>).map(FulfillmentTrackingToJSON)),
    };
}

