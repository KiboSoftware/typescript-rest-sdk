/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';

/**
 * 
 * @export
 * @interface DashboardStep
 */
export interface DashboardStep {
    /**
     * 
     * @type {Links}
     * @memberof DashboardStep
     */
    links?: Links;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof DashboardStep
     */
    attributes?: { [key: string]: object; };
    /**
     * 
     * @type {string}
     * @memberof DashboardStep
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof DashboardStep
     */
    total?: number;
}

/**
 * Check if a given object implements the DashboardStep interface.
 */
export function instanceOfDashboardStep(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DashboardStepFromJSON(json: any): DashboardStep {
    return DashboardStepFromJSONTyped(json, false);
}

export function DashboardStepFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardStep {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, '_links') ? undefined : LinksFromJSON(json['_links']),
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'total': !exists(json, 'total') ? undefined : json['total'],
    };
}

export function DashboardStepToJSON(value?: DashboardStep | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_links': LinksToJSON(value.links),
        'attributes': value.attributes,
        'name': value.name,
        'total': value.total,
    };
}

