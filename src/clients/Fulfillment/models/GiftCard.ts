/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GiftCard
 */
export interface GiftCard {
    /**
     * 
     * @type {Date}
     * @memberof GiftCard
     */
    activationDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof GiftCard
     */
    cardNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof GiftCard
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof GiftCard
     */
    creditType?: string;
    /**
     * 
     * @type {number}
     * @memberof GiftCard
     */
    creditValue?: number;
    /**
     * 
     * @type {string}
     * @memberof GiftCard
     */
    currencyCode?: string;
    /**
     * 
     * @type {number}
     * @memberof GiftCard
     */
    currentBalance?: number;
    /**
     * 
     * @type {number}
     * @memberof GiftCard
     */
    customerId?: number;
    /**
     * 
     * @type {Date}
     * @memberof GiftCard
     */
    expirationDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof GiftCard
     */
    initialBalance?: number;
}

/**
 * Check if a given object implements the GiftCard interface.
 */
export function instanceOfGiftCard(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GiftCardFromJSON(json: any): GiftCard {
    return GiftCardFromJSONTyped(json, false);
}

export function GiftCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): GiftCard {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'activationDate': !exists(json, 'activationDate') ? undefined : (new Date(json['activationDate'])),
        'cardNumber': !exists(json, 'cardNumber') ? undefined : json['cardNumber'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'creditType': !exists(json, 'creditType') ? undefined : json['creditType'],
        'creditValue': !exists(json, 'creditValue') ? undefined : json['creditValue'],
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
        'currentBalance': !exists(json, 'currentBalance') ? undefined : json['currentBalance'],
        'customerId': !exists(json, 'customerId') ? undefined : json['customerId'],
        'expirationDate': !exists(json, 'expirationDate') ? undefined : (new Date(json['expirationDate'])),
        'initialBalance': !exists(json, 'initialBalance') ? undefined : json['initialBalance'],
    };
}

export function GiftCardToJSON(value?: GiftCard | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activationDate': value.activationDate === undefined ? undefined : (value.activationDate.toISOString()),
        'cardNumber': value.cardNumber,
        'code': value.code,
        'creditType': value.creditType,
        'creditValue': value.creditValue,
        'currencyCode': value.currencyCode,
        'currentBalance': value.currentBalance,
        'customerId': value.customerId,
        'expirationDate': value.expirationDate === undefined ? undefined : (value.expirationDate.toISOString()),
        'initialBalance': value.initialBalance,
    };
}

