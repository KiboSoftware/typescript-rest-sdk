/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppeasementReason } from './AppeasementReason';
import {
    AppeasementReasonFromJSON,
    AppeasementReasonFromJSONTyped,
    AppeasementReasonToJSON,
} from './AppeasementReason';
import type { AuditInfo0 } from './AuditInfo0';
import {
    AuditInfo0FromJSON,
    AuditInfo0FromJSONTyped,
    AuditInfo0ToJSON,
} from './AuditInfo0';
import type { FulfillmentField } from './FulfillmentField';
import {
    FulfillmentFieldFromJSON,
    FulfillmentFieldFromJSONTyped,
    FulfillmentFieldToJSON,
} from './FulfillmentField';
import type { GiftCard } from './GiftCard';
import {
    GiftCardFromJSON,
    GiftCardFromJSONTyped,
    GiftCardToJSON,
} from './GiftCard';
import type { InventoryTag } from './InventoryTag';
import {
    InventoryTagFromJSON,
    InventoryTagFromJSONTyped,
    InventoryTagToJSON,
} from './InventoryTag';
import type { ProductOption } from './ProductOption';
import {
    ProductOptionFromJSON,
    ProductOptionFromJSONTyped,
    ProductOptionToJSON,
} from './ProductOption';
import type { RejectedReason } from './RejectedReason';
import {
    RejectedReasonFromJSON,
    RejectedReasonFromJSONTyped,
    RejectedReasonToJSON,
} from './RejectedReason';

/**
 * 
 * @export
 * @interface RejectedItem
 */
export interface RejectedItem {
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    actualPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    allocatedQuantity?: number;
    /**
     * 
     * @type {boolean}
     * @memberof RejectedItem
     */
    allowsBackOrder?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RejectedItem
     */
    allowsFutureAllocate?: boolean;
    /**
     * 
     * @type {AppeasementReason}
     * @memberof RejectedItem
     */
    appeasementReason?: AppeasementReason;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof RejectedItem
     */
    attributes?: { [key: string]: object; };
    /**
     * 
     * @type {AuditInfo0}
     * @memberof RejectedItem
     */
    auditInfo?: AuditInfo0;
    /**
     * 
     * @type {Date}
     * @memberof RejectedItem
     */
    backorderReleaseDate?: Date;
    /**
     * If true, order routing will not suggest that any shipments with these items be assigned to the original location. This persists until the inventory records for these items are updated. When the records are updated, blockAssignment will automatically be disabled again to allow new assignments. This is an optional parameter and defaults to false if not provided in the request.
     * @type {boolean}
     * @memberof RejectedItem
     */
    blockAssignment?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    cartItemId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RejectedItem
     */
    childItemIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    creditCurrencyCode?: string;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    creditValue?: number;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof RejectedItem
     */
    data?: { [key: string]: object; };
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    duty?: number;
    /**
     * 
     * @type {Date}
     * @memberof RejectedItem
     */
    expectedDeliveryDate?: Date;
    /**
     * 
     * @type {Array<FulfillmentField>}
     * @memberof RejectedItem
     */
    fulfillmentFields?: Array<FulfillmentField>;
    /**
     * 
     * @type {Array<GiftCard>}
     * @memberof RejectedItem
     */
    giftCards?: Array<GiftCard>;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    goodsType?: RejectedItemGoodsTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    handling: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    handlingDiscount?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    handlingTax: number;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    imageUrl?: string;
    /**
     * 
     * @type {Array<InventoryTag>}
     * @memberof RejectedItem
     */
    inventoryTags?: Array<InventoryTag>;
    /**
     * 
     * @type {boolean}
     * @memberof RejectedItem
     */
    isAssemblyRequired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RejectedItem
     */
    isPackagedStandAlone?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RejectedItem
     */
    isReservedInventory?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RejectedItem
     */
    isTaxable?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    itemDiscount?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    itemTax: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    lineId: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    lineItemAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    lineItemCost?: number;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    locatorName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RejectedItem
     */
    manageStock?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    optionAttributeFQN?: string;
    /**
     * 
     * @type {Array<ProductOption>}
     * @memberof RejectedItem
     */
    options?: Array<ProductOption>;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    originalOrderItemId?: string;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    originalQuantity?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    overridePrice?: number;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    parentItemId?: string;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    partNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    productCode?: string;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    quantity: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    readyForPickupQuantity?: number;
    /**
     * 
     * @type {RejectedReason}
     * @memberof RejectedItem
     */
    rejectedReason?: RejectedReason;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    shipping: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    shippingDiscount?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    shippingTax: number;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    sku?: string;
    /**
     * 
     * @type {object}
     * @memberof RejectedItem
     */
    taxData?: object;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    taxableHandling?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    taxableLineItemCost?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    taxableShipping?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    transferQuantity?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    trueTransferQuantity?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    unitPrice?: number;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    upc?: string;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    variationProductCode?: string;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    weight?: number;
    /**
     * 
     * @type {string}
     * @memberof RejectedItem
     */
    weightUnit?: string;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    weightedDutyAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    weightedHandlingAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    weightedHandlingTaxAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    weightedLineItemTaxAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    weightedShipmentAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    weightedShippingAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof RejectedItem
     */
    weightedShippingTaxAdjustment?: number;
}


/**
 * @export
 */
export const RejectedItemGoodsTypeEnum = {
    Digital: 'Digital',
    DigitalCredit: 'DigitalCredit',
    DigitalGiftCard: 'DigitalGiftCard',
    Physical: 'Physical',
    Service: 'Service'
} as const;
export type RejectedItemGoodsTypeEnum = typeof RejectedItemGoodsTypeEnum[keyof typeof RejectedItemGoodsTypeEnum];


/**
 * Check if a given object implements the RejectedItem interface.
 */
export function instanceOfRejectedItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "handling" in value;
    isInstance = isInstance && "handlingTax" in value;
    isInstance = isInstance && "itemTax" in value;
    isInstance = isInstance && "lineId" in value;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "shipping" in value;
    isInstance = isInstance && "shippingTax" in value;

    return isInstance;
}

export function RejectedItemFromJSON(json: any): RejectedItem {
    return RejectedItemFromJSONTyped(json, false);
}

export function RejectedItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): RejectedItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'actualPrice': !exists(json, 'actualPrice') ? undefined : json['actualPrice'],
        'allocatedQuantity': !exists(json, 'allocatedQuantity') ? undefined : json['allocatedQuantity'],
        'allowsBackOrder': !exists(json, 'allowsBackOrder') ? undefined : json['allowsBackOrder'],
        'allowsFutureAllocate': !exists(json, 'allowsFutureAllocate') ? undefined : json['allowsFutureAllocate'],
        'appeasementReason': !exists(json, 'appeasementReason') ? undefined : AppeasementReasonFromJSON(json['appeasementReason']),
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfo0FromJSON(json['auditInfo']),
        'backorderReleaseDate': !exists(json, 'backorderReleaseDate') ? undefined : (new Date(json['backorderReleaseDate'])),
        'blockAssignment': !exists(json, 'blockAssignment') ? undefined : json['blockAssignment'],
        'cartItemId': !exists(json, 'cartItemId') ? undefined : json['cartItemId'],
        'childItemIds': !exists(json, 'childItemIds') ? undefined : json['childItemIds'],
        'creditCurrencyCode': !exists(json, 'creditCurrencyCode') ? undefined : json['creditCurrencyCode'],
        'creditValue': !exists(json, 'creditValue') ? undefined : json['creditValue'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'duty': !exists(json, 'duty') ? undefined : json['duty'],
        'expectedDeliveryDate': !exists(json, 'expectedDeliveryDate') ? undefined : (new Date(json['expectedDeliveryDate'])),
        'fulfillmentFields': !exists(json, 'fulfillmentFields') ? undefined : ((json['fulfillmentFields'] as Array<any>).map(FulfillmentFieldFromJSON)),
        'giftCards': !exists(json, 'giftCards') ? undefined : ((json['giftCards'] as Array<any>).map(GiftCardFromJSON)),
        'goodsType': !exists(json, 'goodsType') ? undefined : json['goodsType'],
        'handling': json['handling'],
        'handlingDiscount': !exists(json, 'handlingDiscount') ? undefined : json['handlingDiscount'],
        'handlingTax': json['handlingTax'],
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'inventoryTags': !exists(json, 'inventoryTags') ? undefined : ((json['inventoryTags'] as Array<any>).map(InventoryTagFromJSON)),
        'isAssemblyRequired': !exists(json, 'isAssemblyRequired') ? undefined : json['isAssemblyRequired'],
        'isPackagedStandAlone': !exists(json, 'isPackagedStandAlone') ? undefined : json['isPackagedStandAlone'],
        'isReservedInventory': !exists(json, 'isReservedInventory') ? undefined : json['isReservedInventory'],
        'isTaxable': !exists(json, 'isTaxable') ? undefined : json['isTaxable'],
        'itemDiscount': !exists(json, 'itemDiscount') ? undefined : json['itemDiscount'],
        'itemTax': json['itemTax'],
        'lineId': json['lineId'],
        'lineItemAdjustment': !exists(json, 'lineItemAdjustment') ? undefined : json['lineItemAdjustment'],
        'lineItemCost': !exists(json, 'lineItemCost') ? undefined : json['lineItemCost'],
        'locatorName': !exists(json, 'locatorName') ? undefined : json['locatorName'],
        'manageStock': !exists(json, 'manageStock') ? undefined : json['manageStock'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'optionAttributeFQN': !exists(json, 'optionAttributeFQN') ? undefined : json['optionAttributeFQN'],
        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(ProductOptionFromJSON)),
        'originalOrderItemId': !exists(json, 'originalOrderItemId') ? undefined : json['originalOrderItemId'],
        'originalQuantity': !exists(json, 'originalQuantity') ? undefined : json['originalQuantity'],
        'overridePrice': !exists(json, 'overridePrice') ? undefined : json['overridePrice'],
        'parentItemId': !exists(json, 'parentItemId') ? undefined : json['parentItemId'],
        'partNumber': !exists(json, 'partNumber') ? undefined : json['partNumber'],
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'quantity': json['quantity'],
        'readyForPickupQuantity': !exists(json, 'readyForPickupQuantity') ? undefined : json['readyForPickupQuantity'],
        'rejectedReason': !exists(json, 'rejectedReason') ? undefined : RejectedReasonFromJSON(json['rejectedReason']),
        'shipping': json['shipping'],
        'shippingDiscount': !exists(json, 'shippingDiscount') ? undefined : json['shippingDiscount'],
        'shippingTax': json['shippingTax'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'taxData': !exists(json, 'taxData') ? undefined : json['taxData'],
        'taxableHandling': !exists(json, 'taxableHandling') ? undefined : json['taxableHandling'],
        'taxableLineItemCost': !exists(json, 'taxableLineItemCost') ? undefined : json['taxableLineItemCost'],
        'taxableShipping': !exists(json, 'taxableShipping') ? undefined : json['taxableShipping'],
        'transferQuantity': !exists(json, 'transferQuantity') ? undefined : json['transferQuantity'],
        'trueTransferQuantity': !exists(json, 'trueTransferQuantity') ? undefined : json['trueTransferQuantity'],
        'unitPrice': !exists(json, 'unitPrice') ? undefined : json['unitPrice'],
        'upc': !exists(json, 'upc') ? undefined : json['upc'],
        'variationProductCode': !exists(json, 'variationProductCode') ? undefined : json['variationProductCode'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
        'weightUnit': !exists(json, 'weightUnit') ? undefined : json['weightUnit'],
        'weightedDutyAdjustment': !exists(json, 'weightedDutyAdjustment') ? undefined : json['weightedDutyAdjustment'],
        'weightedHandlingAdjustment': !exists(json, 'weightedHandlingAdjustment') ? undefined : json['weightedHandlingAdjustment'],
        'weightedHandlingTaxAdjustment': !exists(json, 'weightedHandlingTaxAdjustment') ? undefined : json['weightedHandlingTaxAdjustment'],
        'weightedLineItemTaxAdjustment': !exists(json, 'weightedLineItemTaxAdjustment') ? undefined : json['weightedLineItemTaxAdjustment'],
        'weightedShipmentAdjustment': !exists(json, 'weightedShipmentAdjustment') ? undefined : json['weightedShipmentAdjustment'],
        'weightedShippingAdjustment': !exists(json, 'weightedShippingAdjustment') ? undefined : json['weightedShippingAdjustment'],
        'weightedShippingTaxAdjustment': !exists(json, 'weightedShippingTaxAdjustment') ? undefined : json['weightedShippingTaxAdjustment'],
    };
}

export function RejectedItemToJSON(value?: RejectedItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'actualPrice': value.actualPrice,
        'allocatedQuantity': value.allocatedQuantity,
        'allowsBackOrder': value.allowsBackOrder,
        'allowsFutureAllocate': value.allowsFutureAllocate,
        'appeasementReason': AppeasementReasonToJSON(value.appeasementReason),
        'attributes': value.attributes,
        'auditInfo': AuditInfo0ToJSON(value.auditInfo),
        'backorderReleaseDate': value.backorderReleaseDate === undefined ? undefined : (value.backorderReleaseDate.toISOString()),
        'blockAssignment': value.blockAssignment,
        'cartItemId': value.cartItemId,
        'childItemIds': value.childItemIds,
        'creditCurrencyCode': value.creditCurrencyCode,
        'creditValue': value.creditValue,
        'data': value.data,
        'duty': value.duty,
        'expectedDeliveryDate': value.expectedDeliveryDate === undefined ? undefined : (value.expectedDeliveryDate.toISOString()),
        'fulfillmentFields': value.fulfillmentFields === undefined ? undefined : ((value.fulfillmentFields as Array<any>).map(FulfillmentFieldToJSON)),
        'giftCards': value.giftCards === undefined ? undefined : ((value.giftCards as Array<any>).map(GiftCardToJSON)),
        'goodsType': value.goodsType,
        'handling': value.handling,
        'handlingDiscount': value.handlingDiscount,
        'handlingTax': value.handlingTax,
        'imageUrl': value.imageUrl,
        'inventoryTags': value.inventoryTags === undefined ? undefined : ((value.inventoryTags as Array<any>).map(InventoryTagToJSON)),
        'isAssemblyRequired': value.isAssemblyRequired,
        'isPackagedStandAlone': value.isPackagedStandAlone,
        'isReservedInventory': value.isReservedInventory,
        'isTaxable': value.isTaxable,
        'itemDiscount': value.itemDiscount,
        'itemTax': value.itemTax,
        'lineId': value.lineId,
        'lineItemAdjustment': value.lineItemAdjustment,
        'lineItemCost': value.lineItemCost,
        'locatorName': value.locatorName,
        'manageStock': value.manageStock,
        'name': value.name,
        'optionAttributeFQN': value.optionAttributeFQN,
        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(ProductOptionToJSON)),
        'originalOrderItemId': value.originalOrderItemId,
        'originalQuantity': value.originalQuantity,
        'overridePrice': value.overridePrice,
        'parentItemId': value.parentItemId,
        'partNumber': value.partNumber,
        'productCode': value.productCode,
        'quantity': value.quantity,
        'readyForPickupQuantity': value.readyForPickupQuantity,
        'rejectedReason': RejectedReasonToJSON(value.rejectedReason),
        'shipping': value.shipping,
        'shippingDiscount': value.shippingDiscount,
        'shippingTax': value.shippingTax,
        'sku': value.sku,
        'taxData': value.taxData,
        'taxableHandling': value.taxableHandling,
        'taxableLineItemCost': value.taxableLineItemCost,
        'taxableShipping': value.taxableShipping,
        'transferQuantity': value.transferQuantity,
        'trueTransferQuantity': value.trueTransferQuantity,
        'unitPrice': value.unitPrice,
        'upc': value.upc,
        'variationProductCode': value.variationProductCode,
        'weight': value.weight,
        'weightUnit': value.weightUnit,
        'weightedDutyAdjustment': value.weightedDutyAdjustment,
        'weightedHandlingAdjustment': value.weightedHandlingAdjustment,
        'weightedHandlingTaxAdjustment': value.weightedHandlingTaxAdjustment,
        'weightedLineItemTaxAdjustment': value.weightedLineItemTaxAdjustment,
        'weightedShipmentAdjustment': value.weightedShipmentAdjustment,
        'weightedShippingAdjustment': value.weightedShippingAdjustment,
        'weightedShippingTaxAdjustment': value.weightedShippingTaxAdjustment,
    };
}

