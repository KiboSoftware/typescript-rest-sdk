/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
} from './Link';
import type { Task } from './Task';
import {
    TaskFromJSON,
    TaskFromJSONTyped,
    TaskToJSON,
} from './Task';

/**
 * 
 * @export
 * @interface CollectionModelOfTask
 */
export interface CollectionModelOfTask {
    /**
     * 
     * @type {{ [key: string]: Array<Task>; }}
     * @memberof CollectionModelOfTask
     */
    embedded?: { [key: string]: Array<Task>; };
    /**
     * 
     * @type {{ [key: string]: Link; }}
     * @memberof CollectionModelOfTask
     */
    links?: { [key: string]: Link; };
}

/**
 * Check if a given object implements the CollectionModelOfTask interface.
 */
export function instanceOfCollectionModelOfTask(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CollectionModelOfTaskFromJSON(json: any): CollectionModelOfTask {
    return CollectionModelOfTaskFromJSONTyped(json, false);
}

export function CollectionModelOfTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectionModelOfTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'embedded': !exists(json, '_embedded') ? undefined : json['_embedded'],
        'links': !exists(json, '_links') ? undefined : (mapValues(json['_links'], LinkFromJSON)),
    };
}

export function CollectionModelOfTaskToJSON(value?: CollectionModelOfTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_embedded': value.embedded,
        '_links': value.links === undefined ? undefined : (mapValues(value.links, LinkToJSON)),
    };
}

