/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WorkflowProcessVariable
 */
export interface WorkflowProcessVariable {
    /**
     * 
     * @type {string}
     * @memberof WorkflowProcessVariable
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowProcessVariable
     */
    type?: WorkflowProcessVariableTypeEnum;
}


/**
 * @export
 */
export const WorkflowProcessVariableTypeEnum = {
    Boolean: 'BOOLEAN',
    Integer: 'INTEGER',
    List: 'LIST',
    Number: 'NUMBER',
    Object: 'OBJECT',
    String: 'STRING',
    Unknown: 'UNKNOWN'
} as const;
export type WorkflowProcessVariableTypeEnum = typeof WorkflowProcessVariableTypeEnum[keyof typeof WorkflowProcessVariableTypeEnum];


/**
 * Check if a given object implements the WorkflowProcessVariable interface.
 */
export function instanceOfWorkflowProcessVariable(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WorkflowProcessVariableFromJSON(json: any): WorkflowProcessVariable {
    return WorkflowProcessVariableFromJSONTyped(json, false);
}

export function WorkflowProcessVariableFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowProcessVariable {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function WorkflowProcessVariableToJSON(value?: WorkflowProcessVariable | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
    };
}

