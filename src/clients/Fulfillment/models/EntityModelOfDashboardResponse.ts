/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DashboardStep } from './DashboardStep';
import {
    DashboardStepFromJSON,
    DashboardStepFromJSONTyped,
    DashboardStepToJSON,
} from './DashboardStep';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';

/**
 * 
 * @export
 * @interface EntityModelOfDashboardResponse
 */
export interface EntityModelOfDashboardResponse {
    /**
     * 
     * @type {Links}
     * @memberof EntityModelOfDashboardResponse
     */
    links?: Links;
    /**
     * 
     * @type {string}
     * @memberof EntityModelOfDashboardResponse
     */
    shipmentType?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelOfDashboardResponse
     */
    shipmentTypeDisplayName?: string;
    /**
     * 
     * @type {Array<DashboardStep>}
     * @memberof EntityModelOfDashboardResponse
     */
    steps?: Array<DashboardStep>;
}

/**
 * Check if a given object implements the EntityModelOfDashboardResponse interface.
 */
export function instanceOfEntityModelOfDashboardResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EntityModelOfDashboardResponseFromJSON(json: any): EntityModelOfDashboardResponse {
    return EntityModelOfDashboardResponseFromJSONTyped(json, false);
}

export function EntityModelOfDashboardResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityModelOfDashboardResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, '_links') ? undefined : LinksFromJSON(json['_links']),
        'shipmentType': !exists(json, 'shipmentType') ? undefined : json['shipmentType'],
        'shipmentTypeDisplayName': !exists(json, 'shipmentTypeDisplayName') ? undefined : json['shipmentTypeDisplayName'],
        'steps': !exists(json, 'steps') ? undefined : ((json['steps'] as Array<any>).map(DashboardStepFromJSON)),
    };
}

export function EntityModelOfDashboardResponseToJSON(value?: EntityModelOfDashboardResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_links': LinksToJSON(value.links),
        'shipmentType': value.shipmentType,
        'shipmentTypeDisplayName': value.shipmentTypeDisplayName,
        'steps': value.steps === undefined ? undefined : ((value.steps as Array<any>).map(DashboardStepToJSON)),
    };
}

