/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppeasementReason } from './AppeasementReason';
import {
    AppeasementReasonFromJSON,
    AppeasementReasonFromJSONTyped,
    AppeasementReasonToJSON,
} from './AppeasementReason';
import type { AuditInfo0 } from './AuditInfo0';
import {
    AuditInfo0FromJSON,
    AuditInfo0FromJSONTyped,
    AuditInfo0ToJSON,
} from './AuditInfo0';
import type { FulfillmentField } from './FulfillmentField';
import {
    FulfillmentFieldFromJSON,
    FulfillmentFieldFromJSONTyped,
    FulfillmentFieldToJSON,
} from './FulfillmentField';
import type { GiftCard } from './GiftCard';
import {
    GiftCardFromJSON,
    GiftCardFromJSONTyped,
    GiftCardToJSON,
} from './GiftCard';
import type { InventoryTag } from './InventoryTag';
import {
    InventoryTagFromJSON,
    InventoryTagFromJSONTyped,
    InventoryTagToJSON,
} from './InventoryTag';
import type { ProductOption } from './ProductOption';
import {
    ProductOptionFromJSON,
    ProductOptionFromJSONTyped,
    ProductOptionToJSON,
} from './ProductOption';

/**
 * 
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    actualPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    allocatedQuantity?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Item
     */
    allowsBackOrder?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Item
     */
    allowsFutureAllocate?: boolean;
    /**
     * 
     * @type {AppeasementReason}
     * @memberof Item
     */
    appeasementReason?: AppeasementReason;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof Item
     */
    attributes?: { [key: string]: object; };
    /**
     * 
     * @type {AuditInfo0}
     * @memberof Item
     */
    auditInfo?: AuditInfo0;
    /**
     * 
     * @type {Date}
     * @memberof Item
     */
    backorderReleaseDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    cartItemId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Item
     */
    childItemIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    creditCurrencyCode?: string;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    creditValue?: number;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof Item
     */
    data?: { [key: string]: object; };
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    duty?: number;
    /**
     * 
     * @type {Date}
     * @memberof Item
     */
    expectedDeliveryDate?: Date;
    /**
     * 
     * @type {Array<FulfillmentField>}
     * @memberof Item
     */
    fulfillmentFields?: Array<FulfillmentField>;
    /**
     * 
     * @type {Array<GiftCard>}
     * @memberof Item
     */
    giftCards?: Array<GiftCard>;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    goodsType?: ItemGoodsTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    handling: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    handlingDiscount?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    handlingTax: number;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    imageUrl?: string;
    /**
     * 
     * @type {Array<InventoryTag>}
     * @memberof Item
     */
    inventoryTags?: Array<InventoryTag>;
    /**
     * 
     * @type {boolean}
     * @memberof Item
     */
    isAssemblyRequired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Item
     */
    isPackagedStandAlone?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Item
     */
    isReservedInventory?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Item
     */
    isTaxable?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    itemDiscount?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    itemTax: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    lineId: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    lineItemAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    lineItemCost?: number;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    locatorName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Item
     */
    manageStock?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    optionAttributeFQN?: string;
    /**
     * 
     * @type {Array<ProductOption>}
     * @memberof Item
     */
    options?: Array<ProductOption>;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    originalOrderItemId?: string;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    overridePrice?: number;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    parentItemId?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    partNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    productCode?: string;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    quantity: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    readyForPickupQuantity?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    shipping: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    shippingDiscount?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    shippingTax: number;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    sku?: string;
    /**
     * 
     * @type {object}
     * @memberof Item
     */
    taxData?: object;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    taxableHandling?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    taxableLineItemCost?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    taxableShipping?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    transferQuantity?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    trueTransferQuantity?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    unitPrice?: number;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    upc?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    variationProductCode?: string;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    weight?: number;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    weightUnit?: string;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    weightedDutyAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    weightedHandlingAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    weightedHandlingTaxAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    weightedLineItemTaxAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    weightedShipmentAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    weightedShippingAdjustment?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    weightedShippingTaxAdjustment?: number;
}


/**
 * @export
 */
export const ItemGoodsTypeEnum = {
    Digital: 'Digital',
    DigitalCredit: 'DigitalCredit',
    DigitalGiftCard: 'DigitalGiftCard',
    Physical: 'Physical',
    Service: 'Service'
} as const;
export type ItemGoodsTypeEnum = typeof ItemGoodsTypeEnum[keyof typeof ItemGoodsTypeEnum];


/**
 * Check if a given object implements the Item interface.
 */
export function instanceOfItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "handling" in value;
    isInstance = isInstance && "handlingTax" in value;
    isInstance = isInstance && "itemTax" in value;
    isInstance = isInstance && "lineId" in value;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "shipping" in value;
    isInstance = isInstance && "shippingTax" in value;

    return isInstance;
}

export function ItemFromJSON(json: any): Item {
    return ItemFromJSONTyped(json, false);
}

export function ItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): Item {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'actualPrice': !exists(json, 'actualPrice') ? undefined : json['actualPrice'],
        'allocatedQuantity': !exists(json, 'allocatedQuantity') ? undefined : json['allocatedQuantity'],
        'allowsBackOrder': !exists(json, 'allowsBackOrder') ? undefined : json['allowsBackOrder'],
        'allowsFutureAllocate': !exists(json, 'allowsFutureAllocate') ? undefined : json['allowsFutureAllocate'],
        'appeasementReason': !exists(json, 'appeasementReason') ? undefined : AppeasementReasonFromJSON(json['appeasementReason']),
        'attributes': !exists(json, 'attributes') ? undefined : json['attributes'],
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfo0FromJSON(json['auditInfo']),
        'backorderReleaseDate': !exists(json, 'backorderReleaseDate') ? undefined : (new Date(json['backorderReleaseDate'])),
        'cartItemId': !exists(json, 'cartItemId') ? undefined : json['cartItemId'],
        'childItemIds': !exists(json, 'childItemIds') ? undefined : json['childItemIds'],
        'creditCurrencyCode': !exists(json, 'creditCurrencyCode') ? undefined : json['creditCurrencyCode'],
        'creditValue': !exists(json, 'creditValue') ? undefined : json['creditValue'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'duty': !exists(json, 'duty') ? undefined : json['duty'],
        'expectedDeliveryDate': !exists(json, 'expectedDeliveryDate') ? undefined : (new Date(json['expectedDeliveryDate'])),
        'fulfillmentFields': !exists(json, 'fulfillmentFields') ? undefined : ((json['fulfillmentFields'] as Array<any>).map(FulfillmentFieldFromJSON)),
        'giftCards': !exists(json, 'giftCards') ? undefined : ((json['giftCards'] as Array<any>).map(GiftCardFromJSON)),
        'goodsType': !exists(json, 'goodsType') ? undefined : json['goodsType'],
        'handling': json['handling'],
        'handlingDiscount': !exists(json, 'handlingDiscount') ? undefined : json['handlingDiscount'],
        'handlingTax': json['handlingTax'],
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'inventoryTags': !exists(json, 'inventoryTags') ? undefined : ((json['inventoryTags'] as Array<any>).map(InventoryTagFromJSON)),
        'isAssemblyRequired': !exists(json, 'isAssemblyRequired') ? undefined : json['isAssemblyRequired'],
        'isPackagedStandAlone': !exists(json, 'isPackagedStandAlone') ? undefined : json['isPackagedStandAlone'],
        'isReservedInventory': !exists(json, 'isReservedInventory') ? undefined : json['isReservedInventory'],
        'isTaxable': !exists(json, 'isTaxable') ? undefined : json['isTaxable'],
        'itemDiscount': !exists(json, 'itemDiscount') ? undefined : json['itemDiscount'],
        'itemTax': json['itemTax'],
        'lineId': json['lineId'],
        'lineItemAdjustment': !exists(json, 'lineItemAdjustment') ? undefined : json['lineItemAdjustment'],
        'lineItemCost': !exists(json, 'lineItemCost') ? undefined : json['lineItemCost'],
        'locatorName': !exists(json, 'locatorName') ? undefined : json['locatorName'],
        'manageStock': !exists(json, 'manageStock') ? undefined : json['manageStock'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'optionAttributeFQN': !exists(json, 'optionAttributeFQN') ? undefined : json['optionAttributeFQN'],
        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(ProductOptionFromJSON)),
        'originalOrderItemId': !exists(json, 'originalOrderItemId') ? undefined : json['originalOrderItemId'],
        'overridePrice': !exists(json, 'overridePrice') ? undefined : json['overridePrice'],
        'parentItemId': !exists(json, 'parentItemId') ? undefined : json['parentItemId'],
        'partNumber': !exists(json, 'partNumber') ? undefined : json['partNumber'],
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'quantity': json['quantity'],
        'readyForPickupQuantity': !exists(json, 'readyForPickupQuantity') ? undefined : json['readyForPickupQuantity'],
        'shipping': json['shipping'],
        'shippingDiscount': !exists(json, 'shippingDiscount') ? undefined : json['shippingDiscount'],
        'shippingTax': json['shippingTax'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'taxData': !exists(json, 'taxData') ? undefined : json['taxData'],
        'taxableHandling': !exists(json, 'taxableHandling') ? undefined : json['taxableHandling'],
        'taxableLineItemCost': !exists(json, 'taxableLineItemCost') ? undefined : json['taxableLineItemCost'],
        'taxableShipping': !exists(json, 'taxableShipping') ? undefined : json['taxableShipping'],
        'transferQuantity': !exists(json, 'transferQuantity') ? undefined : json['transferQuantity'],
        'trueTransferQuantity': !exists(json, 'trueTransferQuantity') ? undefined : json['trueTransferQuantity'],
        'unitPrice': !exists(json, 'unitPrice') ? undefined : json['unitPrice'],
        'upc': !exists(json, 'upc') ? undefined : json['upc'],
        'variationProductCode': !exists(json, 'variationProductCode') ? undefined : json['variationProductCode'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
        'weightUnit': !exists(json, 'weightUnit') ? undefined : json['weightUnit'],
        'weightedDutyAdjustment': !exists(json, 'weightedDutyAdjustment') ? undefined : json['weightedDutyAdjustment'],
        'weightedHandlingAdjustment': !exists(json, 'weightedHandlingAdjustment') ? undefined : json['weightedHandlingAdjustment'],
        'weightedHandlingTaxAdjustment': !exists(json, 'weightedHandlingTaxAdjustment') ? undefined : json['weightedHandlingTaxAdjustment'],
        'weightedLineItemTaxAdjustment': !exists(json, 'weightedLineItemTaxAdjustment') ? undefined : json['weightedLineItemTaxAdjustment'],
        'weightedShipmentAdjustment': !exists(json, 'weightedShipmentAdjustment') ? undefined : json['weightedShipmentAdjustment'],
        'weightedShippingAdjustment': !exists(json, 'weightedShippingAdjustment') ? undefined : json['weightedShippingAdjustment'],
        'weightedShippingTaxAdjustment': !exists(json, 'weightedShippingTaxAdjustment') ? undefined : json['weightedShippingTaxAdjustment'],
    };
}

export function ItemToJSON(value?: Item | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'actualPrice': value.actualPrice,
        'allocatedQuantity': value.allocatedQuantity,
        'allowsBackOrder': value.allowsBackOrder,
        'allowsFutureAllocate': value.allowsFutureAllocate,
        'appeasementReason': AppeasementReasonToJSON(value.appeasementReason),
        'attributes': value.attributes,
        'auditInfo': AuditInfo0ToJSON(value.auditInfo),
        'backorderReleaseDate': value.backorderReleaseDate === undefined ? undefined : (value.backorderReleaseDate.toISOString()),
        'cartItemId': value.cartItemId,
        'childItemIds': value.childItemIds,
        'creditCurrencyCode': value.creditCurrencyCode,
        'creditValue': value.creditValue,
        'data': value.data,
        'duty': value.duty,
        'expectedDeliveryDate': value.expectedDeliveryDate === undefined ? undefined : (value.expectedDeliveryDate.toISOString()),
        'fulfillmentFields': value.fulfillmentFields === undefined ? undefined : ((value.fulfillmentFields as Array<any>).map(FulfillmentFieldToJSON)),
        'giftCards': value.giftCards === undefined ? undefined : ((value.giftCards as Array<any>).map(GiftCardToJSON)),
        'goodsType': value.goodsType,
        'handling': value.handling,
        'handlingDiscount': value.handlingDiscount,
        'handlingTax': value.handlingTax,
        'imageUrl': value.imageUrl,
        'inventoryTags': value.inventoryTags === undefined ? undefined : ((value.inventoryTags as Array<any>).map(InventoryTagToJSON)),
        'isAssemblyRequired': value.isAssemblyRequired,
        'isPackagedStandAlone': value.isPackagedStandAlone,
        'isReservedInventory': value.isReservedInventory,
        'isTaxable': value.isTaxable,
        'itemDiscount': value.itemDiscount,
        'itemTax': value.itemTax,
        'lineId': value.lineId,
        'lineItemAdjustment': value.lineItemAdjustment,
        'lineItemCost': value.lineItemCost,
        'locatorName': value.locatorName,
        'manageStock': value.manageStock,
        'name': value.name,
        'optionAttributeFQN': value.optionAttributeFQN,
        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(ProductOptionToJSON)),
        'originalOrderItemId': value.originalOrderItemId,
        'overridePrice': value.overridePrice,
        'parentItemId': value.parentItemId,
        'partNumber': value.partNumber,
        'productCode': value.productCode,
        'quantity': value.quantity,
        'readyForPickupQuantity': value.readyForPickupQuantity,
        'shipping': value.shipping,
        'shippingDiscount': value.shippingDiscount,
        'shippingTax': value.shippingTax,
        'sku': value.sku,
        'taxData': value.taxData,
        'taxableHandling': value.taxableHandling,
        'taxableLineItemCost': value.taxableLineItemCost,
        'taxableShipping': value.taxableShipping,
        'transferQuantity': value.transferQuantity,
        'trueTransferQuantity': value.trueTransferQuantity,
        'unitPrice': value.unitPrice,
        'upc': value.upc,
        'variationProductCode': value.variationProductCode,
        'weight': value.weight,
        'weightUnit': value.weightUnit,
        'weightedDutyAdjustment': value.weightedDutyAdjustment,
        'weightedHandlingAdjustment': value.weightedHandlingAdjustment,
        'weightedHandlingTaxAdjustment': value.weightedHandlingTaxAdjustment,
        'weightedLineItemTaxAdjustment': value.weightedLineItemTaxAdjustment,
        'weightedShipmentAdjustment': value.weightedShipmentAdjustment,
        'weightedShippingAdjustment': value.weightedShippingAdjustment,
        'weightedShippingTaxAdjustment': value.weightedShippingTaxAdjustment,
    };
}

