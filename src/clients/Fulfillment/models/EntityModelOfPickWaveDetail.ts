/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuditInfo0 } from './AuditInfo0';
import {
    AuditInfo0FromJSON,
    AuditInfo0FromJSONTyped,
    AuditInfo0ToJSON,
} from './AuditInfo0';
import type { ContentGroup } from './ContentGroup';
import {
    ContentGroupFromJSON,
    ContentGroupFromJSONTyped,
    ContentGroupToJSON,
} from './ContentGroup';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';

/**
 * 
 * @export
 * @interface EntityModelOfPickWaveDetail
 */
export interface EntityModelOfPickWaveDetail {
    /**
     * 
     * @type {Links}
     * @memberof EntityModelOfPickWaveDetail
     */
    links?: Links;
    /**
     * 
     * @type {AuditInfo0}
     * @memberof EntityModelOfPickWaveDetail
     */
    auditInfo?: AuditInfo0;
    /**
     * 
     * @type {Array<ContentGroup>}
     * @memberof EntityModelOfPickWaveDetail
     */
    contentGroups?: Array<ContentGroup>;
    /**
     * 
     * @type {string}
     * @memberof EntityModelOfPickWaveDetail
     */
    fulfillmentLocationCode?: string;
    /**
     * 
     * @type {number}
     * @memberof EntityModelOfPickWaveDetail
     */
    maxShipments?: number;
    /**
     * 
     * @type {string}
     * @memberof EntityModelOfPickWaveDetail
     */
    pickType?: EntityModelOfPickWaveDetailPickTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EntityModelOfPickWaveDetail
     */
    pickWaveId?: string;
    /**
     * 
     * @type {number}
     * @memberof EntityModelOfPickWaveDetail
     */
    pickWaveNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof EntityModelOfPickWaveDetail
     */
    pickWaveStatus?: EntityModelOfPickWaveDetailPickWaveStatusEnum;
    /**
     * 
     * @type {Array<number>}
     * @memberof EntityModelOfPickWaveDetail
     */
    shipmentNumbers?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof EntityModelOfPickWaveDetail
     */
    shipmentType?: string;
    /**
     * 
     * @type {number}
     * @memberof EntityModelOfPickWaveDetail
     */
    tenantId?: number;
    /**
     * 
     * @type {string}
     * @memberof EntityModelOfPickWaveDetail
     */
    userDisplayName?: string;
    /**
     * 
     * @type {string}
     * @memberof EntityModelOfPickWaveDetail
     */
    userId?: string;
}


/**
 * @export
 */
export const EntityModelOfPickWaveDetailPickTypeEnum = {
    Multiple: 'MULTIPLE',
    Normal: 'NORMAL',
    Single: 'SINGLE'
} as const;
export type EntityModelOfPickWaveDetailPickTypeEnum = typeof EntityModelOfPickWaveDetailPickTypeEnum[keyof typeof EntityModelOfPickWaveDetailPickTypeEnum];

/**
 * @export
 */
export const EntityModelOfPickWaveDetailPickWaveStatusEnum = {
    Closed: 'CLOSED',
    Error: 'ERROR',
    InProgress: 'IN_PROGRESS',
    Pending: 'PENDING',
    PendingRecovery: 'PENDING_RECOVERY'
} as const;
export type EntityModelOfPickWaveDetailPickWaveStatusEnum = typeof EntityModelOfPickWaveDetailPickWaveStatusEnum[keyof typeof EntityModelOfPickWaveDetailPickWaveStatusEnum];


/**
 * Check if a given object implements the EntityModelOfPickWaveDetail interface.
 */
export function instanceOfEntityModelOfPickWaveDetail(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EntityModelOfPickWaveDetailFromJSON(json: any): EntityModelOfPickWaveDetail {
    return EntityModelOfPickWaveDetailFromJSONTyped(json, false);
}

export function EntityModelOfPickWaveDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityModelOfPickWaveDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, '_links') ? undefined : LinksFromJSON(json['_links']),
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfo0FromJSON(json['auditInfo']),
        'contentGroups': !exists(json, 'contentGroups') ? undefined : ((json['contentGroups'] as Array<any>).map(ContentGroupFromJSON)),
        'fulfillmentLocationCode': !exists(json, 'fulfillmentLocationCode') ? undefined : json['fulfillmentLocationCode'],
        'maxShipments': !exists(json, 'maxShipments') ? undefined : json['maxShipments'],
        'pickType': !exists(json, 'pickType') ? undefined : json['pickType'],
        'pickWaveId': !exists(json, 'pickWaveId') ? undefined : json['pickWaveId'],
        'pickWaveNumber': !exists(json, 'pickWaveNumber') ? undefined : json['pickWaveNumber'],
        'pickWaveStatus': !exists(json, 'pickWaveStatus') ? undefined : json['pickWaveStatus'],
        'shipmentNumbers': !exists(json, 'shipmentNumbers') ? undefined : json['shipmentNumbers'],
        'shipmentType': !exists(json, 'shipmentType') ? undefined : json['shipmentType'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'userDisplayName': !exists(json, 'userDisplayName') ? undefined : json['userDisplayName'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function EntityModelOfPickWaveDetailToJSON(value?: EntityModelOfPickWaveDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_links': LinksToJSON(value.links),
        'auditInfo': AuditInfo0ToJSON(value.auditInfo),
        'contentGroups': value.contentGroups === undefined ? undefined : ((value.contentGroups as Array<any>).map(ContentGroupToJSON)),
        'fulfillmentLocationCode': value.fulfillmentLocationCode,
        'maxShipments': value.maxShipments,
        'pickType': value.pickType,
        'pickWaveId': value.pickWaveId,
        'pickWaveNumber': value.pickWaveNumber,
        'pickWaveStatus': value.pickWaveStatus,
        'shipmentNumbers': value.shipmentNumbers,
        'shipmentType': value.shipmentType,
        'tenantId': value.tenantId,
        'userDisplayName': value.userDisplayName,
        'userId': value.userId,
    };
}

