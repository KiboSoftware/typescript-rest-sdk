/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Destination } from './Destination';
import {
    DestinationFromJSON,
    DestinationFromJSONTyped,
    DestinationToJSON,
} from './Destination';
import type { Package } from './Package';
import {
    PackageFromJSON,
    PackageFromJSONTyped,
    PackageToJSON,
} from './Package';

/**
 * 
 * @export
 * @interface ManifestShipment
 */
export interface ManifestShipment {
    /**
     * 
     * @type {Destination}
     * @memberof ManifestShipment
     */
    destination?: Destination;
    /**
     * 
     * @type {string}
     * @memberof ManifestShipment
     */
    externalOrderId?: string;
    /**
     * 
     * @type {string}
     * @memberof ManifestShipment
     */
    fulfillmentLocationCode?: string;
    /**
     * 
     * @type {number}
     * @memberof ManifestShipment
     */
    orderNumber?: number;
    /**
     * 
     * @type {Array<Package>}
     * @memberof ManifestShipment
     */
    packages?: Array<Package>;
    /**
     * 
     * @type {number}
     * @memberof ManifestShipment
     */
    shipmentNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof ManifestShipment
     */
    shipmentType?: string;
}

/**
 * Check if a given object implements the ManifestShipment interface.
 */
export function instanceOfManifestShipment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ManifestShipmentFromJSON(json: any): ManifestShipment {
    return ManifestShipmentFromJSONTyped(json, false);
}

export function ManifestShipmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ManifestShipment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'destination': !exists(json, 'destination') ? undefined : DestinationFromJSON(json['destination']),
        'externalOrderId': !exists(json, 'externalOrderId') ? undefined : json['externalOrderId'],
        'fulfillmentLocationCode': !exists(json, 'fulfillmentLocationCode') ? undefined : json['fulfillmentLocationCode'],
        'orderNumber': !exists(json, 'orderNumber') ? undefined : json['orderNumber'],
        'packages': !exists(json, 'packages') ? undefined : ((json['packages'] as Array<any>).map(PackageFromJSON)),
        'shipmentNumber': !exists(json, 'shipmentNumber') ? undefined : json['shipmentNumber'],
        'shipmentType': !exists(json, 'shipmentType') ? undefined : json['shipmentType'],
    };
}

export function ManifestShipmentToJSON(value?: ManifestShipment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'destination': DestinationToJSON(value.destination),
        'externalOrderId': value.externalOrderId,
        'fulfillmentLocationCode': value.fulfillmentLocationCode,
        'orderNumber': value.orderNumber,
        'packages': value.packages === undefined ? undefined : ((value.packages as Array<any>).map(PackageToJSON)),
        'shipmentNumber': value.shipmentNumber,
        'shipmentType': value.shipmentType,
    };
}

