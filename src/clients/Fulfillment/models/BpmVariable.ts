/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BpmVariable
 */
export interface BpmVariable {
    /**
     * 
     * @type {string}
     * @memberof BpmVariable
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BpmVariable
     */
    oldValue?: string;
    /**
     * 
     * @type {Date}
     * @memberof BpmVariable
     */
    updateDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof BpmVariable
     */
    value?: string;
}

/**
 * Check if a given object implements the BpmVariable interface.
 */
export function instanceOfBpmVariable(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BpmVariableFromJSON(json: any): BpmVariable {
    return BpmVariableFromJSONTyped(json, false);
}

export function BpmVariableFromJSONTyped(json: any, ignoreDiscriminator: boolean): BpmVariable {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'oldValue': !exists(json, 'oldValue') ? undefined : json['oldValue'],
        'updateDate': !exists(json, 'updateDate') ? undefined : (new Date(json['updateDate'])),
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function BpmVariableToJSON(value?: BpmVariable | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'oldValue': value.oldValue,
        'updateDate': value.updateDate === undefined ? undefined : (value.updateDate.toISOString()),
        'value': value.value,
    };
}

