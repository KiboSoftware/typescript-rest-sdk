/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Location Storefront Service
 * OpenAPI Spec for Kibo Location Storefront Service
 *
 * The version of the OpenAPI document: v1_storefront
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
} from './Address';
import type { AuditInfo } from './AuditInfo';
import {
    AuditInfoFromJSON,
    AuditInfoFromJSONTyped,
    AuditInfoToJSON,
} from './AuditInfo';
import type { Coordinates } from './Coordinates';
import {
    CoordinatesFromJSON,
    CoordinatesFromJSONTyped,
    CoordinatesToJSON,
} from './Coordinates';
import type { FulfillmentType } from './FulfillmentType';
import {
    FulfillmentTypeFromJSON,
    FulfillmentTypeFromJSONTyped,
    FulfillmentTypeToJSON,
} from './FulfillmentType';
import type { LocationAttribute } from './LocationAttribute';
import {
    LocationAttributeFromJSON,
    LocationAttributeFromJSONTyped,
    LocationAttributeToJSON,
} from './LocationAttribute';
import type { LocationType } from './LocationType';
import {
    LocationTypeFromJSON,
    LocationTypeFromJSONTyped,
    LocationTypeToJSON,
} from './LocationType';
import type { ProcessingTime } from './ProcessingTime';
import {
    ProcessingTimeFromJSON,
    ProcessingTimeFromJSONTyped,
    ProcessingTimeToJSON,
} from './ProcessingTime';
import type { RegularHours } from './RegularHours';
import {
    RegularHoursFromJSON,
    RegularHoursFromJSONTyped,
    RegularHoursToJSON,
} from './RegularHours';
import type { ShippingOriginContact } from './ShippingOriginContact';
import {
    ShippingOriginContactFromJSON,
    ShippingOriginContactFromJSONTyped,
    ShippingOriginContactToJSON,
} from './ShippingOriginContact';
import type { TransferTime } from './TransferTime';
import {
    TransferTimeFromJSON,
    TransferTimeFromJSONTyped,
    TransferTimeToJSON,
} from './TransferTime';

/**
 * 
 * @export
 * @interface Location
 */
export interface Location {
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    code?: string | null;
    /**
     * 
     * @type {Array<LocationType>}
     * @memberof Location
     */
    locationTypes?: Array<LocationType> | null;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    description?: string | null;
    /**
     * 
     * @type {Address}
     * @memberof Location
     */
    address?: Address;
    /**
     * 
     * @type {Coordinates}
     * @memberof Location
     */
    geo?: Coordinates;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    phone?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    fax?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    supportsInventory?: boolean;
    /**
     * 
     * @type {Array<FulfillmentType>}
     * @memberof Location
     */
    fulfillmentTypes?: Array<FulfillmentType> | null;
    /**
     * 
     * @type {RegularHours}
     * @memberof Location
     */
    regularHours?: RegularHours;
    /**
     * 
     * @type {ShippingOriginContact}
     * @memberof Location
     */
    shippingOriginContact?: ShippingOriginContact;
    /**
     * 
     * @type {string}
     * @memberof Location
     */
    note?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Location
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {Array<LocationAttribute>}
     * @memberof Location
     */
    attributes?: Array<LocationAttribute> | null;
    /**
     * 
     * @type {AuditInfo}
     * @memberof Location
     */
    auditInfo?: AuditInfo;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    allowFulfillmentWithNoStock?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    isDisabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    express?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    transferEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    shipToHomeConsolidation?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    includeInInventoryAggregrate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    includeInLocationExport?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    warehouseEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Location
     */
    requiresManifest?: boolean;
    /**
     * 
     * @type {Array<ProcessingTime>}
     * @memberof Location
     */
    processingTimes?: Array<ProcessingTime> | null;
    /**
     * 
     * @type {TransferTime}
     * @memberof Location
     */
    transferTime?: TransferTime;
}

/**
 * Check if a given object implements the Location interface.
 */
export function instanceOfLocation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LocationFromJSON(json: any): Location {
    return LocationFromJSONTyped(json, false);
}

export function LocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Location {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'locationTypes': !exists(json, 'locationTypes') ? undefined : (json['locationTypes'] === null ? null : (json['locationTypes'] as Array<any>).map(LocationTypeFromJSON)),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),
        'geo': !exists(json, 'geo') ? undefined : CoordinatesFromJSON(json['geo']),
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'fax': !exists(json, 'fax') ? undefined : json['fax'],
        'supportsInventory': !exists(json, 'supportsInventory') ? undefined : json['supportsInventory'],
        'fulfillmentTypes': !exists(json, 'fulfillmentTypes') ? undefined : (json['fulfillmentTypes'] === null ? null : (json['fulfillmentTypes'] as Array<any>).map(FulfillmentTypeFromJSON)),
        'regularHours': !exists(json, 'regularHours') ? undefined : RegularHoursFromJSON(json['regularHours']),
        'shippingOriginContact': !exists(json, 'shippingOriginContact') ? undefined : ShippingOriginContactFromJSON(json['shippingOriginContact']),
        'note': !exists(json, 'note') ? undefined : json['note'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'attributes': !exists(json, 'attributes') ? undefined : (json['attributes'] === null ? null : (json['attributes'] as Array<any>).map(LocationAttributeFromJSON)),
        'auditInfo': !exists(json, 'auditInfo') ? undefined : AuditInfoFromJSON(json['auditInfo']),
        'allowFulfillmentWithNoStock': !exists(json, 'allowFulfillmentWithNoStock') ? undefined : json['allowFulfillmentWithNoStock'],
        'isDisabled': !exists(json, 'isDisabled') ? undefined : json['isDisabled'],
        'express': !exists(json, 'express') ? undefined : json['express'],
        'transferEnabled': !exists(json, 'transferEnabled') ? undefined : json['transferEnabled'],
        'shipToHomeConsolidation': !exists(json, 'shipToHomeConsolidation') ? undefined : json['shipToHomeConsolidation'],
        'includeInInventoryAggregrate': !exists(json, 'includeInInventoryAggregrate') ? undefined : json['includeInInventoryAggregrate'],
        'includeInLocationExport': !exists(json, 'includeInLocationExport') ? undefined : json['includeInLocationExport'],
        'warehouseEnabled': !exists(json, 'warehouseEnabled') ? undefined : json['warehouseEnabled'],
        'requiresManifest': !exists(json, 'requiresManifest') ? undefined : json['requiresManifest'],
        'processingTimes': !exists(json, 'processingTimes') ? undefined : (json['processingTimes'] === null ? null : (json['processingTimes'] as Array<any>).map(ProcessingTimeFromJSON)),
        'transferTime': !exists(json, 'transferTime') ? undefined : TransferTimeFromJSON(json['transferTime']),
    };
}

export function LocationToJSON(value?: Location | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'locationTypes': value.locationTypes === undefined ? undefined : (value.locationTypes === null ? null : (value.locationTypes as Array<any>).map(LocationTypeToJSON)),
        'name': value.name,
        'description': value.description,
        'address': AddressToJSON(value.address),
        'geo': CoordinatesToJSON(value.geo),
        'phone': value.phone,
        'fax': value.fax,
        'supportsInventory': value.supportsInventory,
        'fulfillmentTypes': value.fulfillmentTypes === undefined ? undefined : (value.fulfillmentTypes === null ? null : (value.fulfillmentTypes as Array<any>).map(FulfillmentTypeToJSON)),
        'regularHours': RegularHoursToJSON(value.regularHours),
        'shippingOriginContact': ShippingOriginContactToJSON(value.shippingOriginContact),
        'note': value.note,
        'tags': value.tags,
        'attributes': value.attributes === undefined ? undefined : (value.attributes === null ? null : (value.attributes as Array<any>).map(LocationAttributeToJSON)),
        'auditInfo': AuditInfoToJSON(value.auditInfo),
        'allowFulfillmentWithNoStock': value.allowFulfillmentWithNoStock,
        'isDisabled': value.isDisabled,
        'express': value.express,
        'transferEnabled': value.transferEnabled,
        'shipToHomeConsolidation': value.shipToHomeConsolidation,
        'includeInInventoryAggregrate': value.includeInInventoryAggregrate,
        'includeInLocationExport': value.includeInLocationExport,
        'warehouseEnabled': value.warehouseEnabled,
        'requiresManifest': value.requiresManifest,
        'processingTimes': value.processingTimes === undefined ? undefined : (value.processingTimes === null ? null : (value.processingTimes as Array<any>).map(ProcessingTimeToJSON)),
        'transferTime': TransferTimeToJSON(value.transferTime),
    };
}

