/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../../client-runtime';
import { basePathTemplate } from '../api-path';
import type {
  CatalogRuntimesCurrencyExchangeRate,
} from '../models';

export interface StorefrontGetCurrencyExchangeRatesRequest {
    responseFields?: string;
}

/**
 * CurrenciesApi - interface
 * 
 * @export
 * @interface CurrenciesApiInterface
 */
export interface CurrenciesApiInterface {
    /**
     * Retrieves a list of currency exchange rates based on the context\'s currency code.
     * @summary Get exchange rates
     * @param {string} [responseFields] limits which fields are returned in the response body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CurrenciesApiInterface
     */
    storefrontGetCurrencyExchangeRatesRaw(requestParameters: StorefrontGetCurrencyExchangeRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CatalogRuntimesCurrencyExchangeRate>>>;

    /**
     * Retrieves a list of currency exchange rates based on the context\'s currency code.
     * Get exchange rates
     */
    storefrontGetCurrencyExchangeRates(requestParameters: StorefrontGetCurrencyExchangeRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CatalogRuntimesCurrencyExchangeRate>>;

}

/**
 * 
 */
export class CurrenciesApi extends runtime.BaseAPI implements CurrenciesApiInterface {
    constructor(configuration?) {
        super(configuration)
        this.basePathTemplate = basePathTemplate
    }
    /**
     * Retrieves a list of currency exchange rates based on the context\'s currency code.
     * Get exchange rates
     */


    async storefrontGetCurrencyExchangeRatesRaw(requestParameters: StorefrontGetCurrencyExchangeRatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CatalogRuntimesCurrencyExchangeRate>>> {
        const queryParameters: any = {};

        if (requestParameters.responseFields !== undefined) {
            queryParameters['responseFields'] = requestParameters.responseFields;
        }

        const headerParameters: runtime.HTTPHeaders = {};





        await this.addAuthorizationHeaders(headerParameters)
        
        const response = await this.request({
            path: `/commerce/catalog/storefront/currencies/exchangerates`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Retrieves a list of currency exchange rates based on the context\'s currency code.
     * Get exchange rates
     */
    async storefrontGetCurrencyExchangeRates(requestParameters: StorefrontGetCurrencyExchangeRatesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CatalogRuntimesCurrencyExchangeRate>> {
        const response = await this.storefrontGetCurrencyExchangeRatesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
