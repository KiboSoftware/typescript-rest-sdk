/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The future inventory for a product at a specific Location
 * @export
 * @interface CatalogRuntimesFutureInventory
 */
export interface CatalogRuntimesFutureInventory {
    /**
     * 
     * @type {number}
     * @memberof CatalogRuntimesFutureInventory
     */
    futureInventoryID?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CatalogRuntimesFutureInventory
     */
    onhand?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CatalogRuntimesFutureInventory
     */
    available?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CatalogRuntimesFutureInventory
     */
    allocated?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CatalogRuntimesFutureInventory
     */
    pending?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof CatalogRuntimesFutureInventory
     */
    deliveryDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof CatalogRuntimesFutureInventory
     */
    createDate?: Date | null;
}

/**
 * Check if a given object implements the CatalogRuntimesFutureInventory interface.
 */
export function instanceOfCatalogRuntimesFutureInventory(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CatalogRuntimesFutureInventoryFromJSON(json: any): CatalogRuntimesFutureInventory {
    return CatalogRuntimesFutureInventoryFromJSONTyped(json, false);
}

export function CatalogRuntimesFutureInventoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogRuntimesFutureInventory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'futureInventoryID': !exists(json, 'futureInventoryID') ? undefined : json['futureInventoryID'],
        'onhand': !exists(json, 'onhand') ? undefined : json['onhand'],
        'available': !exists(json, 'available') ? undefined : json['available'],
        'allocated': !exists(json, 'allocated') ? undefined : json['allocated'],
        'pending': !exists(json, 'pending') ? undefined : json['pending'],
        'deliveryDate': !exists(json, 'deliveryDate') ? undefined : (json['deliveryDate'] === null ? null : new Date(json['deliveryDate'])),
        'createDate': !exists(json, 'createDate') ? undefined : (json['createDate'] === null ? null : new Date(json['createDate'])),
    };
}

export function CatalogRuntimesFutureInventoryToJSON(value?: CatalogRuntimesFutureInventory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'futureInventoryID': value.futureInventoryID,
        'onhand': value.onhand,
        'available': value.available,
        'allocated': value.allocated,
        'pending': value.pending,
        'deliveryDate': value.deliveryDate === undefined ? undefined : (value.deliveryDate === null ? null : value.deliveryDate.toISOString()),
        'createDate': value.createDate === undefined ? undefined : (value.createDate === null ? null : value.createDate.toISOString()),
    };
}

