/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductOptionSelection } from './ProductOptionSelection';
import {
    ProductOptionSelectionFromJSON,
    ProductOptionSelectionFromJSONTyped,
    ProductOptionSelectionToJSON,
} from './ProductOptionSelection';

/**
 * If the product has configurable options, the current state of the shopper's selections.
 * @export
 * @interface ProductOptionSelections
 */
export interface ProductOptionSelections {
    /**
     * For a product with options, the code of the product variation that represents the current selection of product options.
     * @type {string}
     * @memberof ProductOptionSelections
     */
    variationProductCode?: string | null;
    /**
     * List of the product options that the shopper has currently selected.
     * @type {Array<ProductOptionSelection>}
     * @memberof ProductOptionSelections
     */
    options?: Array<ProductOptionSelection> | null;
}

/**
 * Check if a given object implements the ProductOptionSelections interface.
 */
export function instanceOfProductOptionSelections(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductOptionSelectionsFromJSON(json: any): ProductOptionSelections {
    return ProductOptionSelectionsFromJSONTyped(json, false);
}

export function ProductOptionSelectionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductOptionSelections {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'variationProductCode': !exists(json, 'variationProductCode') ? undefined : json['variationProductCode'],
        'options': !exists(json, 'options') ? undefined : (json['options'] === null ? null : (json['options'] as Array<any>).map(ProductOptionSelectionFromJSON)),
    };
}

export function ProductOptionSelectionsToJSON(value?: ProductOptionSelections | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'variationProductCode': value.variationProductCode,
        'options': value.options === undefined ? undefined : (value.options === null ? null : (value.options as Array<any>).map(ProductOptionSelectionToJSON)),
    };
}

