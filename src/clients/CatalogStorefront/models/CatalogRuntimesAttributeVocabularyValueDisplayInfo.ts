/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Product Attribute properties common between a Product Propery, Option, and Extra
 * @export
 * @interface CatalogRuntimesAttributeVocabularyValueDisplayInfo
 */
export interface CatalogRuntimesAttributeVocabularyValueDisplayInfo {
    /**
     * Id of the image in the CMS.
     * @type {string}
     * @memberof CatalogRuntimesAttributeVocabularyValueDisplayInfo
     */
    cmsId?: string | null;
    /**
     * URL of the image.
     * @type {string}
     * @memberof CatalogRuntimesAttributeVocabularyValueDisplayInfo
     */
    imageUrl?: string | null;
    /**
     * Hex Color value to display in a color picker
     * @type {string}
     * @memberof CatalogRuntimesAttributeVocabularyValueDisplayInfo
     */
    colorValue?: string | null;
}

/**
 * Check if a given object implements the CatalogRuntimesAttributeVocabularyValueDisplayInfo interface.
 */
export function instanceOfCatalogRuntimesAttributeVocabularyValueDisplayInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CatalogRuntimesAttributeVocabularyValueDisplayInfoFromJSON(json: any): CatalogRuntimesAttributeVocabularyValueDisplayInfo {
    return CatalogRuntimesAttributeVocabularyValueDisplayInfoFromJSONTyped(json, false);
}

export function CatalogRuntimesAttributeVocabularyValueDisplayInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogRuntimesAttributeVocabularyValueDisplayInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cmsId': !exists(json, 'cmsId') ? undefined : json['cmsId'],
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'colorValue': !exists(json, 'colorValue') ? undefined : json['colorValue'],
    };
}

export function CatalogRuntimesAttributeVocabularyValueDisplayInfoToJSON(value?: CatalogRuntimesAttributeVocabularyValueDisplayInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cmsId': value.cmsId,
        'imageUrl': value.imageUrl,
        'colorValue': value.colorValue,
    };
}

