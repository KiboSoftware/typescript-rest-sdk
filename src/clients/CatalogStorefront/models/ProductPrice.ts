/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppliedDiscount } from './AppliedDiscount';
import {
    AppliedDiscountFromJSON,
    AppliedDiscountFromJSONTyped,
    AppliedDiscountToJSON,
} from './AppliedDiscount';

/**
 * Price of the product with any sale and discounts applied.
 * @export
 * @interface ProductPrice
 */
export interface ProductPrice {
    /**
     * Manufacturer suggested Retail price, this may be null if one is not set in the catalog.
     * @type {number}
     * @memberof ProductPrice
     */
    msrp?: number | null;
    /**
     * Listed Price of the product. This is the price that the merchant intends to sell the product for if no sale is active.
     * @type {number}
     * @memberof ProductPrice
     */
    price?: number | null;
    /**
     * Futher clarification of what value is being returned in the Price field
     * @type {string}
     * @memberof ProductPrice
     */
    priceType?: string | null;
    /**
     * Current sale price of the product. This can be either a specific numerical amount or it can be calculated based on an active discount. Optional.
     * @type {number}
     * @memberof ProductPrice
     */
    salePrice?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ProductPrice
     */
    salePriceType?: string | null;
    /**
     * Current sale price of the product listed in the catalog. This is not typically dispalyed directly to the user as it will be listed in SalePrice if applicable.
     * @type {number}
     * @memberof ProductPrice
     */
    catalogSalePrice?: number | null;
    /**
     * Current Price Listed in the catalog.
     * @type {number}
     * @memberof ProductPrice
     */
    catalogListPrice?: number | null;
    /**
     * 
     * @type {AppliedDiscount}
     * @memberof ProductPrice
     */
    discount?: AppliedDiscount;
    /**
     * Credit Value applicable to this product. Should only be present on DigitalCredit goodsType....
     * @type {number}
     * @memberof ProductPrice
     */
    creditValue?: number | null;
    /**
     * The priceList that was applied to this product
     * @type {string}
     * @memberof ProductPrice
     */
    effectivePricelistCode?: string | null;
    /**
     * The specific PriceListCode that was applied (includes inheritence
     * @type {string}
     * @memberof ProductPrice
     */
    priceListEntryCode?: string | null;
    /**
     * IF a PriceList Entry was applied to this price it will be (simple, bulk...)
     * @type {string}
     * @memberof ProductPrice
     */
    priceListEntryMode?: string | null;
}

/**
 * Check if a given object implements the ProductPrice interface.
 */
export function instanceOfProductPrice(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductPriceFromJSON(json: any): ProductPrice {
    return ProductPriceFromJSONTyped(json, false);
}

export function ProductPriceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductPrice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'msrp': !exists(json, 'msrp') ? undefined : json['msrp'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'priceType': !exists(json, 'priceType') ? undefined : json['priceType'],
        'salePrice': !exists(json, 'salePrice') ? undefined : json['salePrice'],
        'salePriceType': !exists(json, 'salePriceType') ? undefined : json['salePriceType'],
        'catalogSalePrice': !exists(json, 'catalogSalePrice') ? undefined : json['catalogSalePrice'],
        'catalogListPrice': !exists(json, 'catalogListPrice') ? undefined : json['catalogListPrice'],
        'discount': !exists(json, 'discount') ? undefined : AppliedDiscountFromJSON(json['discount']),
        'creditValue': !exists(json, 'creditValue') ? undefined : json['creditValue'],
        'effectivePricelistCode': !exists(json, 'effectivePricelistCode') ? undefined : json['effectivePricelistCode'],
        'priceListEntryCode': !exists(json, 'priceListEntryCode') ? undefined : json['priceListEntryCode'],
        'priceListEntryMode': !exists(json, 'priceListEntryMode') ? undefined : json['priceListEntryMode'],
    };
}

export function ProductPriceToJSON(value?: ProductPrice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'msrp': value.msrp,
        'price': value.price,
        'priceType': value.priceType,
        'salePrice': value.salePrice,
        'salePriceType': value.salePriceType,
        'catalogSalePrice': value.catalogSalePrice,
        'catalogListPrice': value.catalogListPrice,
        'discount': AppliedDiscountToJSON(value.discount),
        'creditValue': value.creditValue,
        'effectivePricelistCode': value.effectivePricelistCode,
        'priceListEntryCode': value.priceListEntryCode,
        'priceListEntryMode': value.priceListEntryMode,
    };
}

