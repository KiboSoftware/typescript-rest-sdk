/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttributeDetail } from './AttributeDetail';
import {
    AttributeDetailFromJSON,
    AttributeDetailFromJSONTyped,
    AttributeDetailToJSON,
} from './AttributeDetail';
import type { CatalogRuntimesProductPropertyValue } from './CatalogRuntimesProductPropertyValue';
import {
    CatalogRuntimesProductPropertyValueFromJSON,
    CatalogRuntimesProductPropertyValueFromJSONTyped,
    CatalogRuntimesProductPropertyValueToJSON,
} from './CatalogRuntimesProductPropertyValue';

/**
 * An attribute used as a property of a product
 * @export
 * @interface CatalogRuntimesProductProperty
 */
export interface CatalogRuntimesProductProperty {
    /**
     * Attribute fully qualified name
     * @type {string}
     * @memberof CatalogRuntimesProductProperty
     */
    attributeFQN?: string | null;
    /**
     * Indicates whether the product property should be hidden from the customer
     * @type {boolean}
     * @memberof CatalogRuntimesProductProperty
     */
    isHidden?: boolean | null;
    /**
     * Indicates whether it's possible for there to be more than one value in the Values field
     * @type {boolean}
     * @memberof CatalogRuntimesProductProperty
     */
    isMultiValue?: boolean | null;
    /**
     * 
     * @type {AttributeDetail}
     * @memberof CatalogRuntimesProductProperty
     */
    attributeDetail?: AttributeDetail;
    /**
     * Value(s) of the product property
     * @type {Array<CatalogRuntimesProductPropertyValue>}
     * @memberof CatalogRuntimesProductProperty
     */
    values?: Array<CatalogRuntimesProductPropertyValue> | null;
    /**
     * Property Type of the Property
     * @type {string}
     * @memberof CatalogRuntimesProductProperty
     */
    propertyType?: string | null;
}

/**
 * Check if a given object implements the CatalogRuntimesProductProperty interface.
 */
export function instanceOfCatalogRuntimesProductProperty(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CatalogRuntimesProductPropertyFromJSON(json: any): CatalogRuntimesProductProperty {
    return CatalogRuntimesProductPropertyFromJSONTyped(json, false);
}

export function CatalogRuntimesProductPropertyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogRuntimesProductProperty {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributeFQN': !exists(json, 'attributeFQN') ? undefined : json['attributeFQN'],
        'isHidden': !exists(json, 'isHidden') ? undefined : json['isHidden'],
        'isMultiValue': !exists(json, 'isMultiValue') ? undefined : json['isMultiValue'],
        'attributeDetail': !exists(json, 'attributeDetail') ? undefined : AttributeDetailFromJSON(json['attributeDetail']),
        'values': !exists(json, 'values') ? undefined : (json['values'] === null ? null : (json['values'] as Array<any>).map(CatalogRuntimesProductPropertyValueFromJSON)),
        'propertyType': !exists(json, 'propertyType') ? undefined : json['propertyType'],
    };
}

export function CatalogRuntimesProductPropertyToJSON(value?: CatalogRuntimesProductProperty | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributeFQN': value.attributeFQN,
        'isHidden': value.isHidden,
        'isMultiValue': value.isMultiValue,
        'attributeDetail': AttributeDetailToJSON(value.attributeDetail),
        'values': value.values === undefined ? undefined : (value.values === null ? null : (value.values as Array<any>).map(CatalogRuntimesProductPropertyValueToJSON)),
        'propertyType': value.propertyType,
    };
}

