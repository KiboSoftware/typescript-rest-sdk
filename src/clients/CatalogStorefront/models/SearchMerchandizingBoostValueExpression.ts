/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchMerchandizingBoostValueExpression
 */
export interface SearchMerchandizingBoostValueExpression {
    /**
     * 
     * @type {string}
     * @memberof SearchMerchandizingBoostValueExpression
     */
    value?: string | null;
    /**
     * 
     * @type {number}
     * @memberof SearchMerchandizingBoostValueExpression
     */
    boostNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof SearchMerchandizingBoostValueExpression
     */
    operator?: string | null;
}

/**
 * Check if a given object implements the SearchMerchandizingBoostValueExpression interface.
 */
export function instanceOfSearchMerchandizingBoostValueExpression(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SearchMerchandizingBoostValueExpressionFromJSON(json: any): SearchMerchandizingBoostValueExpression {
    return SearchMerchandizingBoostValueExpressionFromJSONTyped(json, false);
}

export function SearchMerchandizingBoostValueExpressionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchMerchandizingBoostValueExpression {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'value': !exists(json, 'value') ? undefined : json['value'],
        'boostNumber': !exists(json, 'boostNumber') ? undefined : json['boostNumber'],
        'operator': !exists(json, 'operator') ? undefined : json['operator'],
    };
}

export function SearchMerchandizingBoostValueExpressionToJSON(value?: SearchMerchandizingBoostValueExpression | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'value': value.value,
        'boostNumber': value.boostNumber,
        'operator': value.operator,
    };
}

