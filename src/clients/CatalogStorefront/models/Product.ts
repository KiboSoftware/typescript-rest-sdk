/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BundledProduct } from './BundledProduct';
import {
    BundledProductFromJSON,
    BundledProductFromJSONTyped,
    BundledProductToJSON,
} from './BundledProduct';
import type { Category } from './Category';
import {
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
} from './Category';
import type { Discount } from './Discount';
import {
    DiscountFromJSON,
    DiscountFromJSONTyped,
    DiscountToJSON,
} from './Discount';
import type { PackageMeasurements } from './PackageMeasurements';
import {
    PackageMeasurementsFromJSON,
    PackageMeasurementsFromJSONTyped,
    PackageMeasurementsToJSON,
} from './PackageMeasurements';
import type { ProductCollectionInfo } from './ProductCollectionInfo';
import {
    ProductCollectionInfoFromJSON,
    ProductCollectionInfoFromJSONTyped,
    ProductCollectionInfoToJSON,
} from './ProductCollectionInfo';
import type { ProductCollectionMember } from './ProductCollectionMember';
import {
    ProductCollectionMemberFromJSON,
    ProductCollectionMemberFromJSONTyped,
    ProductCollectionMemberToJSON,
} from './ProductCollectionMember';
import type { ProductContent } from './ProductContent';
import {
    ProductContentFromJSON,
    ProductContentFromJSONTyped,
    ProductContentToJSON,
} from './ProductContent';
import type { ProductImageGroup } from './ProductImageGroup';
import {
    ProductImageGroupFromJSON,
    ProductImageGroupFromJSONTyped,
    ProductImageGroupToJSON,
} from './ProductImageGroup';
import type { ProductInventoryInfo } from './ProductInventoryInfo';
import {
    ProductInventoryInfoFromJSON,
    ProductInventoryInfoFromJSONTyped,
    ProductInventoryInfoToJSON,
} from './ProductInventoryInfo';
import type { ProductOption } from './ProductOption';
import {
    ProductOptionFromJSON,
    ProductOptionFromJSONTyped,
    ProductOptionToJSON,
} from './ProductOption';
import type { ProductPrice } from './ProductPrice';
import {
    ProductPriceFromJSON,
    ProductPriceFromJSONTyped,
    ProductPriceToJSON,
} from './ProductPrice';
import type { ProductPriceRange } from './ProductPriceRange';
import {
    ProductPriceRangeFromJSON,
    ProductPriceRangeFromJSONTyped,
    ProductPriceRangeToJSON,
} from './ProductPriceRange';
import type { ProductPricingBehaviorInfo } from './ProductPricingBehaviorInfo';
import {
    ProductPricingBehaviorInfoFromJSON,
    ProductPricingBehaviorInfoFromJSONTyped,
    ProductPricingBehaviorInfoToJSON,
} from './ProductPricingBehaviorInfo';
import type { ProductProperty } from './ProductProperty';
import {
    ProductPropertyFromJSON,
    ProductPropertyFromJSONTyped,
    ProductPropertyToJSON,
} from './ProductProperty';
import type { ProductPurchasableState } from './ProductPurchasableState';
import {
    ProductPurchasableStateFromJSON,
    ProductPurchasableStateFromJSONTyped,
    ProductPurchasableStateToJSON,
} from './ProductPurchasableState';
import type { ProductVolumePrice } from './ProductVolumePrice';
import {
    ProductVolumePriceFromJSON,
    ProductVolumePriceFromJSONTyped,
    ProductVolumePriceToJSON,
} from './ProductVolumePrice';
import type { VariationSummary } from './VariationSummary';
import {
    VariationSummaryFromJSON,
    VariationSummaryFromJSONTyped,
    VariationSummaryToJSON,
} from './VariationSummary';

/**
 * Details of a product, including its product code, name, description, options (if any), and current state--whether the product can be purchased given the options selected currently.
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * Merchant-created code associated with the product, for example, a SKU.
     * @type {string}
     * @memberof Product
     */
    productCode?: string | null;
    /**
     * The location where the product is being purchased.. default is null. Products can have different prices
     * by purchaseLocation via custom priceListResolution....
     * @type {string}
     * @memberof Product
     */
    purchaseLocation?: string | null;
    /**
     * System generated monotonically increasing sequence
     * @type {number}
     * @memberof Product
     */
    productSequence?: number | null;
    /**
     * The UsageType of this product (Standard, Configurable, Bundle, Component, Collection)
     * @type {string}
     * @memberof Product
     */
    productUsage?: string | null;
    /**
     * Indicates the fulfillment types the product supports.
     * @type {Array<string>}
     * @memberof Product
     */
    fulfillmentTypesSupported?: Array<string> | null;
    /**
     * The GoodsType of the product (Physical, Digital, DigitalCredit....)
     * @type {string}
     * @memberof Product
     */
    goodsType?: string | null;
    /**
     * The list of Bundled products included in this product. This is only populated when ProductUsage=Bundle
     * @type {Array<BundledProduct>}
     * @memberof Product
     */
    bundledProducts?: Array<BundledProduct> | null;
    /**
     * 
     * @type {ProductContent}
     * @memberof Product
     */
    content?: ProductContent;
    /**
     * 
     * @type {ProductPurchasableState}
     * @memberof Product
     */
    purchasableState?: ProductPurchasableState;
    /**
     * If true, the product exists. If not, the product should not appear in search results.
     * @type {boolean}
     * @memberof Product
     */
    isActive?: boolean | null;
    /**
     * Represents the published state of the product returned. Valid values for ValueType are defined in PublishStateConst.
     * @type {string}
     * @memberof Product
     */
    publishState?: string | null;
    /**
     * 
     * @type {ProductPrice}
     * @memberof Product
     */
    price?: ProductPrice;
    /**
     * 
     * @type {ProductPriceRange}
     * @memberof Product
     */
    priceRange?: ProductPriceRange;
    /**
     * For products with bulk pricing... this will be populated with pricebands, depending on what options have been selected...
     * @type {Array<ProductVolumePrice>}
     * @memberof Product
     */
    volumePriceBands?: Array<ProductVolumePrice> | null;
    /**
     * 
     * @type {ProductPriceRange}
     * @memberof Product
     */
    volumePriceRange?: ProductPriceRange;
    /**
     * List of potential shipping discounts available for this product.
     * @type {Array<Discount>}
     * @memberof Product
     */
    availableShippingDiscounts?: Array<Discount> | null;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    productType?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Product
     */
    productTypeId?: number | null;
    /**
     * If true, the product is subject to tax.
     * @type {boolean}
     * @memberof Product
     */
    isTaxable?: boolean;
    /**
     * If true, the product can be purchased or fulfilled at regular intervals, for example, monthly billing or a subscription.
     * @type {boolean}
     * @memberof Product
     */
    isRecurring?: boolean;
    /**
     * 
     * @type {ProductPricingBehaviorInfo}
     * @memberof Product
     */
    pricingBehavior?: ProductPricingBehaviorInfo;
    /**
     * 
     * @type {ProductInventoryInfo}
     * @memberof Product
     */
    inventoryInfo?: ProductInventoryInfo;
    /**
     * When the product was created with the product admin resource.
     * @type {Date}
     * @memberof Product
     */
    createDate?: Date;
    /**
     * When the product was last modified with the product admin resource.
     * @type {Date}
     * @memberof Product
     */
    updateDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Product
     */
    dateFirstAvailableInCatalog?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Product
     */
    catalogStartDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Product
     */
    catalogEndDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof Product
     */
    daysAvailableInCatalog?: number | null;
    /**
     * UPC code of the product.
     * @type {string}
     * @memberof Product
     */
    upc?: string | null;
    /**
     * UPC code of the products (populated for configurable products).
     * @type {Array<string>}
     * @memberof Product
     */
    upCs?: Array<string> | null;
    /**
     * Manufacturer part number.
     * @type {string}
     * @memberof Product
     */
    mfgPartNumber?: string | null;
    /**
     * Manufacturer part numbers (populated for configurable products).
     * @type {Array<string>}
     * @memberof Product
     */
    mfgPartNumbers?: Array<string> | null;
    /**
     * When a configurable product has IsPurchasable=true on a GetProduct, this property will be populated for submission to cart.
     * @type {string}
     * @memberof Product
     */
    variationProductCode?: string | null;
    /**
     * List of categories to which this product belongs.
     * @type {Array<Category>}
     * @memberof Product
     */
    categories?: Array<Category> | null;
    /**
     * 
     * @type {PackageMeasurements}
     * @memberof Product
     */
    measurements?: PackageMeasurements;
    /**
     * Is this product shipped in its own package
     * @type {boolean}
     * @memberof Product
     */
    isPackagedStandAlone?: boolean | null;
    /**
     * List of product properties. These are attributes that might apply to multiple products, for example, price, size, manufacturer. These attributes cannot be configured by the shopper.
     * @type {Array<ProductProperty>}
     * @memberof Product
     */
    properties?: Array<ProductProperty> | null;
    /**
     * List of the product's configurable options and extras. 
     * Includes whether an option is configurable (for example, a T-shirt) or an Extra (for example, monogram or gift-wrapping).
     * @type {Array<ProductOption>}
     * @memberof Product
     */
    options?: Array<ProductOption> | null;
    /**
     * 
     * @type {Array<VariationSummary>}
     * @memberof Product
     */
    variations?: Array<VariationSummary> | null;
    /**
     * List of valid pricelists for the product
     * @type {Array<string>}
     * @memberof Product
     */
    validPriceLists?: Array<string> | null;
    /**
     * Any location code (eq) or array of location codes which are in stock.
     * @type {Array<string>}
     * @memberof Product
     */
    locationsInStock?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    slicingAttributeFQN?: string | null;
    /**
     * List of the image groups this product uses.
     * Image groups are used to map different images to different product options.
     * If the product doesn't have options then all images will be in the default
     * image group.
     * @type {Array<ProductImageGroup>}
     * @memberof Product
     */
    productImageGroups?: Array<ProductImageGroup> | null;
    /**
     * Readonly value of the selected value of the option corresponding to the Mozu.ProductRuntime.Contracts.Product.SlicingAttributeFQN
     * @type {string}
     * @memberof Product
     */
    sliceValue?: string | null;
    /**
     * List of product codes of product collections that this product is a member of.
     * @type {Array<ProductCollectionInfo>}
     * @memberof Product
     */
    productCollections?: Array<ProductCollectionInfo> | null;
    /**
     * list of member products that are part of the collection
     * This requires that the ProductUsage be set to Collection
     * @type {Array<ProductCollectionMember>}
     * @memberof Product
     */
    productCollectionMembers?: Array<ProductCollectionMember> | null;
    /**
     * Only used for indexing
     * @type {Array<ProductContent>}
     * @memberof Product
     */
    collectionMembersProductContent?: Array<ProductContent> | null;
    /**
     * The item's search engine relevancy score.
     * @type {number}
     * @memberof Product
     */
    score?: number;
    /**
     * 
     * @type {number}
     * @memberof Product
     */
    personalizationScore?: number;
}

/**
 * Check if a given object implements the Product interface.
 */
export function instanceOfProduct(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'purchaseLocation': !exists(json, 'purchaseLocation') ? undefined : json['purchaseLocation'],
        'productSequence': !exists(json, 'productSequence') ? undefined : json['productSequence'],
        'productUsage': !exists(json, 'productUsage') ? undefined : json['productUsage'],
        'fulfillmentTypesSupported': !exists(json, 'fulfillmentTypesSupported') ? undefined : json['fulfillmentTypesSupported'],
        'goodsType': !exists(json, 'goodsType') ? undefined : json['goodsType'],
        'bundledProducts': !exists(json, 'bundledProducts') ? undefined : (json['bundledProducts'] === null ? null : (json['bundledProducts'] as Array<any>).map(BundledProductFromJSON)),
        'content': !exists(json, 'content') ? undefined : ProductContentFromJSON(json['content']),
        'purchasableState': !exists(json, 'purchasableState') ? undefined : ProductPurchasableStateFromJSON(json['purchasableState']),
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'publishState': !exists(json, 'publishState') ? undefined : json['publishState'],
        'price': !exists(json, 'price') ? undefined : ProductPriceFromJSON(json['price']),
        'priceRange': !exists(json, 'priceRange') ? undefined : ProductPriceRangeFromJSON(json['priceRange']),
        'volumePriceBands': !exists(json, 'volumePriceBands') ? undefined : (json['volumePriceBands'] === null ? null : (json['volumePriceBands'] as Array<any>).map(ProductVolumePriceFromJSON)),
        'volumePriceRange': !exists(json, 'volumePriceRange') ? undefined : ProductPriceRangeFromJSON(json['volumePriceRange']),
        'availableShippingDiscounts': !exists(json, 'availableShippingDiscounts') ? undefined : (json['availableShippingDiscounts'] === null ? null : (json['availableShippingDiscounts'] as Array<any>).map(DiscountFromJSON)),
        'productType': !exists(json, 'productType') ? undefined : json['productType'],
        'productTypeId': !exists(json, 'productTypeId') ? undefined : json['productTypeId'],
        'isTaxable': !exists(json, 'isTaxable') ? undefined : json['isTaxable'],
        'isRecurring': !exists(json, 'isRecurring') ? undefined : json['isRecurring'],
        'pricingBehavior': !exists(json, 'pricingBehavior') ? undefined : ProductPricingBehaviorInfoFromJSON(json['pricingBehavior']),
        'inventoryInfo': !exists(json, 'inventoryInfo') ? undefined : ProductInventoryInfoFromJSON(json['inventoryInfo']),
        'createDate': !exists(json, 'createDate') ? undefined : (new Date(json['createDate'])),
        'updateDate': !exists(json, 'updateDate') ? undefined : (new Date(json['updateDate'])),
        'dateFirstAvailableInCatalog': !exists(json, 'dateFirstAvailableInCatalog') ? undefined : (json['dateFirstAvailableInCatalog'] === null ? null : new Date(json['dateFirstAvailableInCatalog'])),
        'catalogStartDate': !exists(json, 'catalogStartDate') ? undefined : (json['catalogStartDate'] === null ? null : new Date(json['catalogStartDate'])),
        'catalogEndDate': !exists(json, 'catalogEndDate') ? undefined : (json['catalogEndDate'] === null ? null : new Date(json['catalogEndDate'])),
        'daysAvailableInCatalog': !exists(json, 'daysAvailableInCatalog') ? undefined : json['daysAvailableInCatalog'],
        'upc': !exists(json, 'upc') ? undefined : json['upc'],
        'upCs': !exists(json, 'upCs') ? undefined : json['upCs'],
        'mfgPartNumber': !exists(json, 'mfgPartNumber') ? undefined : json['mfgPartNumber'],
        'mfgPartNumbers': !exists(json, 'mfgPartNumbers') ? undefined : json['mfgPartNumbers'],
        'variationProductCode': !exists(json, 'variationProductCode') ? undefined : json['variationProductCode'],
        'categories': !exists(json, 'categories') ? undefined : (json['categories'] === null ? null : (json['categories'] as Array<any>).map(CategoryFromJSON)),
        'measurements': !exists(json, 'measurements') ? undefined : PackageMeasurementsFromJSON(json['measurements']),
        'isPackagedStandAlone': !exists(json, 'isPackagedStandAlone') ? undefined : json['isPackagedStandAlone'],
        'properties': !exists(json, 'properties') ? undefined : (json['properties'] === null ? null : (json['properties'] as Array<any>).map(ProductPropertyFromJSON)),
        'options': !exists(json, 'options') ? undefined : (json['options'] === null ? null : (json['options'] as Array<any>).map(ProductOptionFromJSON)),
        'variations': !exists(json, 'variations') ? undefined : (json['variations'] === null ? null : (json['variations'] as Array<any>).map(VariationSummaryFromJSON)),
        'validPriceLists': !exists(json, 'validPriceLists') ? undefined : json['validPriceLists'],
        'locationsInStock': !exists(json, 'locationsInStock') ? undefined : json['locationsInStock'],
        'slicingAttributeFQN': !exists(json, 'slicingAttributeFQN') ? undefined : json['slicingAttributeFQN'],
        'productImageGroups': !exists(json, 'productImageGroups') ? undefined : (json['productImageGroups'] === null ? null : (json['productImageGroups'] as Array<any>).map(ProductImageGroupFromJSON)),
        'sliceValue': !exists(json, 'sliceValue') ? undefined : json['sliceValue'],
        'productCollections': !exists(json, 'productCollections') ? undefined : (json['productCollections'] === null ? null : (json['productCollections'] as Array<any>).map(ProductCollectionInfoFromJSON)),
        'productCollectionMembers': !exists(json, 'productCollectionMembers') ? undefined : (json['productCollectionMembers'] === null ? null : (json['productCollectionMembers'] as Array<any>).map(ProductCollectionMemberFromJSON)),
        'collectionMembersProductContent': !exists(json, 'collectionMembersProductContent') ? undefined : (json['collectionMembersProductContent'] === null ? null : (json['collectionMembersProductContent'] as Array<any>).map(ProductContentFromJSON)),
        'score': !exists(json, 'score') ? undefined : json['score'],
        'personalizationScore': !exists(json, 'personalizationScore') ? undefined : json['personalizationScore'],
    };
}

export function ProductToJSON(value?: Product | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productCode': value.productCode,
        'purchaseLocation': value.purchaseLocation,
        'productSequence': value.productSequence,
        'productUsage': value.productUsage,
        'fulfillmentTypesSupported': value.fulfillmentTypesSupported,
        'goodsType': value.goodsType,
        'bundledProducts': value.bundledProducts === undefined ? undefined : (value.bundledProducts === null ? null : (value.bundledProducts as Array<any>).map(BundledProductToJSON)),
        'content': ProductContentToJSON(value.content),
        'purchasableState': ProductPurchasableStateToJSON(value.purchasableState),
        'isActive': value.isActive,
        'publishState': value.publishState,
        'price': ProductPriceToJSON(value.price),
        'priceRange': ProductPriceRangeToJSON(value.priceRange),
        'volumePriceBands': value.volumePriceBands === undefined ? undefined : (value.volumePriceBands === null ? null : (value.volumePriceBands as Array<any>).map(ProductVolumePriceToJSON)),
        'volumePriceRange': ProductPriceRangeToJSON(value.volumePriceRange),
        'availableShippingDiscounts': value.availableShippingDiscounts === undefined ? undefined : (value.availableShippingDiscounts === null ? null : (value.availableShippingDiscounts as Array<any>).map(DiscountToJSON)),
        'productType': value.productType,
        'productTypeId': value.productTypeId,
        'isTaxable': value.isTaxable,
        'isRecurring': value.isRecurring,
        'pricingBehavior': ProductPricingBehaviorInfoToJSON(value.pricingBehavior),
        'inventoryInfo': ProductInventoryInfoToJSON(value.inventoryInfo),
        'createDate': value.createDate === undefined ? undefined : (value.createDate.toISOString()),
        'updateDate': value.updateDate === undefined ? undefined : (value.updateDate.toISOString()),
        'dateFirstAvailableInCatalog': value.dateFirstAvailableInCatalog === undefined ? undefined : (value.dateFirstAvailableInCatalog === null ? null : value.dateFirstAvailableInCatalog.toISOString()),
        'catalogStartDate': value.catalogStartDate === undefined ? undefined : (value.catalogStartDate === null ? null : value.catalogStartDate.toISOString()),
        'catalogEndDate': value.catalogEndDate === undefined ? undefined : (value.catalogEndDate === null ? null : value.catalogEndDate.toISOString()),
        'daysAvailableInCatalog': value.daysAvailableInCatalog,
        'upc': value.upc,
        'upCs': value.upCs,
        'mfgPartNumber': value.mfgPartNumber,
        'mfgPartNumbers': value.mfgPartNumbers,
        'variationProductCode': value.variationProductCode,
        'categories': value.categories === undefined ? undefined : (value.categories === null ? null : (value.categories as Array<any>).map(CategoryToJSON)),
        'measurements': PackageMeasurementsToJSON(value.measurements),
        'isPackagedStandAlone': value.isPackagedStandAlone,
        'properties': value.properties === undefined ? undefined : (value.properties === null ? null : (value.properties as Array<any>).map(ProductPropertyToJSON)),
        'options': value.options === undefined ? undefined : (value.options === null ? null : (value.options as Array<any>).map(ProductOptionToJSON)),
        'variations': value.variations === undefined ? undefined : (value.variations === null ? null : (value.variations as Array<any>).map(VariationSummaryToJSON)),
        'validPriceLists': value.validPriceLists,
        'locationsInStock': value.locationsInStock,
        'slicingAttributeFQN': value.slicingAttributeFQN,
        'productImageGroups': value.productImageGroups === undefined ? undefined : (value.productImageGroups === null ? null : (value.productImageGroups as Array<any>).map(ProductImageGroupToJSON)),
        'sliceValue': value.sliceValue,
        'productCollections': value.productCollections === undefined ? undefined : (value.productCollections === null ? null : (value.productCollections as Array<any>).map(ProductCollectionInfoToJSON)),
        'productCollectionMembers': value.productCollectionMembers === undefined ? undefined : (value.productCollectionMembers === null ? null : (value.productCollectionMembers as Array<any>).map(ProductCollectionMemberToJSON)),
        'collectionMembersProductContent': value.collectionMembersProductContent === undefined ? undefined : (value.collectionMembersProductContent === null ? null : (value.collectionMembersProductContent as Array<any>).map(ProductContentToJSON)),
        'score': value.score,
        'personalizationScore': value.personalizationScore,
    };
}

