/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CandidateCorrection } from './CandidateCorrection';
import {
    CandidateCorrectionFromJSON,
    CandidateCorrectionFromJSONTyped,
    CandidateCorrectionToJSON,
} from './CandidateCorrection';

/**
 * Spellcheck related results
 * @export
 * @interface CatalogRuntimesSpellcheck
 */
export interface CatalogRuntimesSpellcheck {
    /**
     * 
     * @type {Array<CandidateCorrection>}
     * @memberof CatalogRuntimesSpellcheck
     */
    candidateCorrections?: Array<CandidateCorrection> | null;
    /**
     * 
     * @type {boolean}
     * @memberof CatalogRuntimesSpellcheck
     */
    autoCorrected?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof CatalogRuntimesSpellcheck
     */
    originalQuery?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CatalogRuntimesSpellcheck
     */
    correctedQuery?: string | null;
}

/**
 * Check if a given object implements the CatalogRuntimesSpellcheck interface.
 */
export function instanceOfCatalogRuntimesSpellcheck(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CatalogRuntimesSpellcheckFromJSON(json: any): CatalogRuntimesSpellcheck {
    return CatalogRuntimesSpellcheckFromJSONTyped(json, false);
}

export function CatalogRuntimesSpellcheckFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogRuntimesSpellcheck {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'candidateCorrections': !exists(json, 'candidateCorrections') ? undefined : (json['candidateCorrections'] === null ? null : (json['candidateCorrections'] as Array<any>).map(CandidateCorrectionFromJSON)),
        'autoCorrected': !exists(json, 'autoCorrected') ? undefined : json['autoCorrected'],
        'originalQuery': !exists(json, 'originalQuery') ? undefined : json['originalQuery'],
        'correctedQuery': !exists(json, 'correctedQuery') ? undefined : json['correctedQuery'],
    };
}

export function CatalogRuntimesSpellcheckToJSON(value?: CatalogRuntimesSpellcheck | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'candidateCorrections': value.candidateCorrections === undefined ? undefined : (value.candidateCorrections === null ? null : (value.candidateCorrections as Array<any>).map(CandidateCorrectionToJSON)),
        'autoCorrected': value.autoCorrected,
        'originalQuery': value.originalQuery,
        'correctedQuery': value.correctedQuery,
    };
}

