/* tslint:disable */
/* eslint-disable */
/**
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CatalogRuntimesCategory } from './CatalogRuntimesCategory';
import {
    CatalogRuntimesCategoryFromJSON,
    CatalogRuntimesCategoryFromJSONTyped,
    CatalogRuntimesCategoryToJSON,
} from './CatalogRuntimesCategory';

/**
 * Collection of categories where categories are returned in a series of pages.
 * @export
 * @interface CatalogRuntimesCategoryPagedCollection
 */
export interface CatalogRuntimesCategoryPagedCollection {
    /**
     * 
     * @type {number}
     * @memberof CatalogRuntimesCategoryPagedCollection
     */
    startIndex?: number;
    /**
     * 
     * @type {number}
     * @memberof CatalogRuntimesCategoryPagedCollection
     */
    pageSize?: number;
    /**
     * 
     * @type {number}
     * @memberof CatalogRuntimesCategoryPagedCollection
     */
    pageCount?: number;
    /**
     * 
     * @type {number}
     * @memberof CatalogRuntimesCategoryPagedCollection
     */
    totalCount?: number;
    /**
     * 
     * @type {Array<CatalogRuntimesCategory>}
     * @memberof CatalogRuntimesCategoryPagedCollection
     */
    items?: Array<CatalogRuntimesCategory> | null;
}

/**
 * Check if a given object implements the CatalogRuntimesCategoryPagedCollection interface.
 */
export function instanceOfCatalogRuntimesCategoryPagedCollection(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CatalogRuntimesCategoryPagedCollectionFromJSON(json: any): CatalogRuntimesCategoryPagedCollection {
    return CatalogRuntimesCategoryPagedCollectionFromJSONTyped(json, false);
}

export function CatalogRuntimesCategoryPagedCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogRuntimesCategoryPagedCollection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startIndex': !exists(json, 'startIndex') ? undefined : json['startIndex'],
        'pageSize': !exists(json, 'pageSize') ? undefined : json['pageSize'],
        'pageCount': !exists(json, 'pageCount') ? undefined : json['pageCount'],
        'totalCount': !exists(json, 'totalCount') ? undefined : json['totalCount'],
        'items': !exists(json, 'items') ? undefined : (json['items'] === null ? null : (json['items'] as Array<any>).map(CatalogRuntimesCategoryFromJSON)),
    };
}

export function CatalogRuntimesCategoryPagedCollectionToJSON(value?: CatalogRuntimesCategoryPagedCollection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startIndex': value.startIndex,
        'pageSize': value.pageSize,
        'pageCount': value.pageCount,
        'totalCount': value.totalCount,
        'items': value.items === undefined ? undefined : (value.items === null ? null : (value.items as Array<any>).map(CatalogRuntimesCategoryToJSON)),
    };
}

