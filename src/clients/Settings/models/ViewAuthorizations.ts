/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ViewAuthorizations
 */
export interface ViewAuthorizations {
    /**
     * 
     * @type {boolean}
     * @memberof ViewAuthorizations
     */
    requireAuthForLive?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ViewAuthorizations
     */
    requireAuthForPending?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ViewAuthorizations
     */
    enforceSitewideSSL?: boolean | null;
}

/**
 * Check if a given object implements the ViewAuthorizations interface.
 */
export function instanceOfViewAuthorizations(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ViewAuthorizationsFromJSON(json: any): ViewAuthorizations {
    return ViewAuthorizationsFromJSONTyped(json, false);
}

export function ViewAuthorizationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewAuthorizations {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'requireAuthForLive': !exists(json, 'requireAuthForLive') ? undefined : json['requireAuthForLive'],
        'requireAuthForPending': !exists(json, 'requireAuthForPending') ? undefined : json['requireAuthForPending'],
        'enforceSitewideSSL': !exists(json, 'enforceSitewideSSL') ? undefined : json['enforceSitewideSSL'],
    };
}

export function ViewAuthorizationsToJSON(value?: ViewAuthorizations | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'requireAuthForLive': value.requireAuthForLive,
        'requireAuthForPending': value.requireAuthForPending,
        'enforceSitewideSSL': value.enforceSitewideSSL,
    };
}

