/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GatewayAccount } from './GatewayAccount';
import {
    GatewayAccountFromJSON,
    GatewayAccountFromJSONTyped,
    GatewayAccountToJSON,
} from './GatewayAccount';
import type { GatewayDefinition } from './GatewayDefinition';
import {
    GatewayDefinitionFromJSON,
    GatewayDefinitionFromJSONTyped,
    GatewayDefinitionToJSON,
} from './GatewayDefinition';
import type { SiteGatewaySupportedCard } from './SiteGatewaySupportedCard';
import {
    SiteGatewaySupportedCardFromJSON,
    SiteGatewaySupportedCardFromJSONTyped,
    SiteGatewaySupportedCardToJSON,
} from './SiteGatewaySupportedCard';

/**
 * 
 * @export
 * @interface Gateway
 */
export interface Gateway {
    /**
     * 
     * @type {GatewayDefinition}
     * @memberof Gateway
     */
    gatewayDefinition?: GatewayDefinition;
    /**
     * Returns true if Gateway CredentialsField is set. For security purposes, Gateway subresource CredentialFields will not be returned.
     * @type {boolean}
     * @memberof Gateway
     */
    areGatewayCredentialFieldsSet?: boolean;
    /**
     * 
     * @type {GatewayAccount}
     * @memberof Gateway
     */
    gatewayAccount?: GatewayAccount;
    /**
     * Which credit cards the Merchant supports
     * @type {Array<string>}
     * @memberof Gateway
     */
    supportedCards?: Array<string> | null;
    /**
     * Which credit cards the Merchant supports
     * @type {Array<SiteGatewaySupportedCard>}
     * @memberof Gateway
     */
    siteGatewaySupportedCards?: Array<SiteGatewaySupportedCard> | null;
}

/**
 * Check if a given object implements the Gateway interface.
 */
export function instanceOfGateway(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GatewayFromJSON(json: any): Gateway {
    return GatewayFromJSONTyped(json, false);
}

export function GatewayFromJSONTyped(json: any, ignoreDiscriminator: boolean): Gateway {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gatewayDefinition': !exists(json, 'gatewayDefinition') ? undefined : GatewayDefinitionFromJSON(json['gatewayDefinition']),
        'areGatewayCredentialFieldsSet': !exists(json, 'areGatewayCredentialFieldsSet') ? undefined : json['areGatewayCredentialFieldsSet'],
        'gatewayAccount': !exists(json, 'gatewayAccount') ? undefined : GatewayAccountFromJSON(json['gatewayAccount']),
        'supportedCards': !exists(json, 'supportedCards') ? undefined : json['supportedCards'],
        'siteGatewaySupportedCards': !exists(json, 'siteGatewaySupportedCards') ? undefined : (json['siteGatewaySupportedCards'] === null ? null : (json['siteGatewaySupportedCards'] as Array<any>).map(SiteGatewaySupportedCardFromJSON)),
    };
}

export function GatewayToJSON(value?: Gateway | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gatewayDefinition': GatewayDefinitionToJSON(value.gatewayDefinition),
        'areGatewayCredentialFieldsSet': value.areGatewayCredentialFieldsSet,
        'gatewayAccount': GatewayAccountToJSON(value.gatewayAccount),
        'supportedCards': value.supportedCards,
        'siteGatewaySupportedCards': value.siteGatewaySupportedCards === undefined ? undefined : (value.siteGatewaySupportedCards === null ? null : (value.siteGatewaySupportedCards as Array<any>).map(SiteGatewaySupportedCardToJSON)),
    };
}

