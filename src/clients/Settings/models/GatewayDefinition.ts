/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GatewayCredentialFieldDefinition } from './GatewayCredentialFieldDefinition';
import {
    GatewayCredentialFieldDefinitionFromJSON,
    GatewayCredentialFieldDefinitionFromJSONTyped,
    GatewayCredentialFieldDefinitionToJSON,
} from './GatewayCredentialFieldDefinition';
import type { PreAuthorizeDefinition } from './PreAuthorizeDefinition';
import {
    PreAuthorizeDefinitionFromJSON,
    PreAuthorizeDefinitionFromJSONTyped,
    PreAuthorizeDefinitionToJSON,
} from './PreAuthorizeDefinition';
import type { SupportedCard } from './SupportedCard';
import {
    SupportedCardFromJSON,
    SupportedCardFromJSONTyped,
    SupportedCardToJSON,
} from './SupportedCard';

/**
 * 
 * @export
 * @interface GatewayDefinition
 */
export interface GatewayDefinition {
    /**
     * 
     * @type {string}
     * @memberof GatewayDefinition
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GatewayDefinition
     */
    countryCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GatewayDefinition
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GatewayDefinition
     */
    prodServiceURL?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GatewayDefinition
     */
    testServiceURL?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GatewayDefinition
     */
    integrationImplTypeName?: string | null;
    /**
     * 
     * @type {Array<SupportedCard>}
     * @memberof GatewayDefinition
     */
    supportedCards?: Array<SupportedCard> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof GatewayDefinition
     */
    features?: Array<string> | null;
    /**
     * 
     * @type {Array<GatewayCredentialFieldDefinition>}
     * @memberof GatewayDefinition
     */
    credentialDefinitions?: Array<GatewayCredentialFieldDefinition> | null;
    /**
     * 
     * @type {PreAuthorizeDefinition}
     * @memberof GatewayDefinition
     */
    preAuthorizeDefinition?: PreAuthorizeDefinition;
    /**
     * 
     * @type {Array<object>}
     * @memberof GatewayDefinition
     */
    administationUi?: Array<object> | null;
}

/**
 * Check if a given object implements the GatewayDefinition interface.
 */
export function instanceOfGatewayDefinition(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GatewayDefinitionFromJSON(json: any): GatewayDefinition {
    return GatewayDefinitionFromJSONTyped(json, false);
}

export function GatewayDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayDefinition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'prodServiceURL': !exists(json, 'prodServiceURL') ? undefined : json['prodServiceURL'],
        'testServiceURL': !exists(json, 'testServiceURL') ? undefined : json['testServiceURL'],
        'integrationImplTypeName': !exists(json, 'integrationImplTypeName') ? undefined : json['integrationImplTypeName'],
        'supportedCards': !exists(json, 'supportedCards') ? undefined : (json['supportedCards'] === null ? null : (json['supportedCards'] as Array<any>).map(SupportedCardFromJSON)),
        'features': !exists(json, 'features') ? undefined : json['features'],
        'credentialDefinitions': !exists(json, 'credentialDefinitions') ? undefined : (json['credentialDefinitions'] === null ? null : (json['credentialDefinitions'] as Array<any>).map(GatewayCredentialFieldDefinitionFromJSON)),
        'preAuthorizeDefinition': !exists(json, 'preAuthorizeDefinition') ? undefined : PreAuthorizeDefinitionFromJSON(json['preAuthorizeDefinition']),
        'administationUi': !exists(json, 'administationUi') ? undefined : json['administationUi'],
    };
}

export function GatewayDefinitionToJSON(value?: GatewayDefinition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'countryCode': value.countryCode,
        'name': value.name,
        'prodServiceURL': value.prodServiceURL,
        'testServiceURL': value.testServiceURL,
        'integrationImplTypeName': value.integrationImplTypeName,
        'supportedCards': value.supportedCards === undefined ? undefined : (value.supportedCards === null ? null : (value.supportedCards as Array<any>).map(SupportedCardToJSON)),
        'features': value.features,
        'credentialDefinitions': value.credentialDefinitions === undefined ? undefined : (value.credentialDefinitions === null ? null : (value.credentialDefinitions as Array<any>).map(GatewayCredentialFieldDefinitionToJSON)),
        'preAuthorizeDefinition': PreAuthorizeDefinitionToJSON(value.preAuthorizeDefinition),
        'administationUi': value.administationUi,
    };
}

