/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SMSTransactionSettings
 */
export interface SMSTransactionSettings {
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    shipmentItemCanceled?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    shipmentAssigned?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    customerIntransit?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    customerAtCurbside?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    intransitConfirmation?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    shipmentFulfilled?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    orderConfirmation?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    curbsideReady?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    storeItemsCanceled?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    optOutAcknowledgement?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    orderPickupReady?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    orderPickupReminder?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof SMSTransactionSettings
     */
    customerAtStore?: boolean | null;
}

/**
 * Check if a given object implements the SMSTransactionSettings interface.
 */
export function instanceOfSMSTransactionSettings(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SMSTransactionSettingsFromJSON(json: any): SMSTransactionSettings {
    return SMSTransactionSettingsFromJSONTyped(json, false);
}

export function SMSTransactionSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SMSTransactionSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shipmentItemCanceled': !exists(json, 'shipmentItemCanceled') ? undefined : json['shipmentItemCanceled'],
        'shipmentAssigned': !exists(json, 'shipmentAssigned') ? undefined : json['shipmentAssigned'],
        'customerIntransit': !exists(json, 'customerIntransit') ? undefined : json['customerIntransit'],
        'customerAtCurbside': !exists(json, 'customerAtCurbside') ? undefined : json['customerAtCurbside'],
        'intransitConfirmation': !exists(json, 'intransitConfirmation') ? undefined : json['intransitConfirmation'],
        'shipmentFulfilled': !exists(json, 'shipmentFulfilled') ? undefined : json['shipmentFulfilled'],
        'orderConfirmation': !exists(json, 'orderConfirmation') ? undefined : json['orderConfirmation'],
        'curbsideReady': !exists(json, 'curbsideReady') ? undefined : json['curbsideReady'],
        'storeItemsCanceled': !exists(json, 'storeItemsCanceled') ? undefined : json['storeItemsCanceled'],
        'optOutAcknowledgement': !exists(json, 'optOutAcknowledgement') ? undefined : json['optOutAcknowledgement'],
        'orderPickupReady': !exists(json, 'orderPickupReady') ? undefined : json['orderPickupReady'],
        'orderPickupReminder': !exists(json, 'orderPickupReminder') ? undefined : json['orderPickupReminder'],
        'customerAtStore': !exists(json, 'customerAtStore') ? undefined : json['customerAtStore'],
    };
}

export function SMSTransactionSettingsToJSON(value?: SMSTransactionSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shipmentItemCanceled': value.shipmentItemCanceled,
        'shipmentAssigned': value.shipmentAssigned,
        'customerIntransit': value.customerIntransit,
        'customerAtCurbside': value.customerAtCurbside,
        'intransitConfirmation': value.intransitConfirmation,
        'shipmentFulfilled': value.shipmentFulfilled,
        'orderConfirmation': value.orderConfirmation,
        'curbsideReady': value.curbsideReady,
        'storeItemsCanceled': value.storeItemsCanceled,
        'optOutAcknowledgement': value.optOutAcknowledgement,
        'orderPickupReady': value.orderPickupReady,
        'orderPickupReminder': value.orderPickupReminder,
        'customerAtStore': value.customerAtStore,
    };
}

