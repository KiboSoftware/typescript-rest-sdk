/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TaxableTerritory
 */
export interface TaxableTerritory {
    /**
     * 
     * @type {string}
     * @memberof TaxableTerritory
     */
    countryCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TaxableTerritory
     */
    stateOrProvinceCode?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof TaxableTerritory
     */
    isShippingTaxable?: boolean | null;
}

/**
 * Check if a given object implements the TaxableTerritory interface.
 */
export function instanceOfTaxableTerritory(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaxableTerritoryFromJSON(json: any): TaxableTerritory {
    return TaxableTerritoryFromJSONTyped(json, false);
}

export function TaxableTerritoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxableTerritory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'stateOrProvinceCode': !exists(json, 'stateOrProvinceCode') ? undefined : json['stateOrProvinceCode'],
        'isShippingTaxable': !exists(json, 'isShippingTaxable') ? undefined : json['isShippingTaxable'],
    };
}

export function TaxableTerritoryToJSON(value?: TaxableTerritory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'countryCode': value.countryCode,
        'stateOrProvinceCode': value.stateOrProvinceCode,
        'isShippingTaxable': value.isShippingTaxable,
    };
}

