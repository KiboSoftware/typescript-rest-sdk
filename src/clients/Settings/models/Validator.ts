/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Validator
 */
export interface Validator {
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    pattern?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    listFqn?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    field?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    docId?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof Validator
     */
    values?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    attributeFQN?: string | null;
}

/**
 * Check if a given object implements the Validator interface.
 */
export function instanceOfValidator(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ValidatorFromJSON(json: any): Validator {
    return ValidatorFromJSONTyped(json, false);
}

export function ValidatorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Validator {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'pattern': !exists(json, 'pattern') ? undefined : json['pattern'],
        'listFqn': !exists(json, 'listFqn') ? undefined : json['listFqn'],
        'field': !exists(json, 'field') ? undefined : json['field'],
        'docId': !exists(json, 'docId') ? undefined : json['docId'],
        'values': !exists(json, 'values') ? undefined : json['values'],
        'attributeFQN': !exists(json, 'attributeFQN') ? undefined : json['attributeFQN'],
    };
}

export function ValidatorToJSON(value?: Validator | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'pattern': value.pattern,
        'listFqn': value.listFqn,
        'field': value.field,
        'docId': value.docId,
        'values': value.values,
        'attributeFQN': value.attributeFQN,
    };
}

