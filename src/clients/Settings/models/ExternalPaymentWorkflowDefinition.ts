/* tslint:disable */
/* eslint-disable */
/**
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ThirdPartyCredentialField } from './ThirdPartyCredentialField';
import {
    ThirdPartyCredentialFieldFromJSON,
    ThirdPartyCredentialFieldFromJSONTyped,
    ThirdPartyCredentialFieldToJSON,
} from './ThirdPartyCredentialField';

/**
 * This class describes credentials and enablement for the various third-party payment workflows that we will integrate with.
 * Examples include Paypal Express, Amazon Payments, Google Wallet, etc.
 * @export
 * @interface ExternalPaymentWorkflowDefinition
 */
export interface ExternalPaymentWorkflowDefinition {
    /**
     * Should be one of Contracts.Constants.ThirdPartyWorkflowNames.
     * @type {string}
     * @memberof ExternalPaymentWorkflowDefinition
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExternalPaymentWorkflowDefinition
     */
    namespace?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExternalPaymentWorkflowDefinition
     */
    fullyQualifiedName?: string | null;
    /**
     * Information about this definition for display purposes in the 'Payment and Checkout Settings'
     * admin ui.  This field may contain valid html tags
     * @type {string}
     * @memberof ExternalPaymentWorkflowDefinition
     */
    description?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ExternalPaymentWorkflowDefinition
     */
    isEnabled?: boolean;
    /**
     * Indicates if this is a legacy implementation using ARC only
     * or using the new extensible implementation.
     * @type {boolean}
     * @memberof ExternalPaymentWorkflowDefinition
     */
    isLegacy?: boolean | null;
    /**
     * 
     * @type {Array<ThirdPartyCredentialField>}
     * @memberof ExternalPaymentWorkflowDefinition
     */
    credentials?: Array<ThirdPartyCredentialField> | null;
}

/**
 * Check if a given object implements the ExternalPaymentWorkflowDefinition interface.
 */
export function instanceOfExternalPaymentWorkflowDefinition(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExternalPaymentWorkflowDefinitionFromJSON(json: any): ExternalPaymentWorkflowDefinition {
    return ExternalPaymentWorkflowDefinitionFromJSONTyped(json, false);
}

export function ExternalPaymentWorkflowDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalPaymentWorkflowDefinition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'namespace': !exists(json, 'namespace') ? undefined : json['namespace'],
        'fullyQualifiedName': !exists(json, 'fullyQualifiedName') ? undefined : json['fullyQualifiedName'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'isEnabled': !exists(json, 'isEnabled') ? undefined : json['isEnabled'],
        'isLegacy': !exists(json, 'isLegacy') ? undefined : json['isLegacy'],
        'credentials': !exists(json, 'credentials') ? undefined : (json['credentials'] === null ? null : (json['credentials'] as Array<any>).map(ThirdPartyCredentialFieldFromJSON)),
    };
}

export function ExternalPaymentWorkflowDefinitionToJSON(value?: ExternalPaymentWorkflowDefinition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'namespace': value.namespace,
        'fullyQualifiedName': value.fullyQualifiedName,
        'description': value.description,
        'isEnabled': value.isEnabled,
        'isLegacy': value.isLegacy,
        'credentials': value.credentials === undefined ? undefined : (value.credentials === null ? null : (value.credentials as Array<any>).map(ThirdPartyCredentialFieldToJSON)),
    };
}

